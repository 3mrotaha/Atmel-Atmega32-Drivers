
LCD_PRE_START.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005d7a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000010e  00800060  00005d7a  00005dee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000020c4  00000000  00000000  00005efc  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000be6  00000000  00000000  00007fc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000002a0  00000000  00000000  00008ba6  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000002f9  00000000  00000000  00008e46  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003b0b  00000000  00000000  0000913f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001bb6  00000000  00000000  0000cc4a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001bec  00000000  00000000  0000e800  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002c0  00000000  00000000  000103ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003ee  00000000  00000000  000106ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000028c4  00000000  00000000  00010a9a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  0001335e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea e7       	ldi	r30, 0x7A	; 122
      68:	fd e5       	ldi	r31, 0x5D	; 93
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ae 36       	cpi	r26, 0x6E	; 110
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 98 2d 	call	0x5b30	; 0x5b30 <main>
      7a:	0c 94 bb 2e 	jmp	0x5d76	; 0x5d76 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__ashldi3>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	df 93       	push	r29
      8a:	cf 93       	push	r28
      8c:	cd b7       	in	r28, 0x3d	; 61
      8e:	de b7       	in	r29, 0x3e	; 62
      90:	60 97       	sbiw	r28, 0x10	; 16
      92:	0f b6       	in	r0, 0x3f	; 63
      94:	f8 94       	cli
      96:	de bf       	out	0x3e, r29	; 62
      98:	0f be       	out	0x3f, r0	; 63
      9a:	cd bf       	out	0x3d, r28	; 61
      9c:	a8 2f       	mov	r26, r24
      9e:	00 23       	and	r16, r16
      a0:	09 f4       	brne	.+2      	; 0xa4 <__ashldi3+0x22>
      a2:	61 c0       	rjmp	.+194    	; 0x166 <__ashldi3+0xe4>
      a4:	7e 01       	movw	r14, r28
      a6:	08 94       	sec
      a8:	e1 1c       	adc	r14, r1
      aa:	f1 1c       	adc	r15, r1
      ac:	88 e0       	ldi	r24, 0x08	; 8
      ae:	f7 01       	movw	r30, r14
      b0:	11 92       	st	Z+, r1
      b2:	8a 95       	dec	r24
      b4:	e9 f7       	brne	.-6      	; 0xb0 <__ashldi3+0x2e>
      b6:	29 83       	std	Y+1, r18	; 0x01
      b8:	3a 83       	std	Y+2, r19	; 0x02
      ba:	4b 83       	std	Y+3, r20	; 0x03
      bc:	5c 83       	std	Y+4, r21	; 0x04
      be:	6d 83       	std	Y+5, r22	; 0x05
      c0:	7e 83       	std	Y+6, r23	; 0x06
      c2:	af 83       	std	Y+7, r26	; 0x07
      c4:	98 87       	std	Y+8, r25	; 0x08
      c6:	80 e2       	ldi	r24, 0x20	; 32
      c8:	80 1b       	sub	r24, r16
      ca:	e8 2f       	mov	r30, r24
      cc:	ff 27       	eor	r31, r31
      ce:	e7 fd       	sbrc	r30, 7
      d0:	f0 95       	com	r31
      d2:	49 81       	ldd	r20, Y+1	; 0x01
      d4:	5a 81       	ldd	r21, Y+2	; 0x02
      d6:	6b 81       	ldd	r22, Y+3	; 0x03
      d8:	7c 81       	ldd	r23, Y+4	; 0x04
      da:	18 16       	cp	r1, r24
      dc:	84 f0       	brlt	.+32     	; 0xfe <__ashldi3+0x7c>
      de:	19 86       	std	Y+9, r1	; 0x09
      e0:	1a 86       	std	Y+10, r1	; 0x0a
      e2:	1b 86       	std	Y+11, r1	; 0x0b
      e4:	1c 86       	std	Y+12, r1	; 0x0c
      e6:	88 27       	eor	r24, r24
      e8:	99 27       	eor	r25, r25
      ea:	8e 1b       	sub	r24, r30
      ec:	9f 0b       	sbc	r25, r31
      ee:	04 c0       	rjmp	.+8      	; 0xf8 <__ashldi3+0x76>
      f0:	44 0f       	add	r20, r20
      f2:	55 1f       	adc	r21, r21
      f4:	66 1f       	adc	r22, r22
      f6:	77 1f       	adc	r23, r23
      f8:	8a 95       	dec	r24
      fa:	d2 f7       	brpl	.-12     	; 0xf0 <__ashldi3+0x6e>
      fc:	28 c0       	rjmp	.+80     	; 0x14e <__ashldi3+0xcc>
      fe:	20 2f       	mov	r18, r16
     100:	33 27       	eor	r19, r19
     102:	27 fd       	sbrc	r18, 7
     104:	30 95       	com	r19
     106:	db 01       	movw	r26, r22
     108:	ca 01       	movw	r24, r20
     10a:	02 2e       	mov	r0, r18
     10c:	04 c0       	rjmp	.+8      	; 0x116 <__ashldi3+0x94>
     10e:	88 0f       	add	r24, r24
     110:	99 1f       	adc	r25, r25
     112:	aa 1f       	adc	r26, r26
     114:	bb 1f       	adc	r27, r27
     116:	0a 94       	dec	r0
     118:	d2 f7       	brpl	.-12     	; 0x10e <__ashldi3+0x8c>
     11a:	89 87       	std	Y+9, r24	; 0x09
     11c:	9a 87       	std	Y+10, r25	; 0x0a
     11e:	ab 87       	std	Y+11, r26	; 0x0b
     120:	bc 87       	std	Y+12, r27	; 0x0c
     122:	04 c0       	rjmp	.+8      	; 0x12c <__ashldi3+0xaa>
     124:	76 95       	lsr	r23
     126:	67 95       	ror	r22
     128:	57 95       	ror	r21
     12a:	47 95       	ror	r20
     12c:	ea 95       	dec	r30
     12e:	d2 f7       	brpl	.-12     	; 0x124 <__ashldi3+0xa2>
     130:	8d 81       	ldd	r24, Y+5	; 0x05
     132:	9e 81       	ldd	r25, Y+6	; 0x06
     134:	af 81       	ldd	r26, Y+7	; 0x07
     136:	b8 85       	ldd	r27, Y+8	; 0x08
     138:	04 c0       	rjmp	.+8      	; 0x142 <__ashldi3+0xc0>
     13a:	88 0f       	add	r24, r24
     13c:	99 1f       	adc	r25, r25
     13e:	aa 1f       	adc	r26, r26
     140:	bb 1f       	adc	r27, r27
     142:	2a 95       	dec	r18
     144:	d2 f7       	brpl	.-12     	; 0x13a <__ashldi3+0xb8>
     146:	48 2b       	or	r20, r24
     148:	59 2b       	or	r21, r25
     14a:	6a 2b       	or	r22, r26
     14c:	7b 2b       	or	r23, r27
     14e:	4d 87       	std	Y+13, r20	; 0x0d
     150:	5e 87       	std	Y+14, r21	; 0x0e
     152:	6f 87       	std	Y+15, r22	; 0x0f
     154:	78 8b       	std	Y+16, r23	; 0x10
     156:	29 85       	ldd	r18, Y+9	; 0x09
     158:	3a 85       	ldd	r19, Y+10	; 0x0a
     15a:	4b 85       	ldd	r20, Y+11	; 0x0b
     15c:	5c 85       	ldd	r21, Y+12	; 0x0c
     15e:	6d 85       	ldd	r22, Y+13	; 0x0d
     160:	7e 85       	ldd	r23, Y+14	; 0x0e
     162:	af 85       	ldd	r26, Y+15	; 0x0f
     164:	98 89       	ldd	r25, Y+16	; 0x10
     166:	8a 2f       	mov	r24, r26
     168:	60 96       	adiw	r28, 0x10	; 16
     16a:	0f b6       	in	r0, 0x3f	; 63
     16c:	f8 94       	cli
     16e:	de bf       	out	0x3e, r29	; 62
     170:	0f be       	out	0x3f, r0	; 63
     172:	cd bf       	out	0x3d, r28	; 61
     174:	cf 91       	pop	r28
     176:	df 91       	pop	r29
     178:	0f 91       	pop	r16
     17a:	ff 90       	pop	r15
     17c:	ef 90       	pop	r14
     17e:	08 95       	ret

00000180 <__fixunssfsi>:
     180:	ef 92       	push	r14
     182:	ff 92       	push	r15
     184:	0f 93       	push	r16
     186:	1f 93       	push	r17
     188:	7b 01       	movw	r14, r22
     18a:	8c 01       	movw	r16, r24
     18c:	20 e0       	ldi	r18, 0x00	; 0
     18e:	30 e0       	ldi	r19, 0x00	; 0
     190:	40 e0       	ldi	r20, 0x00	; 0
     192:	5f e4       	ldi	r21, 0x4F	; 79
     194:	0e 94 c9 16 	call	0x2d92	; 0x2d92 <__gesf2>
     198:	88 23       	and	r24, r24
     19a:	8c f0       	brlt	.+34     	; 0x1be <__fixunssfsi+0x3e>
     19c:	c8 01       	movw	r24, r16
     19e:	b7 01       	movw	r22, r14
     1a0:	20 e0       	ldi	r18, 0x00	; 0
     1a2:	30 e0       	ldi	r19, 0x00	; 0
     1a4:	40 e0       	ldi	r20, 0x00	; 0
     1a6:	5f e4       	ldi	r21, 0x4F	; 79
     1a8:	0e 94 95 14 	call	0x292a	; 0x292a <__subsf3>
     1ac:	0e 94 87 17 	call	0x2f0e	; 0x2f0e <__fixsfsi>
     1b0:	9b 01       	movw	r18, r22
     1b2:	ac 01       	movw	r20, r24
     1b4:	20 50       	subi	r18, 0x00	; 0
     1b6:	30 40       	sbci	r19, 0x00	; 0
     1b8:	40 40       	sbci	r20, 0x00	; 0
     1ba:	50 48       	sbci	r21, 0x80	; 128
     1bc:	06 c0       	rjmp	.+12     	; 0x1ca <__fixunssfsi+0x4a>
     1be:	c8 01       	movw	r24, r16
     1c0:	b7 01       	movw	r22, r14
     1c2:	0e 94 87 17 	call	0x2f0e	; 0x2f0e <__fixsfsi>
     1c6:	9b 01       	movw	r18, r22
     1c8:	ac 01       	movw	r20, r24
     1ca:	b9 01       	movw	r22, r18
     1cc:	ca 01       	movw	r24, r20
     1ce:	1f 91       	pop	r17
     1d0:	0f 91       	pop	r16
     1d2:	ff 90       	pop	r15
     1d4:	ef 90       	pop	r14
     1d6:	08 95       	ret

000001d8 <__fixsfdi>:
     1d8:	ef 92       	push	r14
     1da:	ff 92       	push	r15
     1dc:	0f 93       	push	r16
     1de:	1f 93       	push	r17
     1e0:	7b 01       	movw	r14, r22
     1e2:	8c 01       	movw	r16, r24
     1e4:	20 e0       	ldi	r18, 0x00	; 0
     1e6:	30 e0       	ldi	r19, 0x00	; 0
     1e8:	40 e0       	ldi	r20, 0x00	; 0
     1ea:	50 e0       	ldi	r21, 0x00	; 0
     1ec:	0e 94 f9 16 	call	0x2df2	; 0x2df2 <__ltsf2>
     1f0:	88 23       	and	r24, r24
     1f2:	0c f0       	brlt	.+2      	; 0x1f6 <__fixsfdi+0x1e>
     1f4:	5c c0       	rjmp	.+184    	; 0x2ae <__fixsfdi+0xd6>
     1f6:	c8 01       	movw	r24, r16
     1f8:	b7 01       	movw	r22, r14
     1fa:	90 58       	subi	r25, 0x80	; 128
     1fc:	0e 94 60 01 	call	0x2c0	; 0x2c0 <__fixunssfdi>
     200:	21 95       	neg	r18
     202:	e1 e0       	ldi	r30, 0x01	; 1
     204:	12 16       	cp	r1, r18
     206:	08 f0       	brcs	.+2      	; 0x20a <__fixsfdi+0x32>
     208:	e0 e0       	ldi	r30, 0x00	; 0
     20a:	31 95       	neg	r19
     20c:	f1 e0       	ldi	r31, 0x01	; 1
     20e:	13 16       	cp	r1, r19
     210:	08 f0       	brcs	.+2      	; 0x214 <__fixsfdi+0x3c>
     212:	f0 e0       	ldi	r31, 0x00	; 0
     214:	e3 2e       	mov	r14, r19
     216:	ee 1a       	sub	r14, r30
     218:	e1 e0       	ldi	r30, 0x01	; 1
     21a:	3e 15       	cp	r19, r14
     21c:	08 f0       	brcs	.+2      	; 0x220 <__fixsfdi+0x48>
     21e:	e0 e0       	ldi	r30, 0x00	; 0
     220:	fe 2b       	or	r31, r30
     222:	41 95       	neg	r20
     224:	a1 e0       	ldi	r26, 0x01	; 1
     226:	14 16       	cp	r1, r20
     228:	08 f0       	brcs	.+2      	; 0x22c <__fixsfdi+0x54>
     22a:	a0 e0       	ldi	r26, 0x00	; 0
     22c:	f4 2e       	mov	r15, r20
     22e:	ff 1a       	sub	r15, r31
     230:	e1 e0       	ldi	r30, 0x01	; 1
     232:	4f 15       	cp	r20, r15
     234:	08 f0       	brcs	.+2      	; 0x238 <__fixsfdi+0x60>
     236:	e0 e0       	ldi	r30, 0x00	; 0
     238:	ae 2b       	or	r26, r30
     23a:	51 95       	neg	r21
     23c:	f1 e0       	ldi	r31, 0x01	; 1
     23e:	15 16       	cp	r1, r21
     240:	08 f0       	brcs	.+2      	; 0x244 <__fixsfdi+0x6c>
     242:	f0 e0       	ldi	r31, 0x00	; 0
     244:	05 2f       	mov	r16, r21
     246:	0a 1b       	sub	r16, r26
     248:	e1 e0       	ldi	r30, 0x01	; 1
     24a:	50 17       	cp	r21, r16
     24c:	08 f0       	brcs	.+2      	; 0x250 <__fixsfdi+0x78>
     24e:	e0 e0       	ldi	r30, 0x00	; 0
     250:	fe 2b       	or	r31, r30
     252:	61 95       	neg	r22
     254:	a1 e0       	ldi	r26, 0x01	; 1
     256:	16 16       	cp	r1, r22
     258:	08 f0       	brcs	.+2      	; 0x25c <__fixsfdi+0x84>
     25a:	a0 e0       	ldi	r26, 0x00	; 0
     25c:	16 2f       	mov	r17, r22
     25e:	1f 1b       	sub	r17, r31
     260:	e1 e0       	ldi	r30, 0x01	; 1
     262:	61 17       	cp	r22, r17
     264:	08 f0       	brcs	.+2      	; 0x268 <__fixsfdi+0x90>
     266:	e0 e0       	ldi	r30, 0x00	; 0
     268:	ae 2b       	or	r26, r30
     26a:	71 95       	neg	r23
     26c:	f1 e0       	ldi	r31, 0x01	; 1
     26e:	17 16       	cp	r1, r23
     270:	08 f0       	brcs	.+2      	; 0x274 <__fixsfdi+0x9c>
     272:	f0 e0       	ldi	r31, 0x00	; 0
     274:	b7 2f       	mov	r27, r23
     276:	ba 1b       	sub	r27, r26
     278:	e1 e0       	ldi	r30, 0x01	; 1
     27a:	7b 17       	cp	r23, r27
     27c:	08 f0       	brcs	.+2      	; 0x280 <__fixsfdi+0xa8>
     27e:	e0 e0       	ldi	r30, 0x00	; 0
     280:	fe 2b       	or	r31, r30
     282:	81 95       	neg	r24
     284:	a1 e0       	ldi	r26, 0x01	; 1
     286:	18 16       	cp	r1, r24
     288:	08 f0       	brcs	.+2      	; 0x28c <__fixsfdi+0xb4>
     28a:	a0 e0       	ldi	r26, 0x00	; 0
     28c:	38 2f       	mov	r19, r24
     28e:	3f 1b       	sub	r19, r31
     290:	f3 2f       	mov	r31, r19
     292:	e1 e0       	ldi	r30, 0x01	; 1
     294:	83 17       	cp	r24, r19
     296:	08 f0       	brcs	.+2      	; 0x29a <__fixsfdi+0xc2>
     298:	e0 e0       	ldi	r30, 0x00	; 0
     29a:	ae 2b       	or	r26, r30
     29c:	91 95       	neg	r25
     29e:	3e 2d       	mov	r19, r14
     2a0:	4f 2d       	mov	r20, r15
     2a2:	50 2f       	mov	r21, r16
     2a4:	61 2f       	mov	r22, r17
     2a6:	7b 2f       	mov	r23, r27
     2a8:	8f 2f       	mov	r24, r31
     2aa:	9a 1b       	sub	r25, r26
     2ac:	04 c0       	rjmp	.+8      	; 0x2b6 <__fixsfdi+0xde>
     2ae:	c8 01       	movw	r24, r16
     2b0:	b7 01       	movw	r22, r14
     2b2:	0e 94 60 01 	call	0x2c0	; 0x2c0 <__fixunssfdi>
     2b6:	1f 91       	pop	r17
     2b8:	0f 91       	pop	r16
     2ba:	ff 90       	pop	r15
     2bc:	ef 90       	pop	r14
     2be:	08 95       	ret

000002c0 <__fixunssfdi>:
     2c0:	a0 e0       	ldi	r26, 0x00	; 0
     2c2:	b0 e0       	ldi	r27, 0x00	; 0
     2c4:	e6 e6       	ldi	r30, 0x66	; 102
     2c6:	f1 e0       	ldi	r31, 0x01	; 1
     2c8:	0c 94 84 2e 	jmp	0x5d08	; 0x5d08 <__prologue_saves__>
     2cc:	7b 01       	movw	r14, r22
     2ce:	8c 01       	movw	r16, r24
     2d0:	20 e0       	ldi	r18, 0x00	; 0
     2d2:	30 e0       	ldi	r19, 0x00	; 0
     2d4:	40 e8       	ldi	r20, 0x80	; 128
     2d6:	5f e3       	ldi	r21, 0x3F	; 63
     2d8:	0e 94 f9 16 	call	0x2df2	; 0x2df2 <__ltsf2>
     2dc:	88 23       	and	r24, r24
     2de:	4c f4       	brge	.+18     	; 0x2f2 <__fixunssfdi+0x32>
     2e0:	aa 24       	eor	r10, r10
     2e2:	bb 24       	eor	r11, r11
     2e4:	cc 24       	eor	r12, r12
     2e6:	dd 24       	eor	r13, r13
     2e8:	ee 24       	eor	r14, r14
     2ea:	ff 24       	eor	r15, r15
     2ec:	00 e0       	ldi	r16, 0x00	; 0
     2ee:	10 e0       	ldi	r17, 0x00	; 0
     2f0:	86 c0       	rjmp	.+268    	; 0x3fe <__fixunssfdi+0x13e>
     2f2:	c8 01       	movw	r24, r16
     2f4:	b7 01       	movw	r22, r14
     2f6:	20 e0       	ldi	r18, 0x00	; 0
     2f8:	30 e0       	ldi	r19, 0x00	; 0
     2fa:	40 e8       	ldi	r20, 0x80	; 128
     2fc:	5f e4       	ldi	r21, 0x4F	; 79
     2fe:	0e 94 f9 16 	call	0x2df2	; 0x2df2 <__ltsf2>
     302:	88 23       	and	r24, r24
     304:	54 f4       	brge	.+20     	; 0x31a <__fixunssfdi+0x5a>
     306:	c8 01       	movw	r24, r16
     308:	b7 01       	movw	r22, r14
     30a:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
     30e:	5b 01       	movw	r10, r22
     310:	6c 01       	movw	r12, r24
     312:	ee 24       	eor	r14, r14
     314:	ff 24       	eor	r15, r15
     316:	87 01       	movw	r16, r14
     318:	72 c0       	rjmp	.+228    	; 0x3fe <__fixunssfdi+0x13e>
     31a:	c8 01       	movw	r24, r16
     31c:	b7 01       	movw	r22, r14
     31e:	20 e0       	ldi	r18, 0x00	; 0
     320:	30 e0       	ldi	r19, 0x00	; 0
     322:	40 e8       	ldi	r20, 0x80	; 128
     324:	5f e5       	ldi	r21, 0x5F	; 95
     326:	0e 94 f9 16 	call	0x2df2	; 0x2df2 <__ltsf2>
     32a:	87 fd       	sbrc	r24, 7
     32c:	0f c0       	rjmp	.+30     	; 0x34c <__fixunssfdi+0x8c>
     32e:	aa 24       	eor	r10, r10
     330:	aa 94       	dec	r10
     332:	bb 24       	eor	r11, r11
     334:	ba 94       	dec	r11
     336:	cc 24       	eor	r12, r12
     338:	ca 94       	dec	r12
     33a:	dd 24       	eor	r13, r13
     33c:	da 94       	dec	r13
     33e:	ee 24       	eor	r14, r14
     340:	ea 94       	dec	r14
     342:	ff 24       	eor	r15, r15
     344:	fa 94       	dec	r15
     346:	0f ef       	ldi	r16, 0xFF	; 255
     348:	1f ef       	ldi	r17, 0xFF	; 255
     34a:	59 c0       	rjmp	.+178    	; 0x3fe <__fixunssfdi+0x13e>
     34c:	c8 01       	movw	r24, r16
     34e:	b7 01       	movw	r22, r14
     350:	20 e0       	ldi	r18, 0x00	; 0
     352:	30 e0       	ldi	r19, 0x00	; 0
     354:	40 e8       	ldi	r20, 0x80	; 128
     356:	5f e2       	ldi	r21, 0x2F	; 47
     358:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
     35c:	7b 01       	movw	r14, r22
     35e:	8c 01       	movw	r16, r24
     360:	22 24       	eor	r2, r2
     362:	33 24       	eor	r3, r3
     364:	21 01       	movw	r4, r2
     366:	90 e1       	ldi	r25, 0x10	; 16
     368:	a9 2e       	mov	r10, r25
     36a:	b1 2c       	mov	r11, r1
     36c:	c1 2c       	mov	r12, r1
     36e:	d1 2c       	mov	r13, r1
     370:	c0 e0       	ldi	r28, 0x00	; 0
     372:	d0 e0       	ldi	r29, 0x00	; 0
     374:	61 e0       	ldi	r22, 0x01	; 1
     376:	70 e0       	ldi	r23, 0x00	; 0
     378:	80 e0       	ldi	r24, 0x00	; 0
     37a:	90 e0       	ldi	r25, 0x00	; 0
     37c:	0a 2c       	mov	r0, r10
     37e:	04 c0       	rjmp	.+8      	; 0x388 <__fixunssfdi+0xc8>
     380:	66 0f       	add	r22, r22
     382:	77 1f       	adc	r23, r23
     384:	88 1f       	adc	r24, r24
     386:	99 1f       	adc	r25, r25
     388:	0a 94       	dec	r0
     38a:	d2 f7       	brpl	.-12     	; 0x380 <__fixunssfdi+0xc0>
     38c:	0e 94 db 17 	call	0x2fb6	; 0x2fb6 <__floatunsisf>
     390:	3b 01       	movw	r6, r22
     392:	4c 01       	movw	r8, r24
     394:	c8 01       	movw	r24, r16
     396:	b7 01       	movw	r22, r14
     398:	a4 01       	movw	r20, r8
     39a:	93 01       	movw	r18, r6
     39c:	0e 94 c9 16 	call	0x2d92	; 0x2d92 <__gesf2>
     3a0:	88 23       	and	r24, r24
     3a2:	64 f0       	brlt	.+24     	; 0x3bc <__fixunssfdi+0xfc>
     3a4:	2a 28       	or	r2, r10
     3a6:	3b 28       	or	r3, r11
     3a8:	4c 28       	or	r4, r12
     3aa:	5d 28       	or	r5, r13
     3ac:	c8 01       	movw	r24, r16
     3ae:	b7 01       	movw	r22, r14
     3b0:	a4 01       	movw	r20, r8
     3b2:	93 01       	movw	r18, r6
     3b4:	0e 94 ed 15 	call	0x2bda	; 0x2bda <__divsf3>
     3b8:	7b 01       	movw	r14, r22
     3ba:	8c 01       	movw	r16, r24
     3bc:	d6 94       	lsr	r13
     3be:	c7 94       	ror	r12
     3c0:	b7 94       	ror	r11
     3c2:	a7 94       	ror	r10
     3c4:	21 96       	adiw	r28, 0x01	; 1
     3c6:	c5 30       	cpi	r28, 0x05	; 5
     3c8:	d1 05       	cpc	r29, r1
     3ca:	a1 f6       	brne	.-88     	; 0x374 <__fixunssfdi+0xb4>
     3cc:	c8 01       	movw	r24, r16
     3ce:	b7 01       	movw	r22, r14
     3d0:	20 e0       	ldi	r18, 0x00	; 0
     3d2:	30 e0       	ldi	r19, 0x00	; 0
     3d4:	40 e8       	ldi	r20, 0x80	; 128
     3d6:	5f e4       	ldi	r21, 0x4F	; 79
     3d8:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
     3dc:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
     3e0:	5b 01       	movw	r10, r22
     3e2:	6c 01       	movw	r12, r24
     3e4:	9b 01       	movw	r18, r22
     3e6:	a6 01       	movw	r20, r12
     3e8:	60 e0       	ldi	r22, 0x00	; 0
     3ea:	70 e0       	ldi	r23, 0x00	; 0
     3ec:	80 e0       	ldi	r24, 0x00	; 0
     3ee:	90 e0       	ldi	r25, 0x00	; 0
     3f0:	02 2d       	mov	r16, r2
     3f2:	0e 94 41 00 	call	0x82	; 0x82 <__ashldi3>
     3f6:	59 01       	movw	r10, r18
     3f8:	6a 01       	movw	r12, r20
     3fa:	7b 01       	movw	r14, r22
     3fc:	8c 01       	movw	r16, r24
     3fe:	95 01       	movw	r18, r10
     400:	a6 01       	movw	r20, r12
     402:	b7 01       	movw	r22, r14
     404:	c8 01       	movw	r24, r16
     406:	cd b7       	in	r28, 0x3d	; 61
     408:	de b7       	in	r29, 0x3e	; 62
     40a:	e2 e1       	ldi	r30, 0x12	; 18
     40c:	0c 94 a0 2e 	jmp	0x5d40	; 0x5d40 <__epilogue_restores__>

00000410 <__floatundisf>:
     410:	a2 e0       	ldi	r26, 0x02	; 2
     412:	b0 e0       	ldi	r27, 0x00	; 0
     414:	ee e0       	ldi	r30, 0x0E	; 14
     416:	f2 e0       	ldi	r31, 0x02	; 2
     418:	0c 94 84 2e 	jmp	0x5d08	; 0x5d08 <__prologue_saves__>
     41c:	12 2f       	mov	r17, r18
     41e:	b3 2e       	mov	r11, r19
     420:	a4 2e       	mov	r10, r20
     422:	95 2e       	mov	r9, r21
     424:	86 2e       	mov	r8, r22
     426:	37 2e       	mov	r3, r23
     428:	28 2e       	mov	r2, r24
     42a:	9a 83       	std	Y+2, r25	; 0x02
     42c:	c2 2e       	mov	r12, r18
     42e:	d3 2e       	mov	r13, r19
     430:	e4 2e       	mov	r14, r20
     432:	f5 2e       	mov	r15, r21
     434:	a7 01       	movw	r20, r14
     436:	96 01       	movw	r18, r12
     438:	60 e0       	ldi	r22, 0x00	; 0
     43a:	70 e0       	ldi	r23, 0x00	; 0
     43c:	80 e0       	ldi	r24, 0x00	; 0
     43e:	90 e0       	ldi	r25, 0x00	; 0
     440:	21 17       	cp	r18, r17
     442:	a1 f4       	brne	.+40     	; 0x46c <__floatundisf+0x5c>
     444:	3b 15       	cp	r19, r11
     446:	91 f4       	brne	.+36     	; 0x46c <__floatundisf+0x5c>
     448:	4a 15       	cp	r20, r10
     44a:	81 f4       	brne	.+32     	; 0x46c <__floatundisf+0x5c>
     44c:	59 15       	cp	r21, r9
     44e:	71 f4       	brne	.+28     	; 0x46c <__floatundisf+0x5c>
     450:	68 15       	cp	r22, r8
     452:	61 f4       	brne	.+24     	; 0x46c <__floatundisf+0x5c>
     454:	73 15       	cp	r23, r3
     456:	51 f4       	brne	.+20     	; 0x46c <__floatundisf+0x5c>
     458:	82 15       	cp	r24, r2
     45a:	41 f4       	brne	.+16     	; 0x46c <__floatundisf+0x5c>
     45c:	aa 81       	ldd	r26, Y+2	; 0x02
     45e:	9a 17       	cp	r25, r26
     460:	29 f4       	brne	.+10     	; 0x46c <__floatundisf+0x5c>
     462:	c7 01       	movw	r24, r14
     464:	b6 01       	movw	r22, r12
     466:	0e 94 db 17 	call	0x2fb6	; 0x2fb6 <__floatunsisf>
     46a:	aa c0       	rjmp	.+340    	; 0x5c0 <__floatundisf+0x1b0>
     46c:	21 2f       	mov	r18, r17
     46e:	3b 2d       	mov	r19, r11
     470:	4a 2d       	mov	r20, r10
     472:	59 2d       	mov	r21, r9
     474:	68 2d       	mov	r22, r8
     476:	73 2d       	mov	r23, r3
     478:	82 2d       	mov	r24, r2
     47a:	9a 81       	ldd	r25, Y+2	; 0x02
     47c:	00 e2       	ldi	r16, 0x20	; 32
     47e:	0e 94 54 18 	call	0x30a8	; 0x30a8 <__lshrdi3>
     482:	c9 01       	movw	r24, r18
     484:	da 01       	movw	r26, r20
     486:	80 30       	cpi	r24, 0x00	; 0
     488:	e0 e0       	ldi	r30, 0x00	; 0
     48a:	9e 07       	cpc	r25, r30
     48c:	e1 e0       	ldi	r30, 0x01	; 1
     48e:	ae 07       	cpc	r26, r30
     490:	e0 e0       	ldi	r30, 0x00	; 0
     492:	be 07       	cpc	r27, r30
     494:	80 f4       	brcc	.+32     	; 0x4b6 <__floatundisf+0xa6>
     496:	8f 3f       	cpi	r24, 0xFF	; 255
     498:	91 05       	cpc	r25, r1
     49a:	a1 05       	cpc	r26, r1
     49c:	b1 05       	cpc	r27, r1
     49e:	31 f0       	breq	.+12     	; 0x4ac <__floatundisf+0x9c>
     4a0:	28 f0       	brcs	.+10     	; 0x4ac <__floatundisf+0x9c>
     4a2:	28 e0       	ldi	r18, 0x08	; 8
     4a4:	30 e0       	ldi	r19, 0x00	; 0
     4a6:	40 e0       	ldi	r20, 0x00	; 0
     4a8:	50 e0       	ldi	r21, 0x00	; 0
     4aa:	16 c0       	rjmp	.+44     	; 0x4d8 <__floatundisf+0xc8>
     4ac:	20 e0       	ldi	r18, 0x00	; 0
     4ae:	30 e0       	ldi	r19, 0x00	; 0
     4b0:	40 e0       	ldi	r20, 0x00	; 0
     4b2:	50 e0       	ldi	r21, 0x00	; 0
     4b4:	11 c0       	rjmp	.+34     	; 0x4d8 <__floatundisf+0xc8>
     4b6:	80 30       	cpi	r24, 0x00	; 0
     4b8:	f0 e0       	ldi	r31, 0x00	; 0
     4ba:	9f 07       	cpc	r25, r31
     4bc:	f0 e0       	ldi	r31, 0x00	; 0
     4be:	af 07       	cpc	r26, r31
     4c0:	f1 e0       	ldi	r31, 0x01	; 1
     4c2:	bf 07       	cpc	r27, r31
     4c4:	28 f0       	brcs	.+10     	; 0x4d0 <__floatundisf+0xc0>
     4c6:	28 e1       	ldi	r18, 0x18	; 24
     4c8:	30 e0       	ldi	r19, 0x00	; 0
     4ca:	40 e0       	ldi	r20, 0x00	; 0
     4cc:	50 e0       	ldi	r21, 0x00	; 0
     4ce:	04 c0       	rjmp	.+8      	; 0x4d8 <__floatundisf+0xc8>
     4d0:	20 e1       	ldi	r18, 0x10	; 16
     4d2:	30 e0       	ldi	r19, 0x00	; 0
     4d4:	40 e0       	ldi	r20, 0x00	; 0
     4d6:	50 e0       	ldi	r21, 0x00	; 0
     4d8:	02 2e       	mov	r0, r18
     4da:	04 c0       	rjmp	.+8      	; 0x4e4 <__floatundisf+0xd4>
     4dc:	b6 95       	lsr	r27
     4de:	a7 95       	ror	r26
     4e0:	97 95       	ror	r25
     4e2:	87 95       	ror	r24
     4e4:	0a 94       	dec	r0
     4e6:	d2 f7       	brpl	.-12     	; 0x4dc <__floatundisf+0xcc>
     4e8:	fc 01       	movw	r30, r24
     4ea:	e2 59       	subi	r30, 0x92	; 146
     4ec:	ff 4f       	sbci	r31, 0xFF	; 255
     4ee:	80 81       	ld	r24, Z
     4f0:	29 01       	movw	r4, r18
     4f2:	3a 01       	movw	r6, r20
     4f4:	48 0e       	add	r4, r24
     4f6:	51 1c       	adc	r5, r1
     4f8:	61 1c       	adc	r6, r1
     4fa:	71 1c       	adc	r7, r1
     4fc:	49 82       	std	Y+1, r4	; 0x01
     4fe:	21 2f       	mov	r18, r17
     500:	3b 2d       	mov	r19, r11
     502:	4a 2d       	mov	r20, r10
     504:	59 2d       	mov	r21, r9
     506:	68 2d       	mov	r22, r8
     508:	73 2d       	mov	r23, r3
     50a:	82 2d       	mov	r24, r2
     50c:	9a 81       	ldd	r25, Y+2	; 0x02
     50e:	04 2d       	mov	r16, r4
     510:	0e 94 54 18 	call	0x30a8	; 0x30a8 <__lshrdi3>
     514:	c9 01       	movw	r24, r18
     516:	da 01       	movw	r26, r20
     518:	4c 01       	movw	r8, r24
     51a:	5d 01       	movw	r10, r26
     51c:	80 e2       	ldi	r24, 0x20	; 32
     51e:	90 e0       	ldi	r25, 0x00	; 0
     520:	84 19       	sub	r24, r4
     522:	95 09       	sbc	r25, r5
     524:	04 c0       	rjmp	.+8      	; 0x52e <__floatundisf+0x11e>
     526:	cc 0c       	add	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	ee 1c       	adc	r14, r14
     52c:	ff 1c       	adc	r15, r15
     52e:	8a 95       	dec	r24
     530:	d2 f7       	brpl	.-12     	; 0x526 <__floatundisf+0x116>
     532:	c1 14       	cp	r12, r1
     534:	d1 04       	cpc	r13, r1
     536:	e1 04       	cpc	r14, r1
     538:	f1 04       	cpc	r15, r1
     53a:	41 f0       	breq	.+16     	; 0x54c <__floatundisf+0x13c>
     53c:	81 e0       	ldi	r24, 0x01	; 1
     53e:	90 e0       	ldi	r25, 0x00	; 0
     540:	a0 e0       	ldi	r26, 0x00	; 0
     542:	b0 e0       	ldi	r27, 0x00	; 0
     544:	88 2a       	or	r8, r24
     546:	99 2a       	or	r9, r25
     548:	aa 2a       	or	r10, r26
     54a:	bb 2a       	or	r11, r27
     54c:	90 e2       	ldi	r25, 0x20	; 32
     54e:	49 16       	cp	r4, r25
     550:	51 04       	cpc	r5, r1
     552:	61 04       	cpc	r6, r1
     554:	71 04       	cpc	r7, r1
     556:	59 f4       	brne	.+22     	; 0x56e <__floatundisf+0x15e>
     558:	0f 2e       	mov	r0, r31
     55a:	f0 e0       	ldi	r31, 0x00	; 0
     55c:	ef 2e       	mov	r14, r31
     55e:	f0 e0       	ldi	r31, 0x00	; 0
     560:	ff 2e       	mov	r15, r31
     562:	f0 e8       	ldi	r31, 0x80	; 128
     564:	0f 2f       	mov	r16, r31
     566:	ff e4       	ldi	r31, 0x4F	; 79
     568:	1f 2f       	mov	r17, r31
     56a:	f0 2d       	mov	r31, r0
     56c:	21 c0       	rjmp	.+66     	; 0x5b0 <__floatundisf+0x1a0>
     56e:	af e1       	ldi	r26, 0x1F	; 31
     570:	4a 16       	cp	r4, r26
     572:	51 04       	cpc	r5, r1
     574:	61 04       	cpc	r6, r1
     576:	71 04       	cpc	r7, r1
     578:	59 f4       	brne	.+22     	; 0x590 <__floatundisf+0x180>
     57a:	0f 2e       	mov	r0, r31
     57c:	f0 e0       	ldi	r31, 0x00	; 0
     57e:	ef 2e       	mov	r14, r31
     580:	f0 e0       	ldi	r31, 0x00	; 0
     582:	ff 2e       	mov	r15, r31
     584:	f0 e0       	ldi	r31, 0x00	; 0
     586:	0f 2f       	mov	r16, r31
     588:	ff e4       	ldi	r31, 0x4F	; 79
     58a:	1f 2f       	mov	r17, r31
     58c:	f0 2d       	mov	r31, r0
     58e:	10 c0       	rjmp	.+32     	; 0x5b0 <__floatundisf+0x1a0>
     590:	61 e0       	ldi	r22, 0x01	; 1
     592:	70 e0       	ldi	r23, 0x00	; 0
     594:	80 e0       	ldi	r24, 0x00	; 0
     596:	90 e0       	ldi	r25, 0x00	; 0
     598:	09 80       	ldd	r0, Y+1	; 0x01
     59a:	04 c0       	rjmp	.+8      	; 0x5a4 <__floatundisf+0x194>
     59c:	66 0f       	add	r22, r22
     59e:	77 1f       	adc	r23, r23
     5a0:	88 1f       	adc	r24, r24
     5a2:	99 1f       	adc	r25, r25
     5a4:	0a 94       	dec	r0
     5a6:	d2 f7       	brpl	.-12     	; 0x59c <__floatundisf+0x18c>
     5a8:	0e 94 29 17 	call	0x2e52	; 0x2e52 <__floatsisf>
     5ac:	7b 01       	movw	r14, r22
     5ae:	8c 01       	movw	r16, r24
     5b0:	c5 01       	movw	r24, r10
     5b2:	b4 01       	movw	r22, r8
     5b4:	0e 94 db 17 	call	0x2fb6	; 0x2fb6 <__floatunsisf>
     5b8:	a8 01       	movw	r20, r16
     5ba:	97 01       	movw	r18, r14
     5bc:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
     5c0:	22 96       	adiw	r28, 0x02	; 2
     5c2:	e2 e1       	ldi	r30, 0x12	; 18
     5c4:	0c 94 a0 2e 	jmp	0x5d40	; 0x5d40 <__epilogue_restores__>

000005c8 <__divdi3>:
     5c8:	a2 e7       	ldi	r26, 0x72	; 114
     5ca:	b0 e0       	ldi	r27, 0x00	; 0
     5cc:	ea ee       	ldi	r30, 0xEA	; 234
     5ce:	f2 e0       	ldi	r31, 0x02	; 2
     5d0:	0c 94 84 2e 	jmp	0x5d08	; 0x5d08 <__prologue_saves__>
     5d4:	98 2e       	mov	r9, r24
     5d6:	89 2e       	mov	r8, r25
     5d8:	71 2e       	mov	r7, r17
     5da:	88 e0       	ldi	r24, 0x08	; 8
     5dc:	fe 01       	movw	r30, r28
     5de:	31 96       	adiw	r30, 0x01	; 1
     5e0:	df 01       	movw	r26, r30
     5e2:	68 2e       	mov	r6, r24
     5e4:	1d 92       	st	X+, r1
     5e6:	6a 94       	dec	r6
     5e8:	e9 f7       	brne	.-6      	; 0x5e4 <__divdi3+0x1c>
     5ea:	29 83       	std	Y+1, r18	; 0x01
     5ec:	3a 83       	std	Y+2, r19	; 0x02
     5ee:	4b 83       	std	Y+3, r20	; 0x03
     5f0:	5c 83       	std	Y+4, r21	; 0x04
     5f2:	6d 83       	std	Y+5, r22	; 0x05
     5f4:	7e 83       	std	Y+6, r23	; 0x06
     5f6:	9f 82       	std	Y+7, r9	; 0x07
     5f8:	98 87       	std	Y+8, r25	; 0x08
     5fa:	fe 01       	movw	r30, r28
     5fc:	39 96       	adiw	r30, 0x09	; 9
     5fe:	df 01       	movw	r26, r30
     600:	1d 92       	st	X+, r1
     602:	8a 95       	dec	r24
     604:	e9 f7       	brne	.-6      	; 0x600 <__divdi3+0x38>
     606:	a9 86       	std	Y+9, r10	; 0x09
     608:	ba 86       	std	Y+10, r11	; 0x0a
     60a:	cb 86       	std	Y+11, r12	; 0x0b
     60c:	dc 86       	std	Y+12, r13	; 0x0c
     60e:	ed 86       	std	Y+13, r14	; 0x0d
     610:	fe 86       	std	Y+14, r15	; 0x0e
     612:	0f 87       	std	Y+15, r16	; 0x0f
     614:	18 8b       	std	Y+16, r17	; 0x10
     616:	8d 81       	ldd	r24, Y+5	; 0x05
     618:	9e 81       	ldd	r25, Y+6	; 0x06
     61a:	af 81       	ldd	r26, Y+7	; 0x07
     61c:	b8 85       	ldd	r27, Y+8	; 0x08
     61e:	b7 fd       	sbrc	r27, 7
     620:	07 c0       	rjmp	.+14     	; 0x630 <__divdi3+0x68>
     622:	e1 96       	adiw	r28, 0x31	; 49
     624:	1c ae       	std	Y+60, r1	; 0x3c
     626:	1d ae       	std	Y+61, r1	; 0x3d
     628:	1e ae       	std	Y+62, r1	; 0x3e
     62a:	1f ae       	std	Y+63, r1	; 0x3f
     62c:	e1 97       	sbiw	r28, 0x31	; 49
     62e:	64 c0       	rjmp	.+200    	; 0x6f8 <__divdi3+0x130>
     630:	21 95       	neg	r18
     632:	81 e0       	ldi	r24, 0x01	; 1
     634:	12 16       	cp	r1, r18
     636:	08 f0       	brcs	.+2      	; 0x63a <__divdi3+0x72>
     638:	80 e0       	ldi	r24, 0x00	; 0
     63a:	31 95       	neg	r19
     63c:	91 e0       	ldi	r25, 0x01	; 1
     63e:	13 16       	cp	r1, r19
     640:	08 f0       	brcs	.+2      	; 0x644 <__divdi3+0x7c>
     642:	90 e0       	ldi	r25, 0x00	; 0
     644:	b3 2f       	mov	r27, r19
     646:	b8 1b       	sub	r27, r24
     648:	81 e0       	ldi	r24, 0x01	; 1
     64a:	3b 17       	cp	r19, r27
     64c:	08 f0       	brcs	.+2      	; 0x650 <__divdi3+0x88>
     64e:	80 e0       	ldi	r24, 0x00	; 0
     650:	98 2b       	or	r25, r24
     652:	41 95       	neg	r20
     654:	31 e0       	ldi	r19, 0x01	; 1
     656:	14 16       	cp	r1, r20
     658:	08 f0       	brcs	.+2      	; 0x65c <__divdi3+0x94>
     65a:	30 e0       	ldi	r19, 0x00	; 0
     65c:	a4 2f       	mov	r26, r20
     65e:	a9 1b       	sub	r26, r25
     660:	81 e0       	ldi	r24, 0x01	; 1
     662:	4a 17       	cp	r20, r26
     664:	08 f0       	brcs	.+2      	; 0x668 <__divdi3+0xa0>
     666:	80 e0       	ldi	r24, 0x00	; 0
     668:	38 2b       	or	r19, r24
     66a:	51 95       	neg	r21
     66c:	91 e0       	ldi	r25, 0x01	; 1
     66e:	15 16       	cp	r1, r21
     670:	08 f0       	brcs	.+2      	; 0x674 <__divdi3+0xac>
     672:	90 e0       	ldi	r25, 0x00	; 0
     674:	f5 2f       	mov	r31, r21
     676:	f3 1b       	sub	r31, r19
     678:	81 e0       	ldi	r24, 0x01	; 1
     67a:	5f 17       	cp	r21, r31
     67c:	08 f0       	brcs	.+2      	; 0x680 <__divdi3+0xb8>
     67e:	80 e0       	ldi	r24, 0x00	; 0
     680:	98 2b       	or	r25, r24
     682:	61 95       	neg	r22
     684:	31 e0       	ldi	r19, 0x01	; 1
     686:	16 16       	cp	r1, r22
     688:	08 f0       	brcs	.+2      	; 0x68c <__divdi3+0xc4>
     68a:	30 e0       	ldi	r19, 0x00	; 0
     68c:	e6 2f       	mov	r30, r22
     68e:	e9 1b       	sub	r30, r25
     690:	81 e0       	ldi	r24, 0x01	; 1
     692:	6e 17       	cp	r22, r30
     694:	08 f0       	brcs	.+2      	; 0x698 <__divdi3+0xd0>
     696:	80 e0       	ldi	r24, 0x00	; 0
     698:	38 2b       	or	r19, r24
     69a:	71 95       	neg	r23
     69c:	41 e0       	ldi	r20, 0x01	; 1
     69e:	17 16       	cp	r1, r23
     6a0:	08 f0       	brcs	.+2      	; 0x6a4 <__divdi3+0xdc>
     6a2:	40 e0       	ldi	r20, 0x00	; 0
     6a4:	57 2f       	mov	r21, r23
     6a6:	53 1b       	sub	r21, r19
     6a8:	81 e0       	ldi	r24, 0x01	; 1
     6aa:	75 17       	cp	r23, r21
     6ac:	08 f0       	brcs	.+2      	; 0x6b0 <__divdi3+0xe8>
     6ae:	80 e0       	ldi	r24, 0x00	; 0
     6b0:	48 2b       	or	r20, r24
     6b2:	89 2d       	mov	r24, r9
     6b4:	81 95       	neg	r24
     6b6:	91 e0       	ldi	r25, 0x01	; 1
     6b8:	18 16       	cp	r1, r24
     6ba:	08 f0       	brcs	.+2      	; 0x6be <__divdi3+0xf6>
     6bc:	90 e0       	ldi	r25, 0x00	; 0
     6be:	68 2e       	mov	r6, r24
     6c0:	64 1a       	sub	r6, r20
     6c2:	46 2d       	mov	r20, r6
     6c4:	31 e0       	ldi	r19, 0x01	; 1
     6c6:	86 15       	cp	r24, r6
     6c8:	08 f0       	brcs	.+2      	; 0x6cc <__divdi3+0x104>
     6ca:	30 e0       	ldi	r19, 0x00	; 0
     6cc:	93 2b       	or	r25, r19
     6ce:	88 2d       	mov	r24, r8
     6d0:	81 95       	neg	r24
     6d2:	89 1b       	sub	r24, r25
     6d4:	29 83       	std	Y+1, r18	; 0x01
     6d6:	ba 83       	std	Y+2, r27	; 0x02
     6d8:	ab 83       	std	Y+3, r26	; 0x03
     6da:	fc 83       	std	Y+4, r31	; 0x04
     6dc:	ed 83       	std	Y+5, r30	; 0x05
     6de:	5e 83       	std	Y+6, r21	; 0x06
     6e0:	4f 83       	std	Y+7, r20	; 0x07
     6e2:	88 87       	std	Y+8, r24	; 0x08
     6e4:	2f ef       	ldi	r18, 0xFF	; 255
     6e6:	3f ef       	ldi	r19, 0xFF	; 255
     6e8:	4f ef       	ldi	r20, 0xFF	; 255
     6ea:	5f ef       	ldi	r21, 0xFF	; 255
     6ec:	e1 96       	adiw	r28, 0x31	; 49
     6ee:	2c af       	std	Y+60, r18	; 0x3c
     6f0:	3d af       	std	Y+61, r19	; 0x3d
     6f2:	4e af       	std	Y+62, r20	; 0x3e
     6f4:	5f af       	std	Y+63, r21	; 0x3f
     6f6:	e1 97       	sbiw	r28, 0x31	; 49
     6f8:	8d 85       	ldd	r24, Y+13	; 0x0d
     6fa:	9e 85       	ldd	r25, Y+14	; 0x0e
     6fc:	af 85       	ldd	r26, Y+15	; 0x0f
     6fe:	b8 89       	ldd	r27, Y+16	; 0x10
     700:	b7 ff       	sbrs	r27, 7
     702:	6a c0       	rjmp	.+212    	; 0x7d8 <__divdi3+0x210>
     704:	e1 96       	adiw	r28, 0x31	; 49
     706:	4c ad       	ldd	r20, Y+60	; 0x3c
     708:	5d ad       	ldd	r21, Y+61	; 0x3d
     70a:	6e ad       	ldd	r22, Y+62	; 0x3e
     70c:	7f ad       	ldd	r23, Y+63	; 0x3f
     70e:	e1 97       	sbiw	r28, 0x31	; 49
     710:	40 95       	com	r20
     712:	50 95       	com	r21
     714:	60 95       	com	r22
     716:	70 95       	com	r23
     718:	e1 96       	adiw	r28, 0x31	; 49
     71a:	4c af       	std	Y+60, r20	; 0x3c
     71c:	5d af       	std	Y+61, r21	; 0x3d
     71e:	6e af       	std	Y+62, r22	; 0x3e
     720:	7f af       	std	Y+63, r23	; 0x3f
     722:	e1 97       	sbiw	r28, 0x31	; 49
     724:	a1 94       	neg	r10
     726:	81 e0       	ldi	r24, 0x01	; 1
     728:	1a 14       	cp	r1, r10
     72a:	08 f0       	brcs	.+2      	; 0x72e <__divdi3+0x166>
     72c:	80 e0       	ldi	r24, 0x00	; 0
     72e:	b1 94       	neg	r11
     730:	91 e0       	ldi	r25, 0x01	; 1
     732:	1b 14       	cp	r1, r11
     734:	08 f0       	brcs	.+2      	; 0x738 <__divdi3+0x170>
     736:	90 e0       	ldi	r25, 0x00	; 0
     738:	6b 2d       	mov	r22, r11
     73a:	68 1b       	sub	r22, r24
     73c:	81 e0       	ldi	r24, 0x01	; 1
     73e:	b6 16       	cp	r11, r22
     740:	08 f0       	brcs	.+2      	; 0x744 <__divdi3+0x17c>
     742:	80 e0       	ldi	r24, 0x00	; 0
     744:	98 2b       	or	r25, r24
     746:	c1 94       	neg	r12
     748:	21 e0       	ldi	r18, 0x01	; 1
     74a:	1c 14       	cp	r1, r12
     74c:	08 f0       	brcs	.+2      	; 0x750 <__divdi3+0x188>
     74e:	20 e0       	ldi	r18, 0x00	; 0
     750:	5c 2d       	mov	r21, r12
     752:	59 1b       	sub	r21, r25
     754:	81 e0       	ldi	r24, 0x01	; 1
     756:	c5 16       	cp	r12, r21
     758:	08 f0       	brcs	.+2      	; 0x75c <__divdi3+0x194>
     75a:	80 e0       	ldi	r24, 0x00	; 0
     75c:	28 2b       	or	r18, r24
     75e:	d1 94       	neg	r13
     760:	91 e0       	ldi	r25, 0x01	; 1
     762:	1d 14       	cp	r1, r13
     764:	08 f0       	brcs	.+2      	; 0x768 <__divdi3+0x1a0>
     766:	90 e0       	ldi	r25, 0x00	; 0
     768:	4d 2d       	mov	r20, r13
     76a:	42 1b       	sub	r20, r18
     76c:	81 e0       	ldi	r24, 0x01	; 1
     76e:	d4 16       	cp	r13, r20
     770:	08 f0       	brcs	.+2      	; 0x774 <__divdi3+0x1ac>
     772:	80 e0       	ldi	r24, 0x00	; 0
     774:	98 2b       	or	r25, r24
     776:	e1 94       	neg	r14
     778:	21 e0       	ldi	r18, 0x01	; 1
     77a:	1e 14       	cp	r1, r14
     77c:	08 f0       	brcs	.+2      	; 0x780 <__divdi3+0x1b8>
     77e:	20 e0       	ldi	r18, 0x00	; 0
     780:	3e 2d       	mov	r19, r14
     782:	39 1b       	sub	r19, r25
     784:	81 e0       	ldi	r24, 0x01	; 1
     786:	e3 16       	cp	r14, r19
     788:	08 f0       	brcs	.+2      	; 0x78c <__divdi3+0x1c4>
     78a:	80 e0       	ldi	r24, 0x00	; 0
     78c:	28 2b       	or	r18, r24
     78e:	f1 94       	neg	r15
     790:	91 e0       	ldi	r25, 0x01	; 1
     792:	1f 14       	cp	r1, r15
     794:	08 f0       	brcs	.+2      	; 0x798 <__divdi3+0x1d0>
     796:	90 e0       	ldi	r25, 0x00	; 0
     798:	7f 2d       	mov	r23, r15
     79a:	72 1b       	sub	r23, r18
     79c:	27 2f       	mov	r18, r23
     79e:	81 e0       	ldi	r24, 0x01	; 1
     7a0:	f7 16       	cp	r15, r23
     7a2:	08 f0       	brcs	.+2      	; 0x7a6 <__divdi3+0x1de>
     7a4:	80 e0       	ldi	r24, 0x00	; 0
     7a6:	98 2b       	or	r25, r24
     7a8:	01 95       	neg	r16
     7aa:	11 e0       	ldi	r17, 0x01	; 1
     7ac:	10 16       	cp	r1, r16
     7ae:	08 f0       	brcs	.+2      	; 0x7b2 <__divdi3+0x1ea>
     7b0:	10 e0       	ldi	r17, 0x00	; 0
     7b2:	80 2f       	mov	r24, r16
     7b4:	89 1b       	sub	r24, r25
     7b6:	98 2f       	mov	r25, r24
     7b8:	81 e0       	ldi	r24, 0x01	; 1
     7ba:	09 17       	cp	r16, r25
     7bc:	08 f0       	brcs	.+2      	; 0x7c0 <__divdi3+0x1f8>
     7be:	80 e0       	ldi	r24, 0x00	; 0
     7c0:	18 2b       	or	r17, r24
     7c2:	87 2d       	mov	r24, r7
     7c4:	81 95       	neg	r24
     7c6:	81 1b       	sub	r24, r17
     7c8:	a9 86       	std	Y+9, r10	; 0x09
     7ca:	6a 87       	std	Y+10, r22	; 0x0a
     7cc:	5b 87       	std	Y+11, r21	; 0x0b
     7ce:	4c 87       	std	Y+12, r20	; 0x0c
     7d0:	3d 87       	std	Y+13, r19	; 0x0d
     7d2:	2e 87       	std	Y+14, r18	; 0x0e
     7d4:	9f 87       	std	Y+15, r25	; 0x0f
     7d6:	88 8b       	std	Y+16, r24	; 0x10
     7d8:	99 81       	ldd	r25, Y+1	; 0x01
     7da:	2a 81       	ldd	r18, Y+2	; 0x02
     7dc:	3b 81       	ldd	r19, Y+3	; 0x03
     7de:	4c 81       	ldd	r20, Y+4	; 0x04
     7e0:	5d 81       	ldd	r21, Y+5	; 0x05
     7e2:	6e 81       	ldd	r22, Y+6	; 0x06
     7e4:	7f 81       	ldd	r23, Y+7	; 0x07
     7e6:	a8 85       	ldd	r26, Y+8	; 0x08
     7e8:	b9 85       	ldd	r27, Y+9	; 0x09
     7ea:	1a 85       	ldd	r17, Y+10	; 0x0a
     7ec:	0b 85       	ldd	r16, Y+11	; 0x0b
     7ee:	fc 84       	ldd	r15, Y+12	; 0x0c
     7f0:	ed 84       	ldd	r14, Y+13	; 0x0d
     7f2:	de 84       	ldd	r13, Y+14	; 0x0e
     7f4:	cf 84       	ldd	r12, Y+15	; 0x0f
     7f6:	b8 88       	ldd	r11, Y+16	; 0x10
     7f8:	88 e0       	ldi	r24, 0x08	; 8
     7fa:	e1 e1       	ldi	r30, 0x11	; 17
     7fc:	8e 2e       	mov	r8, r30
     7fe:	91 2c       	mov	r9, r1
     800:	8c 0e       	add	r8, r28
     802:	9d 1e       	adc	r9, r29
     804:	f4 01       	movw	r30, r8
     806:	68 2e       	mov	r6, r24
     808:	11 92       	st	Z+, r1
     80a:	6a 94       	dec	r6
     80c:	e9 f7       	brne	.-6      	; 0x808 <__divdi3+0x240>
     80e:	99 8b       	std	Y+17, r25	; 0x11
     810:	2a 8b       	std	Y+18, r18	; 0x12
     812:	3b 8b       	std	Y+19, r19	; 0x13
     814:	4c 8b       	std	Y+20, r20	; 0x14
     816:	5d 8b       	std	Y+21, r21	; 0x15
     818:	6e 8b       	std	Y+22, r22	; 0x16
     81a:	7f 8b       	std	Y+23, r23	; 0x17
     81c:	a8 8f       	std	Y+24, r26	; 0x18
     81e:	9e 01       	movw	r18, r28
     820:	27 5e       	subi	r18, 0xE7	; 231
     822:	3f 4f       	sbci	r19, 0xFF	; 255
     824:	f9 01       	movw	r30, r18
     826:	11 92       	st	Z+, r1
     828:	8a 95       	dec	r24
     82a:	e9 f7       	brne	.-6      	; 0x826 <__divdi3+0x25e>
     82c:	b9 8f       	std	Y+25, r27	; 0x19
     82e:	1a 8f       	std	Y+26, r17	; 0x1a
     830:	0b 8f       	std	Y+27, r16	; 0x1b
     832:	fc 8e       	std	Y+28, r15	; 0x1c
     834:	ed 8e       	std	Y+29, r14	; 0x1d
     836:	de 8e       	std	Y+30, r13	; 0x1e
     838:	cf 8e       	std	Y+31, r12	; 0x1f
     83a:	b8 a2       	std	Y+32, r11	; 0x20
     83c:	29 8c       	ldd	r2, Y+25	; 0x19
     83e:	3a 8c       	ldd	r3, Y+26	; 0x1a
     840:	4b 8c       	ldd	r4, Y+27	; 0x1b
     842:	5c 8c       	ldd	r5, Y+28	; 0x1c
     844:	ed 8c       	ldd	r14, Y+29	; 0x1d
     846:	fe 8c       	ldd	r15, Y+30	; 0x1e
     848:	0f 8d       	ldd	r16, Y+31	; 0x1f
     84a:	18 a1       	ldd	r17, Y+32	; 0x20
     84c:	69 88       	ldd	r6, Y+17	; 0x11
     84e:	7a 88       	ldd	r7, Y+18	; 0x12
     850:	8b 88       	ldd	r8, Y+19	; 0x13
     852:	9c 88       	ldd	r9, Y+20	; 0x14
     854:	21 96       	adiw	r28, 0x01	; 1
     856:	6c ae       	std	Y+60, r6	; 0x3c
     858:	7d ae       	std	Y+61, r7	; 0x3d
     85a:	8e ae       	std	Y+62, r8	; 0x3e
     85c:	9f ae       	std	Y+63, r9	; 0x3f
     85e:	21 97       	sbiw	r28, 0x01	; 1
     860:	6d 88       	ldd	r6, Y+21	; 0x15
     862:	7e 88       	ldd	r7, Y+22	; 0x16
     864:	8f 88       	ldd	r8, Y+23	; 0x17
     866:	98 8c       	ldd	r9, Y+24	; 0x18
     868:	e1 14       	cp	r14, r1
     86a:	f1 04       	cpc	r15, r1
     86c:	01 05       	cpc	r16, r1
     86e:	11 05       	cpc	r17, r1
     870:	09 f0       	breq	.+2      	; 0x874 <__stack+0x15>
     872:	d9 c3       	rjmp	.+1970   	; 0x1026 <__stack+0x7c7>
     874:	62 14       	cp	r6, r2
     876:	73 04       	cpc	r7, r3
     878:	84 04       	cpc	r8, r4
     87a:	95 04       	cpc	r9, r5
     87c:	08 f0       	brcs	.+2      	; 0x880 <__stack+0x21>
     87e:	57 c1       	rjmp	.+686    	; 0xb2e <__stack+0x2cf>
     880:	00 e0       	ldi	r16, 0x00	; 0
     882:	20 16       	cp	r2, r16
     884:	00 e0       	ldi	r16, 0x00	; 0
     886:	30 06       	cpc	r3, r16
     888:	01 e0       	ldi	r16, 0x01	; 1
     88a:	40 06       	cpc	r4, r16
     88c:	00 e0       	ldi	r16, 0x00	; 0
     88e:	50 06       	cpc	r5, r16
     890:	88 f4       	brcc	.+34     	; 0x8b4 <__stack+0x55>
     892:	1f ef       	ldi	r17, 0xFF	; 255
     894:	21 16       	cp	r2, r17
     896:	31 04       	cpc	r3, r1
     898:	41 04       	cpc	r4, r1
     89a:	51 04       	cpc	r5, r1
     89c:	39 f0       	breq	.+14     	; 0x8ac <__stack+0x4d>
     89e:	30 f0       	brcs	.+12     	; 0x8ac <__stack+0x4d>
     8a0:	48 e0       	ldi	r20, 0x08	; 8
     8a2:	e4 2e       	mov	r14, r20
     8a4:	f1 2c       	mov	r15, r1
     8a6:	01 2d       	mov	r16, r1
     8a8:	11 2d       	mov	r17, r1
     8aa:	18 c0       	rjmp	.+48     	; 0x8dc <__stack+0x7d>
     8ac:	ee 24       	eor	r14, r14
     8ae:	ff 24       	eor	r15, r15
     8b0:	87 01       	movw	r16, r14
     8b2:	14 c0       	rjmp	.+40     	; 0x8dc <__stack+0x7d>
     8b4:	20 e0       	ldi	r18, 0x00	; 0
     8b6:	22 16       	cp	r2, r18
     8b8:	20 e0       	ldi	r18, 0x00	; 0
     8ba:	32 06       	cpc	r3, r18
     8bc:	20 e0       	ldi	r18, 0x00	; 0
     8be:	42 06       	cpc	r4, r18
     8c0:	21 e0       	ldi	r18, 0x01	; 1
     8c2:	52 06       	cpc	r5, r18
     8c4:	30 f0       	brcs	.+12     	; 0x8d2 <__stack+0x73>
     8c6:	38 e1       	ldi	r19, 0x18	; 24
     8c8:	e3 2e       	mov	r14, r19
     8ca:	f1 2c       	mov	r15, r1
     8cc:	01 2d       	mov	r16, r1
     8ce:	11 2d       	mov	r17, r1
     8d0:	05 c0       	rjmp	.+10     	; 0x8dc <__stack+0x7d>
     8d2:	20 e1       	ldi	r18, 0x10	; 16
     8d4:	e2 2e       	mov	r14, r18
     8d6:	f1 2c       	mov	r15, r1
     8d8:	01 2d       	mov	r16, r1
     8da:	11 2d       	mov	r17, r1
     8dc:	d2 01       	movw	r26, r4
     8de:	c1 01       	movw	r24, r2
     8e0:	0e 2c       	mov	r0, r14
     8e2:	04 c0       	rjmp	.+8      	; 0x8ec <__stack+0x8d>
     8e4:	b6 95       	lsr	r27
     8e6:	a7 95       	ror	r26
     8e8:	97 95       	ror	r25
     8ea:	87 95       	ror	r24
     8ec:	0a 94       	dec	r0
     8ee:	d2 f7       	brpl	.-12     	; 0x8e4 <__stack+0x85>
     8f0:	82 59       	subi	r24, 0x92	; 146
     8f2:	9f 4f       	sbci	r25, 0xFF	; 255
     8f4:	dc 01       	movw	r26, r24
     8f6:	2c 91       	ld	r18, X
     8f8:	80 e2       	ldi	r24, 0x20	; 32
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	a0 e0       	ldi	r26, 0x00	; 0
     8fe:	b0 e0       	ldi	r27, 0x00	; 0
     900:	8e 19       	sub	r24, r14
     902:	9f 09       	sbc	r25, r15
     904:	a0 0b       	sbc	r26, r16
     906:	b1 0b       	sbc	r27, r17
     908:	7c 01       	movw	r14, r24
     90a:	8d 01       	movw	r16, r26
     90c:	e2 1a       	sub	r14, r18
     90e:	f1 08       	sbc	r15, r1
     910:	01 09       	sbc	r16, r1
     912:	11 09       	sbc	r17, r1
     914:	e1 14       	cp	r14, r1
     916:	f1 04       	cpc	r15, r1
     918:	01 05       	cpc	r16, r1
     91a:	11 05       	cpc	r17, r1
     91c:	d1 f1       	breq	.+116    	; 0x992 <__stack+0x133>
     91e:	0e 2c       	mov	r0, r14
     920:	04 c0       	rjmp	.+8      	; 0x92a <__stack+0xcb>
     922:	22 0c       	add	r2, r2
     924:	33 1c       	adc	r3, r3
     926:	44 1c       	adc	r4, r4
     928:	55 1c       	adc	r5, r5
     92a:	0a 94       	dec	r0
     92c:	d2 f7       	brpl	.-12     	; 0x922 <__stack+0xc3>
     92e:	a4 01       	movw	r20, r8
     930:	93 01       	movw	r18, r6
     932:	0e 2c       	mov	r0, r14
     934:	04 c0       	rjmp	.+8      	; 0x93e <__stack+0xdf>
     936:	22 0f       	add	r18, r18
     938:	33 1f       	adc	r19, r19
     93a:	44 1f       	adc	r20, r20
     93c:	55 1f       	adc	r21, r21
     93e:	0a 94       	dec	r0
     940:	d2 f7       	brpl	.-12     	; 0x936 <__stack+0xd7>
     942:	80 e2       	ldi	r24, 0x20	; 32
     944:	90 e0       	ldi	r25, 0x00	; 0
     946:	8e 19       	sub	r24, r14
     948:	9f 09       	sbc	r25, r15
     94a:	21 96       	adiw	r28, 0x01	; 1
     94c:	6c ac       	ldd	r6, Y+60	; 0x3c
     94e:	7d ac       	ldd	r7, Y+61	; 0x3d
     950:	8e ac       	ldd	r8, Y+62	; 0x3e
     952:	9f ac       	ldd	r9, Y+63	; 0x3f
     954:	21 97       	sbiw	r28, 0x01	; 1
     956:	04 c0       	rjmp	.+8      	; 0x960 <__stack+0x101>
     958:	96 94       	lsr	r9
     95a:	87 94       	ror	r8
     95c:	77 94       	ror	r7
     95e:	67 94       	ror	r6
     960:	8a 95       	dec	r24
     962:	d2 f7       	brpl	.-12     	; 0x958 <__stack+0xf9>
     964:	62 2a       	or	r6, r18
     966:	73 2a       	or	r7, r19
     968:	84 2a       	or	r8, r20
     96a:	95 2a       	or	r9, r21
     96c:	21 96       	adiw	r28, 0x01	; 1
     96e:	ac ac       	ldd	r10, Y+60	; 0x3c
     970:	bd ac       	ldd	r11, Y+61	; 0x3d
     972:	ce ac       	ldd	r12, Y+62	; 0x3e
     974:	df ac       	ldd	r13, Y+63	; 0x3f
     976:	21 97       	sbiw	r28, 0x01	; 1
     978:	04 c0       	rjmp	.+8      	; 0x982 <__stack+0x123>
     97a:	aa 0c       	add	r10, r10
     97c:	bb 1c       	adc	r11, r11
     97e:	cc 1c       	adc	r12, r12
     980:	dd 1c       	adc	r13, r13
     982:	ea 94       	dec	r14
     984:	d2 f7       	brpl	.-12     	; 0x97a <__stack+0x11b>
     986:	21 96       	adiw	r28, 0x01	; 1
     988:	ac ae       	std	Y+60, r10	; 0x3c
     98a:	bd ae       	std	Y+61, r11	; 0x3d
     98c:	ce ae       	std	Y+62, r12	; 0x3e
     98e:	df ae       	std	Y+63, r13	; 0x3f
     990:	21 97       	sbiw	r28, 0x01	; 1
     992:	62 01       	movw	r12, r4
     994:	ee 24       	eor	r14, r14
     996:	ff 24       	eor	r15, r15
     998:	29 96       	adiw	r28, 0x09	; 9
     99a:	cc ae       	std	Y+60, r12	; 0x3c
     99c:	dd ae       	std	Y+61, r13	; 0x3d
     99e:	ee ae       	std	Y+62, r14	; 0x3e
     9a0:	ff ae       	std	Y+63, r15	; 0x3f
     9a2:	29 97       	sbiw	r28, 0x09	; 9
     9a4:	92 01       	movw	r18, r4
     9a6:	81 01       	movw	r16, r2
     9a8:	20 70       	andi	r18, 0x00	; 0
     9aa:	30 70       	andi	r19, 0x00	; 0
     9ac:	2d 96       	adiw	r28, 0x0d	; 13
     9ae:	0c af       	std	Y+60, r16	; 0x3c
     9b0:	1d af       	std	Y+61, r17	; 0x3d
     9b2:	2e af       	std	Y+62, r18	; 0x3e
     9b4:	3f af       	std	Y+63, r19	; 0x3f
     9b6:	2d 97       	sbiw	r28, 0x0d	; 13
     9b8:	c4 01       	movw	r24, r8
     9ba:	b3 01       	movw	r22, r6
     9bc:	a7 01       	movw	r20, r14
     9be:	96 01       	movw	r18, r12
     9c0:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
     9c4:	7b 01       	movw	r14, r22
     9c6:	8c 01       	movw	r16, r24
     9c8:	c4 01       	movw	r24, r8
     9ca:	b3 01       	movw	r22, r6
     9cc:	29 96       	adiw	r28, 0x09	; 9
     9ce:	2c ad       	ldd	r18, Y+60	; 0x3c
     9d0:	3d ad       	ldd	r19, Y+61	; 0x3d
     9d2:	4e ad       	ldd	r20, Y+62	; 0x3e
     9d4:	5f ad       	ldd	r21, Y+63	; 0x3f
     9d6:	29 97       	sbiw	r28, 0x09	; 9
     9d8:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
     9dc:	c9 01       	movw	r24, r18
     9de:	da 01       	movw	r26, r20
     9e0:	3c 01       	movw	r6, r24
     9e2:	4d 01       	movw	r8, r26
     9e4:	c4 01       	movw	r24, r8
     9e6:	b3 01       	movw	r22, r6
     9e8:	2d 96       	adiw	r28, 0x0d	; 13
     9ea:	2c ad       	ldd	r18, Y+60	; 0x3c
     9ec:	3d ad       	ldd	r19, Y+61	; 0x3d
     9ee:	4e ad       	ldd	r20, Y+62	; 0x3e
     9f0:	5f ad       	ldd	r21, Y+63	; 0x3f
     9f2:	2d 97       	sbiw	r28, 0x0d	; 13
     9f4:	0e 94 43 2e 	call	0x5c86	; 0x5c86 <__mulsi3>
     9f8:	9b 01       	movw	r18, r22
     9fa:	ac 01       	movw	r20, r24
     9fc:	87 01       	movw	r16, r14
     9fe:	ff 24       	eor	r15, r15
     a00:	ee 24       	eor	r14, r14
     a02:	21 96       	adiw	r28, 0x01	; 1
     a04:	ac ac       	ldd	r10, Y+60	; 0x3c
     a06:	bd ac       	ldd	r11, Y+61	; 0x3d
     a08:	ce ac       	ldd	r12, Y+62	; 0x3e
     a0a:	df ac       	ldd	r13, Y+63	; 0x3f
     a0c:	21 97       	sbiw	r28, 0x01	; 1
     a0e:	c6 01       	movw	r24, r12
     a10:	aa 27       	eor	r26, r26
     a12:	bb 27       	eor	r27, r27
     a14:	57 01       	movw	r10, r14
     a16:	68 01       	movw	r12, r16
     a18:	a8 2a       	or	r10, r24
     a1a:	b9 2a       	or	r11, r25
     a1c:	ca 2a       	or	r12, r26
     a1e:	db 2a       	or	r13, r27
     a20:	a2 16       	cp	r10, r18
     a22:	b3 06       	cpc	r11, r19
     a24:	c4 06       	cpc	r12, r20
     a26:	d5 06       	cpc	r13, r21
     a28:	e0 f4       	brcc	.+56     	; 0xa62 <__stack+0x203>
     a2a:	08 94       	sec
     a2c:	61 08       	sbc	r6, r1
     a2e:	71 08       	sbc	r7, r1
     a30:	81 08       	sbc	r8, r1
     a32:	91 08       	sbc	r9, r1
     a34:	a2 0c       	add	r10, r2
     a36:	b3 1c       	adc	r11, r3
     a38:	c4 1c       	adc	r12, r4
     a3a:	d5 1c       	adc	r13, r5
     a3c:	a2 14       	cp	r10, r2
     a3e:	b3 04       	cpc	r11, r3
     a40:	c4 04       	cpc	r12, r4
     a42:	d5 04       	cpc	r13, r5
     a44:	70 f0       	brcs	.+28     	; 0xa62 <__stack+0x203>
     a46:	a2 16       	cp	r10, r18
     a48:	b3 06       	cpc	r11, r19
     a4a:	c4 06       	cpc	r12, r20
     a4c:	d5 06       	cpc	r13, r21
     a4e:	48 f4       	brcc	.+18     	; 0xa62 <__stack+0x203>
     a50:	08 94       	sec
     a52:	61 08       	sbc	r6, r1
     a54:	71 08       	sbc	r7, r1
     a56:	81 08       	sbc	r8, r1
     a58:	91 08       	sbc	r9, r1
     a5a:	a2 0c       	add	r10, r2
     a5c:	b3 1c       	adc	r11, r3
     a5e:	c4 1c       	adc	r12, r4
     a60:	d5 1c       	adc	r13, r5
     a62:	a2 1a       	sub	r10, r18
     a64:	b3 0a       	sbc	r11, r19
     a66:	c4 0a       	sbc	r12, r20
     a68:	d5 0a       	sbc	r13, r21
     a6a:	c6 01       	movw	r24, r12
     a6c:	b5 01       	movw	r22, r10
     a6e:	29 96       	adiw	r28, 0x09	; 9
     a70:	2c ad       	ldd	r18, Y+60	; 0x3c
     a72:	3d ad       	ldd	r19, Y+61	; 0x3d
     a74:	4e ad       	ldd	r20, Y+62	; 0x3e
     a76:	5f ad       	ldd	r21, Y+63	; 0x3f
     a78:	29 97       	sbiw	r28, 0x09	; 9
     a7a:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
     a7e:	7b 01       	movw	r14, r22
     a80:	8c 01       	movw	r16, r24
     a82:	c6 01       	movw	r24, r12
     a84:	b5 01       	movw	r22, r10
     a86:	29 96       	adiw	r28, 0x09	; 9
     a88:	2c ad       	ldd	r18, Y+60	; 0x3c
     a8a:	3d ad       	ldd	r19, Y+61	; 0x3d
     a8c:	4e ad       	ldd	r20, Y+62	; 0x3e
     a8e:	5f ad       	ldd	r21, Y+63	; 0x3f
     a90:	29 97       	sbiw	r28, 0x09	; 9
     a92:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
     a96:	c9 01       	movw	r24, r18
     a98:	da 01       	movw	r26, r20
     a9a:	5c 01       	movw	r10, r24
     a9c:	6d 01       	movw	r12, r26
     a9e:	c6 01       	movw	r24, r12
     aa0:	b5 01       	movw	r22, r10
     aa2:	2d 96       	adiw	r28, 0x0d	; 13
     aa4:	2c ad       	ldd	r18, Y+60	; 0x3c
     aa6:	3d ad       	ldd	r19, Y+61	; 0x3d
     aa8:	4e ad       	ldd	r20, Y+62	; 0x3e
     aaa:	5f ad       	ldd	r21, Y+63	; 0x3f
     aac:	2d 97       	sbiw	r28, 0x0d	; 13
     aae:	0e 94 43 2e 	call	0x5c86	; 0x5c86 <__mulsi3>
     ab2:	9b 01       	movw	r18, r22
     ab4:	ac 01       	movw	r20, r24
     ab6:	87 01       	movw	r16, r14
     ab8:	ff 24       	eor	r15, r15
     aba:	ee 24       	eor	r14, r14
     abc:	21 96       	adiw	r28, 0x01	; 1
     abe:	8c ad       	ldd	r24, Y+60	; 0x3c
     ac0:	9d ad       	ldd	r25, Y+61	; 0x3d
     ac2:	ae ad       	ldd	r26, Y+62	; 0x3e
     ac4:	bf ad       	ldd	r27, Y+63	; 0x3f
     ac6:	21 97       	sbiw	r28, 0x01	; 1
     ac8:	a0 70       	andi	r26, 0x00	; 0
     aca:	b0 70       	andi	r27, 0x00	; 0
     acc:	e8 2a       	or	r14, r24
     ace:	f9 2a       	or	r15, r25
     ad0:	0a 2b       	or	r16, r26
     ad2:	1b 2b       	or	r17, r27
     ad4:	e2 16       	cp	r14, r18
     ad6:	f3 06       	cpc	r15, r19
     ad8:	04 07       	cpc	r16, r20
     ada:	15 07       	cpc	r17, r21
     adc:	c0 f4       	brcc	.+48     	; 0xb0e <__stack+0x2af>
     ade:	08 94       	sec
     ae0:	a1 08       	sbc	r10, r1
     ae2:	b1 08       	sbc	r11, r1
     ae4:	c1 08       	sbc	r12, r1
     ae6:	d1 08       	sbc	r13, r1
     ae8:	e2 0c       	add	r14, r2
     aea:	f3 1c       	adc	r15, r3
     aec:	04 1d       	adc	r16, r4
     aee:	15 1d       	adc	r17, r5
     af0:	e2 14       	cp	r14, r2
     af2:	f3 04       	cpc	r15, r3
     af4:	04 05       	cpc	r16, r4
     af6:	15 05       	cpc	r17, r5
     af8:	50 f0       	brcs	.+20     	; 0xb0e <__stack+0x2af>
     afa:	e2 16       	cp	r14, r18
     afc:	f3 06       	cpc	r15, r19
     afe:	04 07       	cpc	r16, r20
     b00:	15 07       	cpc	r17, r21
     b02:	28 f4       	brcc	.+10     	; 0xb0e <__stack+0x2af>
     b04:	08 94       	sec
     b06:	a1 08       	sbc	r10, r1
     b08:	b1 08       	sbc	r11, r1
     b0a:	c1 08       	sbc	r12, r1
     b0c:	d1 08       	sbc	r13, r1
     b0e:	d3 01       	movw	r26, r6
     b10:	99 27       	eor	r25, r25
     b12:	88 27       	eor	r24, r24
     b14:	86 01       	movw	r16, r12
     b16:	75 01       	movw	r14, r10
     b18:	e8 2a       	or	r14, r24
     b1a:	f9 2a       	or	r15, r25
     b1c:	0a 2b       	or	r16, r26
     b1e:	1b 2b       	or	r17, r27
     b20:	25 96       	adiw	r28, 0x05	; 5
     b22:	ec ae       	std	Y+60, r14	; 0x3c
     b24:	fd ae       	std	Y+61, r15	; 0x3d
     b26:	0e af       	std	Y+62, r16	; 0x3e
     b28:	1f af       	std	Y+63, r17	; 0x3f
     b2a:	25 97       	sbiw	r28, 0x05	; 5
     b2c:	eb c4       	rjmp	.+2518   	; 0x1504 <__stack+0xca5>
     b2e:	21 14       	cp	r2, r1
     b30:	31 04       	cpc	r3, r1
     b32:	41 04       	cpc	r4, r1
     b34:	51 04       	cpc	r5, r1
     b36:	71 f4       	brne	.+28     	; 0xb54 <__stack+0x2f5>
     b38:	61 e0       	ldi	r22, 0x01	; 1
     b3a:	70 e0       	ldi	r23, 0x00	; 0
     b3c:	80 e0       	ldi	r24, 0x00	; 0
     b3e:	90 e0       	ldi	r25, 0x00	; 0
     b40:	20 e0       	ldi	r18, 0x00	; 0
     b42:	30 e0       	ldi	r19, 0x00	; 0
     b44:	40 e0       	ldi	r20, 0x00	; 0
     b46:	50 e0       	ldi	r21, 0x00	; 0
     b48:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
     b4c:	c9 01       	movw	r24, r18
     b4e:	da 01       	movw	r26, r20
     b50:	1c 01       	movw	r2, r24
     b52:	2d 01       	movw	r4, r26
     b54:	00 e0       	ldi	r16, 0x00	; 0
     b56:	20 16       	cp	r2, r16
     b58:	00 e0       	ldi	r16, 0x00	; 0
     b5a:	30 06       	cpc	r3, r16
     b5c:	01 e0       	ldi	r16, 0x01	; 1
     b5e:	40 06       	cpc	r4, r16
     b60:	00 e0       	ldi	r16, 0x00	; 0
     b62:	50 06       	cpc	r5, r16
     b64:	88 f4       	brcc	.+34     	; 0xb88 <__stack+0x329>
     b66:	1f ef       	ldi	r17, 0xFF	; 255
     b68:	21 16       	cp	r2, r17
     b6a:	31 04       	cpc	r3, r1
     b6c:	41 04       	cpc	r4, r1
     b6e:	51 04       	cpc	r5, r1
     b70:	31 f0       	breq	.+12     	; 0xb7e <__stack+0x31f>
     b72:	28 f0       	brcs	.+10     	; 0xb7e <__stack+0x31f>
     b74:	48 e0       	ldi	r20, 0x08	; 8
     b76:	50 e0       	ldi	r21, 0x00	; 0
     b78:	60 e0       	ldi	r22, 0x00	; 0
     b7a:	70 e0       	ldi	r23, 0x00	; 0
     b7c:	17 c0       	rjmp	.+46     	; 0xbac <__stack+0x34d>
     b7e:	40 e0       	ldi	r20, 0x00	; 0
     b80:	50 e0       	ldi	r21, 0x00	; 0
     b82:	60 e0       	ldi	r22, 0x00	; 0
     b84:	70 e0       	ldi	r23, 0x00	; 0
     b86:	12 c0       	rjmp	.+36     	; 0xbac <__stack+0x34d>
     b88:	20 e0       	ldi	r18, 0x00	; 0
     b8a:	22 16       	cp	r2, r18
     b8c:	20 e0       	ldi	r18, 0x00	; 0
     b8e:	32 06       	cpc	r3, r18
     b90:	20 e0       	ldi	r18, 0x00	; 0
     b92:	42 06       	cpc	r4, r18
     b94:	21 e0       	ldi	r18, 0x01	; 1
     b96:	52 06       	cpc	r5, r18
     b98:	28 f0       	brcs	.+10     	; 0xba4 <__stack+0x345>
     b9a:	48 e1       	ldi	r20, 0x18	; 24
     b9c:	50 e0       	ldi	r21, 0x00	; 0
     b9e:	60 e0       	ldi	r22, 0x00	; 0
     ba0:	70 e0       	ldi	r23, 0x00	; 0
     ba2:	04 c0       	rjmp	.+8      	; 0xbac <__stack+0x34d>
     ba4:	40 e1       	ldi	r20, 0x10	; 16
     ba6:	50 e0       	ldi	r21, 0x00	; 0
     ba8:	60 e0       	ldi	r22, 0x00	; 0
     baa:	70 e0       	ldi	r23, 0x00	; 0
     bac:	d2 01       	movw	r26, r4
     bae:	c1 01       	movw	r24, r2
     bb0:	04 2e       	mov	r0, r20
     bb2:	04 c0       	rjmp	.+8      	; 0xbbc <__stack+0x35d>
     bb4:	b6 95       	lsr	r27
     bb6:	a7 95       	ror	r26
     bb8:	97 95       	ror	r25
     bba:	87 95       	ror	r24
     bbc:	0a 94       	dec	r0
     bbe:	d2 f7       	brpl	.-12     	; 0xbb4 <__stack+0x355>
     bc0:	82 59       	subi	r24, 0x92	; 146
     bc2:	9f 4f       	sbci	r25, 0xFF	; 255
     bc4:	dc 01       	movw	r26, r24
     bc6:	2c 91       	ld	r18, X
     bc8:	e0 e2       	ldi	r30, 0x20	; 32
     bca:	ee 2e       	mov	r14, r30
     bcc:	f1 2c       	mov	r15, r1
     bce:	01 2d       	mov	r16, r1
     bd0:	11 2d       	mov	r17, r1
     bd2:	d8 01       	movw	r26, r16
     bd4:	c7 01       	movw	r24, r14
     bd6:	84 1b       	sub	r24, r20
     bd8:	95 0b       	sbc	r25, r21
     bda:	a6 0b       	sbc	r26, r22
     bdc:	b7 0b       	sbc	r27, r23
     bde:	82 1b       	sub	r24, r18
     be0:	91 09       	sbc	r25, r1
     be2:	a1 09       	sbc	r26, r1
     be4:	b1 09       	sbc	r27, r1
     be6:	00 97       	sbiw	r24, 0x00	; 0
     be8:	a1 05       	cpc	r26, r1
     bea:	b1 05       	cpc	r27, r1
     bec:	61 f4       	brne	.+24     	; 0xc06 <__stack+0x3a7>
     bee:	64 01       	movw	r12, r8
     bf0:	53 01       	movw	r10, r6
     bf2:	a2 18       	sub	r10, r2
     bf4:	b3 08       	sbc	r11, r3
     bf6:	c4 08       	sbc	r12, r4
     bf8:	d5 08       	sbc	r13, r5
     bfa:	31 e0       	ldi	r19, 0x01	; 1
     bfc:	63 2e       	mov	r6, r19
     bfe:	71 2c       	mov	r7, r1
     c00:	81 2c       	mov	r8, r1
     c02:	91 2c       	mov	r9, r1
     c04:	24 c1       	rjmp	.+584    	; 0xe4e <__stack+0x5ef>
     c06:	e3 96       	adiw	r28, 0x33	; 51
     c08:	8f af       	std	Y+63, r24	; 0x3f
     c0a:	e3 97       	sbiw	r28, 0x33	; 51
     c0c:	08 2e       	mov	r0, r24
     c0e:	04 c0       	rjmp	.+8      	; 0xc18 <__stack+0x3b9>
     c10:	22 0c       	add	r2, r2
     c12:	33 1c       	adc	r3, r3
     c14:	44 1c       	adc	r4, r4
     c16:	55 1c       	adc	r5, r5
     c18:	0a 94       	dec	r0
     c1a:	d2 f7       	brpl	.-12     	; 0xc10 <__stack+0x3b1>
     c1c:	ee 2d       	mov	r30, r14
     c1e:	e8 1b       	sub	r30, r24
     c20:	64 01       	movw	r12, r8
     c22:	53 01       	movw	r10, r6
     c24:	0e 2e       	mov	r0, r30
     c26:	04 c0       	rjmp	.+8      	; 0xc30 <__stack+0x3d1>
     c28:	d6 94       	lsr	r13
     c2a:	c7 94       	ror	r12
     c2c:	b7 94       	ror	r11
     c2e:	a7 94       	ror	r10
     c30:	0a 94       	dec	r0
     c32:	d2 f7       	brpl	.-12     	; 0xc28 <__stack+0x3c9>
     c34:	a4 01       	movw	r20, r8
     c36:	93 01       	movw	r18, r6
     c38:	e3 96       	adiw	r28, 0x33	; 51
     c3a:	0f ac       	ldd	r0, Y+63	; 0x3f
     c3c:	e3 97       	sbiw	r28, 0x33	; 51
     c3e:	04 c0       	rjmp	.+8      	; 0xc48 <__stack+0x3e9>
     c40:	22 0f       	add	r18, r18
     c42:	33 1f       	adc	r19, r19
     c44:	44 1f       	adc	r20, r20
     c46:	55 1f       	adc	r21, r21
     c48:	0a 94       	dec	r0
     c4a:	d2 f7       	brpl	.-12     	; 0xc40 <__stack+0x3e1>
     c4c:	21 96       	adiw	r28, 0x01	; 1
     c4e:	6c ac       	ldd	r6, Y+60	; 0x3c
     c50:	7d ac       	ldd	r7, Y+61	; 0x3d
     c52:	8e ac       	ldd	r8, Y+62	; 0x3e
     c54:	9f ac       	ldd	r9, Y+63	; 0x3f
     c56:	21 97       	sbiw	r28, 0x01	; 1
     c58:	0e 2e       	mov	r0, r30
     c5a:	04 c0       	rjmp	.+8      	; 0xc64 <__stack+0x405>
     c5c:	96 94       	lsr	r9
     c5e:	87 94       	ror	r8
     c60:	77 94       	ror	r7
     c62:	67 94       	ror	r6
     c64:	0a 94       	dec	r0
     c66:	d2 f7       	brpl	.-12     	; 0xc5c <__stack+0x3fd>
     c68:	84 01       	movw	r16, r8
     c6a:	73 01       	movw	r14, r6
     c6c:	e2 2a       	or	r14, r18
     c6e:	f3 2a       	or	r15, r19
     c70:	04 2b       	or	r16, r20
     c72:	15 2b       	or	r17, r21
     c74:	e9 ae       	std	Y+57, r14	; 0x39
     c76:	fa ae       	std	Y+58, r15	; 0x3a
     c78:	0b af       	std	Y+59, r16	; 0x3b
     c7a:	1c af       	std	Y+60, r17	; 0x3c
     c7c:	32 01       	movw	r6, r4
     c7e:	88 24       	eor	r8, r8
     c80:	99 24       	eor	r9, r9
     c82:	92 01       	movw	r18, r4
     c84:	81 01       	movw	r16, r2
     c86:	20 70       	andi	r18, 0x00	; 0
     c88:	30 70       	andi	r19, 0x00	; 0
     c8a:	61 96       	adiw	r28, 0x11	; 17
     c8c:	0c af       	std	Y+60, r16	; 0x3c
     c8e:	1d af       	std	Y+61, r17	; 0x3d
     c90:	2e af       	std	Y+62, r18	; 0x3e
     c92:	3f af       	std	Y+63, r19	; 0x3f
     c94:	61 97       	sbiw	r28, 0x11	; 17
     c96:	c6 01       	movw	r24, r12
     c98:	b5 01       	movw	r22, r10
     c9a:	a4 01       	movw	r20, r8
     c9c:	93 01       	movw	r18, r6
     c9e:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
     ca2:	7b 01       	movw	r14, r22
     ca4:	8c 01       	movw	r16, r24
     ca6:	c6 01       	movw	r24, r12
     ca8:	b5 01       	movw	r22, r10
     caa:	a4 01       	movw	r20, r8
     cac:	93 01       	movw	r18, r6
     cae:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
     cb2:	c9 01       	movw	r24, r18
     cb4:	da 01       	movw	r26, r20
     cb6:	65 96       	adiw	r28, 0x15	; 21
     cb8:	8c af       	std	Y+60, r24	; 0x3c
     cba:	9d af       	std	Y+61, r25	; 0x3d
     cbc:	ae af       	std	Y+62, r26	; 0x3e
     cbe:	bf af       	std	Y+63, r27	; 0x3f
     cc0:	65 97       	sbiw	r28, 0x15	; 21
     cc2:	bc 01       	movw	r22, r24
     cc4:	cd 01       	movw	r24, r26
     cc6:	61 96       	adiw	r28, 0x11	; 17
     cc8:	2c ad       	ldd	r18, Y+60	; 0x3c
     cca:	3d ad       	ldd	r19, Y+61	; 0x3d
     ccc:	4e ad       	ldd	r20, Y+62	; 0x3e
     cce:	5f ad       	ldd	r21, Y+63	; 0x3f
     cd0:	61 97       	sbiw	r28, 0x11	; 17
     cd2:	0e 94 43 2e 	call	0x5c86	; 0x5c86 <__mulsi3>
     cd6:	9b 01       	movw	r18, r22
     cd8:	ac 01       	movw	r20, r24
     cda:	87 01       	movw	r16, r14
     cdc:	ff 24       	eor	r15, r15
     cde:	ee 24       	eor	r14, r14
     ce0:	a9 ac       	ldd	r10, Y+57	; 0x39
     ce2:	ba ac       	ldd	r11, Y+58	; 0x3a
     ce4:	cb ac       	ldd	r12, Y+59	; 0x3b
     ce6:	dc ac       	ldd	r13, Y+60	; 0x3c
     ce8:	c6 01       	movw	r24, r12
     cea:	aa 27       	eor	r26, r26
     cec:	bb 27       	eor	r27, r27
     cee:	5c 01       	movw	r10, r24
     cf0:	6d 01       	movw	r12, r26
     cf2:	ae 28       	or	r10, r14
     cf4:	bf 28       	or	r11, r15
     cf6:	c0 2a       	or	r12, r16
     cf8:	d1 2a       	or	r13, r17
     cfa:	a2 16       	cp	r10, r18
     cfc:	b3 06       	cpc	r11, r19
     cfe:	c4 06       	cpc	r12, r20
     d00:	d5 06       	cpc	r13, r21
     d02:	60 f5       	brcc	.+88     	; 0xd5c <__stack+0x4fd>
     d04:	65 96       	adiw	r28, 0x15	; 21
     d06:	6c ad       	ldd	r22, Y+60	; 0x3c
     d08:	7d ad       	ldd	r23, Y+61	; 0x3d
     d0a:	8e ad       	ldd	r24, Y+62	; 0x3e
     d0c:	9f ad       	ldd	r25, Y+63	; 0x3f
     d0e:	65 97       	sbiw	r28, 0x15	; 21
     d10:	61 50       	subi	r22, 0x01	; 1
     d12:	70 40       	sbci	r23, 0x00	; 0
     d14:	80 40       	sbci	r24, 0x00	; 0
     d16:	90 40       	sbci	r25, 0x00	; 0
     d18:	65 96       	adiw	r28, 0x15	; 21
     d1a:	6c af       	std	Y+60, r22	; 0x3c
     d1c:	7d af       	std	Y+61, r23	; 0x3d
     d1e:	8e af       	std	Y+62, r24	; 0x3e
     d20:	9f af       	std	Y+63, r25	; 0x3f
     d22:	65 97       	sbiw	r28, 0x15	; 21
     d24:	a2 0c       	add	r10, r2
     d26:	b3 1c       	adc	r11, r3
     d28:	c4 1c       	adc	r12, r4
     d2a:	d5 1c       	adc	r13, r5
     d2c:	a2 14       	cp	r10, r2
     d2e:	b3 04       	cpc	r11, r3
     d30:	c4 04       	cpc	r12, r4
     d32:	d5 04       	cpc	r13, r5
     d34:	98 f0       	brcs	.+38     	; 0xd5c <__stack+0x4fd>
     d36:	a2 16       	cp	r10, r18
     d38:	b3 06       	cpc	r11, r19
     d3a:	c4 06       	cpc	r12, r20
     d3c:	d5 06       	cpc	r13, r21
     d3e:	70 f4       	brcc	.+28     	; 0xd5c <__stack+0x4fd>
     d40:	61 50       	subi	r22, 0x01	; 1
     d42:	70 40       	sbci	r23, 0x00	; 0
     d44:	80 40       	sbci	r24, 0x00	; 0
     d46:	90 40       	sbci	r25, 0x00	; 0
     d48:	65 96       	adiw	r28, 0x15	; 21
     d4a:	6c af       	std	Y+60, r22	; 0x3c
     d4c:	7d af       	std	Y+61, r23	; 0x3d
     d4e:	8e af       	std	Y+62, r24	; 0x3e
     d50:	9f af       	std	Y+63, r25	; 0x3f
     d52:	65 97       	sbiw	r28, 0x15	; 21
     d54:	a2 0c       	add	r10, r2
     d56:	b3 1c       	adc	r11, r3
     d58:	c4 1c       	adc	r12, r4
     d5a:	d5 1c       	adc	r13, r5
     d5c:	a2 1a       	sub	r10, r18
     d5e:	b3 0a       	sbc	r11, r19
     d60:	c4 0a       	sbc	r12, r20
     d62:	d5 0a       	sbc	r13, r21
     d64:	c6 01       	movw	r24, r12
     d66:	b5 01       	movw	r22, r10
     d68:	a4 01       	movw	r20, r8
     d6a:	93 01       	movw	r18, r6
     d6c:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
     d70:	7b 01       	movw	r14, r22
     d72:	8c 01       	movw	r16, r24
     d74:	c6 01       	movw	r24, r12
     d76:	b5 01       	movw	r22, r10
     d78:	a4 01       	movw	r20, r8
     d7a:	93 01       	movw	r18, r6
     d7c:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
     d80:	c9 01       	movw	r24, r18
     d82:	da 01       	movw	r26, r20
     d84:	3c 01       	movw	r6, r24
     d86:	4d 01       	movw	r8, r26
     d88:	c4 01       	movw	r24, r8
     d8a:	b3 01       	movw	r22, r6
     d8c:	61 96       	adiw	r28, 0x11	; 17
     d8e:	2c ad       	ldd	r18, Y+60	; 0x3c
     d90:	3d ad       	ldd	r19, Y+61	; 0x3d
     d92:	4e ad       	ldd	r20, Y+62	; 0x3e
     d94:	5f ad       	ldd	r21, Y+63	; 0x3f
     d96:	61 97       	sbiw	r28, 0x11	; 17
     d98:	0e 94 43 2e 	call	0x5c86	; 0x5c86 <__mulsi3>
     d9c:	9b 01       	movw	r18, r22
     d9e:	ac 01       	movw	r20, r24
     da0:	87 01       	movw	r16, r14
     da2:	ff 24       	eor	r15, r15
     da4:	ee 24       	eor	r14, r14
     da6:	89 ad       	ldd	r24, Y+57	; 0x39
     da8:	9a ad       	ldd	r25, Y+58	; 0x3a
     daa:	ab ad       	ldd	r26, Y+59	; 0x3b
     dac:	bc ad       	ldd	r27, Y+60	; 0x3c
     dae:	a0 70       	andi	r26, 0x00	; 0
     db0:	b0 70       	andi	r27, 0x00	; 0
     db2:	57 01       	movw	r10, r14
     db4:	68 01       	movw	r12, r16
     db6:	a8 2a       	or	r10, r24
     db8:	b9 2a       	or	r11, r25
     dba:	ca 2a       	or	r12, r26
     dbc:	db 2a       	or	r13, r27
     dbe:	a2 16       	cp	r10, r18
     dc0:	b3 06       	cpc	r11, r19
     dc2:	c4 06       	cpc	r12, r20
     dc4:	d5 06       	cpc	r13, r21
     dc6:	e0 f4       	brcc	.+56     	; 0xe00 <__stack+0x5a1>
     dc8:	08 94       	sec
     dca:	61 08       	sbc	r6, r1
     dcc:	71 08       	sbc	r7, r1
     dce:	81 08       	sbc	r8, r1
     dd0:	91 08       	sbc	r9, r1
     dd2:	a2 0c       	add	r10, r2
     dd4:	b3 1c       	adc	r11, r3
     dd6:	c4 1c       	adc	r12, r4
     dd8:	d5 1c       	adc	r13, r5
     dda:	a2 14       	cp	r10, r2
     ddc:	b3 04       	cpc	r11, r3
     dde:	c4 04       	cpc	r12, r4
     de0:	d5 04       	cpc	r13, r5
     de2:	70 f0       	brcs	.+28     	; 0xe00 <__stack+0x5a1>
     de4:	a2 16       	cp	r10, r18
     de6:	b3 06       	cpc	r11, r19
     de8:	c4 06       	cpc	r12, r20
     dea:	d5 06       	cpc	r13, r21
     dec:	48 f4       	brcc	.+18     	; 0xe00 <__stack+0x5a1>
     dee:	08 94       	sec
     df0:	61 08       	sbc	r6, r1
     df2:	71 08       	sbc	r7, r1
     df4:	81 08       	sbc	r8, r1
     df6:	91 08       	sbc	r9, r1
     df8:	a2 0c       	add	r10, r2
     dfa:	b3 1c       	adc	r11, r3
     dfc:	c4 1c       	adc	r12, r4
     dfe:	d5 1c       	adc	r13, r5
     e00:	21 96       	adiw	r28, 0x01	; 1
     e02:	8c ad       	ldd	r24, Y+60	; 0x3c
     e04:	9d ad       	ldd	r25, Y+61	; 0x3d
     e06:	ae ad       	ldd	r26, Y+62	; 0x3e
     e08:	bf ad       	ldd	r27, Y+63	; 0x3f
     e0a:	21 97       	sbiw	r28, 0x01	; 1
     e0c:	e3 96       	adiw	r28, 0x33	; 51
     e0e:	0f ac       	ldd	r0, Y+63	; 0x3f
     e10:	e3 97       	sbiw	r28, 0x33	; 51
     e12:	04 c0       	rjmp	.+8      	; 0xe1c <__stack+0x5bd>
     e14:	88 0f       	add	r24, r24
     e16:	99 1f       	adc	r25, r25
     e18:	aa 1f       	adc	r26, r26
     e1a:	bb 1f       	adc	r27, r27
     e1c:	0a 94       	dec	r0
     e1e:	d2 f7       	brpl	.-12     	; 0xe14 <__stack+0x5b5>
     e20:	21 96       	adiw	r28, 0x01	; 1
     e22:	8c af       	std	Y+60, r24	; 0x3c
     e24:	9d af       	std	Y+61, r25	; 0x3d
     e26:	ae af       	std	Y+62, r26	; 0x3e
     e28:	bf af       	std	Y+63, r27	; 0x3f
     e2a:	21 97       	sbiw	r28, 0x01	; 1
     e2c:	a2 1a       	sub	r10, r18
     e2e:	b3 0a       	sbc	r11, r19
     e30:	c4 0a       	sbc	r12, r20
     e32:	d5 0a       	sbc	r13, r21
     e34:	65 96       	adiw	r28, 0x15	; 21
     e36:	ec ac       	ldd	r14, Y+60	; 0x3c
     e38:	fd ac       	ldd	r15, Y+61	; 0x3d
     e3a:	0e ad       	ldd	r16, Y+62	; 0x3e
     e3c:	1f ad       	ldd	r17, Y+63	; 0x3f
     e3e:	65 97       	sbiw	r28, 0x15	; 21
     e40:	d7 01       	movw	r26, r14
     e42:	99 27       	eor	r25, r25
     e44:	88 27       	eor	r24, r24
     e46:	68 2a       	or	r6, r24
     e48:	79 2a       	or	r7, r25
     e4a:	8a 2a       	or	r8, r26
     e4c:	9b 2a       	or	r9, r27
     e4e:	82 01       	movw	r16, r4
     e50:	22 27       	eor	r18, r18
     e52:	33 27       	eor	r19, r19
     e54:	69 96       	adiw	r28, 0x19	; 25
     e56:	0c af       	std	Y+60, r16	; 0x3c
     e58:	1d af       	std	Y+61, r17	; 0x3d
     e5a:	2e af       	std	Y+62, r18	; 0x3e
     e5c:	3f af       	std	Y+63, r19	; 0x3f
     e5e:	69 97       	sbiw	r28, 0x19	; 25
     e60:	a2 01       	movw	r20, r4
     e62:	91 01       	movw	r18, r2
     e64:	40 70       	andi	r20, 0x00	; 0
     e66:	50 70       	andi	r21, 0x00	; 0
     e68:	6d 96       	adiw	r28, 0x1d	; 29
     e6a:	2c af       	std	Y+60, r18	; 0x3c
     e6c:	3d af       	std	Y+61, r19	; 0x3d
     e6e:	4e af       	std	Y+62, r20	; 0x3e
     e70:	5f af       	std	Y+63, r21	; 0x3f
     e72:	6d 97       	sbiw	r28, 0x1d	; 29
     e74:	c6 01       	movw	r24, r12
     e76:	b5 01       	movw	r22, r10
     e78:	69 96       	adiw	r28, 0x19	; 25
     e7a:	2c ad       	ldd	r18, Y+60	; 0x3c
     e7c:	3d ad       	ldd	r19, Y+61	; 0x3d
     e7e:	4e ad       	ldd	r20, Y+62	; 0x3e
     e80:	5f ad       	ldd	r21, Y+63	; 0x3f
     e82:	69 97       	sbiw	r28, 0x19	; 25
     e84:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
     e88:	7b 01       	movw	r14, r22
     e8a:	8c 01       	movw	r16, r24
     e8c:	c6 01       	movw	r24, r12
     e8e:	b5 01       	movw	r22, r10
     e90:	69 96       	adiw	r28, 0x19	; 25
     e92:	2c ad       	ldd	r18, Y+60	; 0x3c
     e94:	3d ad       	ldd	r19, Y+61	; 0x3d
     e96:	4e ad       	ldd	r20, Y+62	; 0x3e
     e98:	5f ad       	ldd	r21, Y+63	; 0x3f
     e9a:	69 97       	sbiw	r28, 0x19	; 25
     e9c:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
     ea0:	c9 01       	movw	r24, r18
     ea2:	da 01       	movw	r26, r20
     ea4:	a1 96       	adiw	r28, 0x21	; 33
     ea6:	8c af       	std	Y+60, r24	; 0x3c
     ea8:	9d af       	std	Y+61, r25	; 0x3d
     eaa:	ae af       	std	Y+62, r26	; 0x3e
     eac:	bf af       	std	Y+63, r27	; 0x3f
     eae:	a1 97       	sbiw	r28, 0x21	; 33
     eb0:	bc 01       	movw	r22, r24
     eb2:	cd 01       	movw	r24, r26
     eb4:	6d 96       	adiw	r28, 0x1d	; 29
     eb6:	2c ad       	ldd	r18, Y+60	; 0x3c
     eb8:	3d ad       	ldd	r19, Y+61	; 0x3d
     eba:	4e ad       	ldd	r20, Y+62	; 0x3e
     ebc:	5f ad       	ldd	r21, Y+63	; 0x3f
     ebe:	6d 97       	sbiw	r28, 0x1d	; 29
     ec0:	0e 94 43 2e 	call	0x5c86	; 0x5c86 <__mulsi3>
     ec4:	9b 01       	movw	r18, r22
     ec6:	ac 01       	movw	r20, r24
     ec8:	87 01       	movw	r16, r14
     eca:	ff 24       	eor	r15, r15
     ecc:	ee 24       	eor	r14, r14
     ece:	21 96       	adiw	r28, 0x01	; 1
     ed0:	ac ac       	ldd	r10, Y+60	; 0x3c
     ed2:	bd ac       	ldd	r11, Y+61	; 0x3d
     ed4:	ce ac       	ldd	r12, Y+62	; 0x3e
     ed6:	df ac       	ldd	r13, Y+63	; 0x3f
     ed8:	21 97       	sbiw	r28, 0x01	; 1
     eda:	c6 01       	movw	r24, r12
     edc:	aa 27       	eor	r26, r26
     ede:	bb 27       	eor	r27, r27
     ee0:	57 01       	movw	r10, r14
     ee2:	68 01       	movw	r12, r16
     ee4:	a8 2a       	or	r10, r24
     ee6:	b9 2a       	or	r11, r25
     ee8:	ca 2a       	or	r12, r26
     eea:	db 2a       	or	r13, r27
     eec:	a2 16       	cp	r10, r18
     eee:	b3 06       	cpc	r11, r19
     ef0:	c4 06       	cpc	r12, r20
     ef2:	d5 06       	cpc	r13, r21
     ef4:	60 f5       	brcc	.+88     	; 0xf4e <__stack+0x6ef>
     ef6:	a1 96       	adiw	r28, 0x21	; 33
     ef8:	6c ad       	ldd	r22, Y+60	; 0x3c
     efa:	7d ad       	ldd	r23, Y+61	; 0x3d
     efc:	8e ad       	ldd	r24, Y+62	; 0x3e
     efe:	9f ad       	ldd	r25, Y+63	; 0x3f
     f00:	a1 97       	sbiw	r28, 0x21	; 33
     f02:	61 50       	subi	r22, 0x01	; 1
     f04:	70 40       	sbci	r23, 0x00	; 0
     f06:	80 40       	sbci	r24, 0x00	; 0
     f08:	90 40       	sbci	r25, 0x00	; 0
     f0a:	a1 96       	adiw	r28, 0x21	; 33
     f0c:	6c af       	std	Y+60, r22	; 0x3c
     f0e:	7d af       	std	Y+61, r23	; 0x3d
     f10:	8e af       	std	Y+62, r24	; 0x3e
     f12:	9f af       	std	Y+63, r25	; 0x3f
     f14:	a1 97       	sbiw	r28, 0x21	; 33
     f16:	a2 0c       	add	r10, r2
     f18:	b3 1c       	adc	r11, r3
     f1a:	c4 1c       	adc	r12, r4
     f1c:	d5 1c       	adc	r13, r5
     f1e:	a2 14       	cp	r10, r2
     f20:	b3 04       	cpc	r11, r3
     f22:	c4 04       	cpc	r12, r4
     f24:	d5 04       	cpc	r13, r5
     f26:	98 f0       	brcs	.+38     	; 0xf4e <__stack+0x6ef>
     f28:	a2 16       	cp	r10, r18
     f2a:	b3 06       	cpc	r11, r19
     f2c:	c4 06       	cpc	r12, r20
     f2e:	d5 06       	cpc	r13, r21
     f30:	70 f4       	brcc	.+28     	; 0xf4e <__stack+0x6ef>
     f32:	61 50       	subi	r22, 0x01	; 1
     f34:	70 40       	sbci	r23, 0x00	; 0
     f36:	80 40       	sbci	r24, 0x00	; 0
     f38:	90 40       	sbci	r25, 0x00	; 0
     f3a:	a1 96       	adiw	r28, 0x21	; 33
     f3c:	6c af       	std	Y+60, r22	; 0x3c
     f3e:	7d af       	std	Y+61, r23	; 0x3d
     f40:	8e af       	std	Y+62, r24	; 0x3e
     f42:	9f af       	std	Y+63, r25	; 0x3f
     f44:	a1 97       	sbiw	r28, 0x21	; 33
     f46:	a2 0c       	add	r10, r2
     f48:	b3 1c       	adc	r11, r3
     f4a:	c4 1c       	adc	r12, r4
     f4c:	d5 1c       	adc	r13, r5
     f4e:	a2 1a       	sub	r10, r18
     f50:	b3 0a       	sbc	r11, r19
     f52:	c4 0a       	sbc	r12, r20
     f54:	d5 0a       	sbc	r13, r21
     f56:	c6 01       	movw	r24, r12
     f58:	b5 01       	movw	r22, r10
     f5a:	69 96       	adiw	r28, 0x19	; 25
     f5c:	2c ad       	ldd	r18, Y+60	; 0x3c
     f5e:	3d ad       	ldd	r19, Y+61	; 0x3d
     f60:	4e ad       	ldd	r20, Y+62	; 0x3e
     f62:	5f ad       	ldd	r21, Y+63	; 0x3f
     f64:	69 97       	sbiw	r28, 0x19	; 25
     f66:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
     f6a:	7b 01       	movw	r14, r22
     f6c:	8c 01       	movw	r16, r24
     f6e:	c6 01       	movw	r24, r12
     f70:	b5 01       	movw	r22, r10
     f72:	69 96       	adiw	r28, 0x19	; 25
     f74:	2c ad       	ldd	r18, Y+60	; 0x3c
     f76:	3d ad       	ldd	r19, Y+61	; 0x3d
     f78:	4e ad       	ldd	r20, Y+62	; 0x3e
     f7a:	5f ad       	ldd	r21, Y+63	; 0x3f
     f7c:	69 97       	sbiw	r28, 0x19	; 25
     f7e:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
     f82:	c9 01       	movw	r24, r18
     f84:	da 01       	movw	r26, r20
     f86:	5c 01       	movw	r10, r24
     f88:	6d 01       	movw	r12, r26
     f8a:	c6 01       	movw	r24, r12
     f8c:	b5 01       	movw	r22, r10
     f8e:	6d 96       	adiw	r28, 0x1d	; 29
     f90:	2c ad       	ldd	r18, Y+60	; 0x3c
     f92:	3d ad       	ldd	r19, Y+61	; 0x3d
     f94:	4e ad       	ldd	r20, Y+62	; 0x3e
     f96:	5f ad       	ldd	r21, Y+63	; 0x3f
     f98:	6d 97       	sbiw	r28, 0x1d	; 29
     f9a:	0e 94 43 2e 	call	0x5c86	; 0x5c86 <__mulsi3>
     f9e:	9b 01       	movw	r18, r22
     fa0:	ac 01       	movw	r20, r24
     fa2:	87 01       	movw	r16, r14
     fa4:	ff 24       	eor	r15, r15
     fa6:	ee 24       	eor	r14, r14
     fa8:	21 96       	adiw	r28, 0x01	; 1
     faa:	8c ad       	ldd	r24, Y+60	; 0x3c
     fac:	9d ad       	ldd	r25, Y+61	; 0x3d
     fae:	ae ad       	ldd	r26, Y+62	; 0x3e
     fb0:	bf ad       	ldd	r27, Y+63	; 0x3f
     fb2:	21 97       	sbiw	r28, 0x01	; 1
     fb4:	a0 70       	andi	r26, 0x00	; 0
     fb6:	b0 70       	andi	r27, 0x00	; 0
     fb8:	e8 2a       	or	r14, r24
     fba:	f9 2a       	or	r15, r25
     fbc:	0a 2b       	or	r16, r26
     fbe:	1b 2b       	or	r17, r27
     fc0:	e2 16       	cp	r14, r18
     fc2:	f3 06       	cpc	r15, r19
     fc4:	04 07       	cpc	r16, r20
     fc6:	15 07       	cpc	r17, r21
     fc8:	c0 f4       	brcc	.+48     	; 0xffa <__stack+0x79b>
     fca:	08 94       	sec
     fcc:	a1 08       	sbc	r10, r1
     fce:	b1 08       	sbc	r11, r1
     fd0:	c1 08       	sbc	r12, r1
     fd2:	d1 08       	sbc	r13, r1
     fd4:	e2 0c       	add	r14, r2
     fd6:	f3 1c       	adc	r15, r3
     fd8:	04 1d       	adc	r16, r4
     fda:	15 1d       	adc	r17, r5
     fdc:	e2 14       	cp	r14, r2
     fde:	f3 04       	cpc	r15, r3
     fe0:	04 05       	cpc	r16, r4
     fe2:	15 05       	cpc	r17, r5
     fe4:	50 f0       	brcs	.+20     	; 0xffa <__stack+0x79b>
     fe6:	e2 16       	cp	r14, r18
     fe8:	f3 06       	cpc	r15, r19
     fea:	04 07       	cpc	r16, r20
     fec:	15 07       	cpc	r17, r21
     fee:	28 f4       	brcc	.+10     	; 0xffa <__stack+0x79b>
     ff0:	08 94       	sec
     ff2:	a1 08       	sbc	r10, r1
     ff4:	b1 08       	sbc	r11, r1
     ff6:	c1 08       	sbc	r12, r1
     ff8:	d1 08       	sbc	r13, r1
     ffa:	a1 96       	adiw	r28, 0x21	; 33
     ffc:	ec ac       	ldd	r14, Y+60	; 0x3c
     ffe:	fd ac       	ldd	r15, Y+61	; 0x3d
    1000:	0e ad       	ldd	r16, Y+62	; 0x3e
    1002:	1f ad       	ldd	r17, Y+63	; 0x3f
    1004:	a1 97       	sbiw	r28, 0x21	; 33
    1006:	d7 01       	movw	r26, r14
    1008:	99 27       	eor	r25, r25
    100a:	88 27       	eor	r24, r24
    100c:	96 01       	movw	r18, r12
    100e:	85 01       	movw	r16, r10
    1010:	08 2b       	or	r16, r24
    1012:	19 2b       	or	r17, r25
    1014:	2a 2b       	or	r18, r26
    1016:	3b 2b       	or	r19, r27
    1018:	25 96       	adiw	r28, 0x05	; 5
    101a:	0c af       	std	Y+60, r16	; 0x3c
    101c:	1d af       	std	Y+61, r17	; 0x3d
    101e:	2e af       	std	Y+62, r18	; 0x3e
    1020:	3f af       	std	Y+63, r19	; 0x3f
    1022:	25 97       	sbiw	r28, 0x05	; 5
    1024:	72 c2       	rjmp	.+1252   	; 0x150a <__stack+0xcab>
    1026:	6e 14       	cp	r6, r14
    1028:	7f 04       	cpc	r7, r15
    102a:	80 06       	cpc	r8, r16
    102c:	91 06       	cpc	r9, r17
    102e:	08 f4       	brcc	.+2      	; 0x1032 <__stack+0x7d3>
    1030:	5f c2       	rjmp	.+1214   	; 0x14f0 <__stack+0xc91>
    1032:	20 e0       	ldi	r18, 0x00	; 0
    1034:	e2 16       	cp	r14, r18
    1036:	20 e0       	ldi	r18, 0x00	; 0
    1038:	f2 06       	cpc	r15, r18
    103a:	21 e0       	ldi	r18, 0x01	; 1
    103c:	02 07       	cpc	r16, r18
    103e:	20 e0       	ldi	r18, 0x00	; 0
    1040:	12 07       	cpc	r17, r18
    1042:	88 f4       	brcc	.+34     	; 0x1066 <__stack+0x807>
    1044:	3f ef       	ldi	r19, 0xFF	; 255
    1046:	e3 16       	cp	r14, r19
    1048:	f1 04       	cpc	r15, r1
    104a:	01 05       	cpc	r16, r1
    104c:	11 05       	cpc	r17, r1
    104e:	31 f0       	breq	.+12     	; 0x105c <__stack+0x7fd>
    1050:	28 f0       	brcs	.+10     	; 0x105c <__stack+0x7fd>
    1052:	48 e0       	ldi	r20, 0x08	; 8
    1054:	50 e0       	ldi	r21, 0x00	; 0
    1056:	60 e0       	ldi	r22, 0x00	; 0
    1058:	70 e0       	ldi	r23, 0x00	; 0
    105a:	17 c0       	rjmp	.+46     	; 0x108a <__stack+0x82b>
    105c:	40 e0       	ldi	r20, 0x00	; 0
    105e:	50 e0       	ldi	r21, 0x00	; 0
    1060:	60 e0       	ldi	r22, 0x00	; 0
    1062:	70 e0       	ldi	r23, 0x00	; 0
    1064:	12 c0       	rjmp	.+36     	; 0x108a <__stack+0x82b>
    1066:	40 e0       	ldi	r20, 0x00	; 0
    1068:	e4 16       	cp	r14, r20
    106a:	40 e0       	ldi	r20, 0x00	; 0
    106c:	f4 06       	cpc	r15, r20
    106e:	40 e0       	ldi	r20, 0x00	; 0
    1070:	04 07       	cpc	r16, r20
    1072:	41 e0       	ldi	r20, 0x01	; 1
    1074:	14 07       	cpc	r17, r20
    1076:	28 f0       	brcs	.+10     	; 0x1082 <__stack+0x823>
    1078:	48 e1       	ldi	r20, 0x18	; 24
    107a:	50 e0       	ldi	r21, 0x00	; 0
    107c:	60 e0       	ldi	r22, 0x00	; 0
    107e:	70 e0       	ldi	r23, 0x00	; 0
    1080:	04 c0       	rjmp	.+8      	; 0x108a <__stack+0x82b>
    1082:	40 e1       	ldi	r20, 0x10	; 16
    1084:	50 e0       	ldi	r21, 0x00	; 0
    1086:	60 e0       	ldi	r22, 0x00	; 0
    1088:	70 e0       	ldi	r23, 0x00	; 0
    108a:	d8 01       	movw	r26, r16
    108c:	c7 01       	movw	r24, r14
    108e:	04 2e       	mov	r0, r20
    1090:	04 c0       	rjmp	.+8      	; 0x109a <__stack+0x83b>
    1092:	b6 95       	lsr	r27
    1094:	a7 95       	ror	r26
    1096:	97 95       	ror	r25
    1098:	87 95       	ror	r24
    109a:	0a 94       	dec	r0
    109c:	d2 f7       	brpl	.-12     	; 0x1092 <__stack+0x833>
    109e:	82 59       	subi	r24, 0x92	; 146
    10a0:	9f 4f       	sbci	r25, 0xFF	; 255
    10a2:	dc 01       	movw	r26, r24
    10a4:	2c 91       	ld	r18, X
    10a6:	30 e2       	ldi	r19, 0x20	; 32
    10a8:	a3 2e       	mov	r10, r19
    10aa:	b1 2c       	mov	r11, r1
    10ac:	c1 2c       	mov	r12, r1
    10ae:	d1 2c       	mov	r13, r1
    10b0:	d6 01       	movw	r26, r12
    10b2:	c5 01       	movw	r24, r10
    10b4:	84 1b       	sub	r24, r20
    10b6:	95 0b       	sbc	r25, r21
    10b8:	a6 0b       	sbc	r26, r22
    10ba:	b7 0b       	sbc	r27, r23
    10bc:	82 1b       	sub	r24, r18
    10be:	91 09       	sbc	r25, r1
    10c0:	a1 09       	sbc	r26, r1
    10c2:	b1 09       	sbc	r27, r1
    10c4:	00 97       	sbiw	r24, 0x00	; 0
    10c6:	a1 05       	cpc	r26, r1
    10c8:	b1 05       	cpc	r27, r1
    10ca:	99 f4       	brne	.+38     	; 0x10f2 <__stack+0x893>
    10cc:	e6 14       	cp	r14, r6
    10ce:	f7 04       	cpc	r15, r7
    10d0:	08 05       	cpc	r16, r8
    10d2:	19 05       	cpc	r17, r9
    10d4:	08 f4       	brcc	.+2      	; 0x10d8 <__stack+0x879>
    10d6:	fe c1       	rjmp	.+1020   	; 0x14d4 <__stack+0xc75>
    10d8:	21 96       	adiw	r28, 0x01	; 1
    10da:	6c ac       	ldd	r6, Y+60	; 0x3c
    10dc:	7d ac       	ldd	r7, Y+61	; 0x3d
    10de:	8e ac       	ldd	r8, Y+62	; 0x3e
    10e0:	9f ac       	ldd	r9, Y+63	; 0x3f
    10e2:	21 97       	sbiw	r28, 0x01	; 1
    10e4:	62 14       	cp	r6, r2
    10e6:	73 04       	cpc	r7, r3
    10e8:	84 04       	cpc	r8, r4
    10ea:	95 04       	cpc	r9, r5
    10ec:	08 f0       	brcs	.+2      	; 0x10f0 <__stack+0x891>
    10ee:	f2 c1       	rjmp	.+996    	; 0x14d4 <__stack+0xc75>
    10f0:	ff c1       	rjmp	.+1022   	; 0x14f0 <__stack+0xc91>
    10f2:	e2 96       	adiw	r28, 0x32	; 50
    10f4:	8f af       	std	Y+63, r24	; 0x3f
    10f6:	e2 97       	sbiw	r28, 0x32	; 50
    10f8:	08 2e       	mov	r0, r24
    10fa:	04 c0       	rjmp	.+8      	; 0x1104 <__stack+0x8a5>
    10fc:	ee 0c       	add	r14, r14
    10fe:	ff 1c       	adc	r15, r15
    1100:	00 1f       	adc	r16, r16
    1102:	11 1f       	adc	r17, r17
    1104:	0a 94       	dec	r0
    1106:	d2 f7       	brpl	.-12     	; 0x10fc <__stack+0x89d>
    1108:	6a 2d       	mov	r22, r10
    110a:	68 1b       	sub	r22, r24
    110c:	d2 01       	movw	r26, r4
    110e:	c1 01       	movw	r24, r2
    1110:	06 2e       	mov	r0, r22
    1112:	04 c0       	rjmp	.+8      	; 0x111c <__stack+0x8bd>
    1114:	b6 95       	lsr	r27
    1116:	a7 95       	ror	r26
    1118:	97 95       	ror	r25
    111a:	87 95       	ror	r24
    111c:	0a 94       	dec	r0
    111e:	d2 f7       	brpl	.-12     	; 0x1114 <__stack+0x8b5>
    1120:	5c 01       	movw	r10, r24
    1122:	6d 01       	movw	r12, r26
    1124:	ae 28       	or	r10, r14
    1126:	bf 28       	or	r11, r15
    1128:	c0 2a       	or	r12, r16
    112a:	d1 2a       	or	r13, r17
    112c:	ad aa       	std	Y+53, r10	; 0x35
    112e:	be aa       	std	Y+54, r11	; 0x36
    1130:	cf aa       	std	Y+55, r12	; 0x37
    1132:	d8 ae       	std	Y+56, r13	; 0x38
    1134:	72 01       	movw	r14, r4
    1136:	61 01       	movw	r12, r2
    1138:	e2 96       	adiw	r28, 0x32	; 50
    113a:	0f ac       	ldd	r0, Y+63	; 0x3f
    113c:	e2 97       	sbiw	r28, 0x32	; 50
    113e:	04 c0       	rjmp	.+8      	; 0x1148 <__stack+0x8e9>
    1140:	cc 0c       	add	r12, r12
    1142:	dd 1c       	adc	r13, r13
    1144:	ee 1c       	adc	r14, r14
    1146:	ff 1c       	adc	r15, r15
    1148:	0a 94       	dec	r0
    114a:	d2 f7       	brpl	.-12     	; 0x1140 <__stack+0x8e1>
    114c:	c9 aa       	std	Y+49, r12	; 0x31
    114e:	da aa       	std	Y+50, r13	; 0x32
    1150:	eb aa       	std	Y+51, r14	; 0x33
    1152:	fc aa       	std	Y+52, r15	; 0x34
    1154:	64 01       	movw	r12, r8
    1156:	53 01       	movw	r10, r6
    1158:	06 2e       	mov	r0, r22
    115a:	04 c0       	rjmp	.+8      	; 0x1164 <__stack+0x905>
    115c:	d6 94       	lsr	r13
    115e:	c7 94       	ror	r12
    1160:	b7 94       	ror	r11
    1162:	a7 94       	ror	r10
    1164:	0a 94       	dec	r0
    1166:	d2 f7       	brpl	.-12     	; 0x115c <__stack+0x8fd>
    1168:	d4 01       	movw	r26, r8
    116a:	c3 01       	movw	r24, r6
    116c:	e2 96       	adiw	r28, 0x32	; 50
    116e:	0f ac       	ldd	r0, Y+63	; 0x3f
    1170:	e2 97       	sbiw	r28, 0x32	; 50
    1172:	04 c0       	rjmp	.+8      	; 0x117c <__stack+0x91d>
    1174:	88 0f       	add	r24, r24
    1176:	99 1f       	adc	r25, r25
    1178:	aa 1f       	adc	r26, r26
    117a:	bb 1f       	adc	r27, r27
    117c:	0a 94       	dec	r0
    117e:	d2 f7       	brpl	.-12     	; 0x1174 <__stack+0x915>
    1180:	21 96       	adiw	r28, 0x01	; 1
    1182:	ec ac       	ldd	r14, Y+60	; 0x3c
    1184:	fd ac       	ldd	r15, Y+61	; 0x3d
    1186:	0e ad       	ldd	r16, Y+62	; 0x3e
    1188:	1f ad       	ldd	r17, Y+63	; 0x3f
    118a:	21 97       	sbiw	r28, 0x01	; 1
    118c:	04 c0       	rjmp	.+8      	; 0x1196 <__stack+0x937>
    118e:	16 95       	lsr	r17
    1190:	07 95       	ror	r16
    1192:	f7 94       	ror	r15
    1194:	e7 94       	ror	r14
    1196:	6a 95       	dec	r22
    1198:	d2 f7       	brpl	.-12     	; 0x118e <__stack+0x92f>
    119a:	37 01       	movw	r6, r14
    119c:	48 01       	movw	r8, r16
    119e:	68 2a       	or	r6, r24
    11a0:	79 2a       	or	r7, r25
    11a2:	8a 2a       	or	r8, r26
    11a4:	9b 2a       	or	r9, r27
    11a6:	6d a6       	std	Y+45, r6	; 0x2d
    11a8:	7e a6       	std	Y+46, r7	; 0x2e
    11aa:	8f a6       	std	Y+47, r8	; 0x2f
    11ac:	98 aa       	std	Y+48, r9	; 0x30
    11ae:	ed a8       	ldd	r14, Y+53	; 0x35
    11b0:	fe a8       	ldd	r15, Y+54	; 0x36
    11b2:	0f a9       	ldd	r16, Y+55	; 0x37
    11b4:	18 ad       	ldd	r17, Y+56	; 0x38
    11b6:	38 01       	movw	r6, r16
    11b8:	88 24       	eor	r8, r8
    11ba:	99 24       	eor	r9, r9
    11bc:	98 01       	movw	r18, r16
    11be:	87 01       	movw	r16, r14
    11c0:	20 70       	andi	r18, 0x00	; 0
    11c2:	30 70       	andi	r19, 0x00	; 0
    11c4:	a5 96       	adiw	r28, 0x25	; 37
    11c6:	0c af       	std	Y+60, r16	; 0x3c
    11c8:	1d af       	std	Y+61, r17	; 0x3d
    11ca:	2e af       	std	Y+62, r18	; 0x3e
    11cc:	3f af       	std	Y+63, r19	; 0x3f
    11ce:	a5 97       	sbiw	r28, 0x25	; 37
    11d0:	c6 01       	movw	r24, r12
    11d2:	b5 01       	movw	r22, r10
    11d4:	a4 01       	movw	r20, r8
    11d6:	93 01       	movw	r18, r6
    11d8:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
    11dc:	7b 01       	movw	r14, r22
    11de:	8c 01       	movw	r16, r24
    11e0:	c6 01       	movw	r24, r12
    11e2:	b5 01       	movw	r22, r10
    11e4:	a4 01       	movw	r20, r8
    11e6:	93 01       	movw	r18, r6
    11e8:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
    11ec:	c9 01       	movw	r24, r18
    11ee:	da 01       	movw	r26, r20
    11f0:	1c 01       	movw	r2, r24
    11f2:	2d 01       	movw	r4, r26
    11f4:	c2 01       	movw	r24, r4
    11f6:	b1 01       	movw	r22, r2
    11f8:	a5 96       	adiw	r28, 0x25	; 37
    11fa:	2c ad       	ldd	r18, Y+60	; 0x3c
    11fc:	3d ad       	ldd	r19, Y+61	; 0x3d
    11fe:	4e ad       	ldd	r20, Y+62	; 0x3e
    1200:	5f ad       	ldd	r21, Y+63	; 0x3f
    1202:	a5 97       	sbiw	r28, 0x25	; 37
    1204:	0e 94 43 2e 	call	0x5c86	; 0x5c86 <__mulsi3>
    1208:	9b 01       	movw	r18, r22
    120a:	ac 01       	movw	r20, r24
    120c:	87 01       	movw	r16, r14
    120e:	ff 24       	eor	r15, r15
    1210:	ee 24       	eor	r14, r14
    1212:	ad a4       	ldd	r10, Y+45	; 0x2d
    1214:	be a4       	ldd	r11, Y+46	; 0x2e
    1216:	cf a4       	ldd	r12, Y+47	; 0x2f
    1218:	d8 a8       	ldd	r13, Y+48	; 0x30
    121a:	c6 01       	movw	r24, r12
    121c:	aa 27       	eor	r26, r26
    121e:	bb 27       	eor	r27, r27
    1220:	57 01       	movw	r10, r14
    1222:	68 01       	movw	r12, r16
    1224:	a8 2a       	or	r10, r24
    1226:	b9 2a       	or	r11, r25
    1228:	ca 2a       	or	r12, r26
    122a:	db 2a       	or	r13, r27
    122c:	a2 16       	cp	r10, r18
    122e:	b3 06       	cpc	r11, r19
    1230:	c4 06       	cpc	r12, r20
    1232:	d5 06       	cpc	r13, r21
    1234:	00 f5       	brcc	.+64     	; 0x1276 <__stack+0xa17>
    1236:	08 94       	sec
    1238:	21 08       	sbc	r2, r1
    123a:	31 08       	sbc	r3, r1
    123c:	41 08       	sbc	r4, r1
    123e:	51 08       	sbc	r5, r1
    1240:	ed a8       	ldd	r14, Y+53	; 0x35
    1242:	fe a8       	ldd	r15, Y+54	; 0x36
    1244:	0f a9       	ldd	r16, Y+55	; 0x37
    1246:	18 ad       	ldd	r17, Y+56	; 0x38
    1248:	ae 0c       	add	r10, r14
    124a:	bf 1c       	adc	r11, r15
    124c:	c0 1e       	adc	r12, r16
    124e:	d1 1e       	adc	r13, r17
    1250:	ae 14       	cp	r10, r14
    1252:	bf 04       	cpc	r11, r15
    1254:	c0 06       	cpc	r12, r16
    1256:	d1 06       	cpc	r13, r17
    1258:	70 f0       	brcs	.+28     	; 0x1276 <__stack+0xa17>
    125a:	a2 16       	cp	r10, r18
    125c:	b3 06       	cpc	r11, r19
    125e:	c4 06       	cpc	r12, r20
    1260:	d5 06       	cpc	r13, r21
    1262:	48 f4       	brcc	.+18     	; 0x1276 <__stack+0xa17>
    1264:	08 94       	sec
    1266:	21 08       	sbc	r2, r1
    1268:	31 08       	sbc	r3, r1
    126a:	41 08       	sbc	r4, r1
    126c:	51 08       	sbc	r5, r1
    126e:	ae 0c       	add	r10, r14
    1270:	bf 1c       	adc	r11, r15
    1272:	c0 1e       	adc	r12, r16
    1274:	d1 1e       	adc	r13, r17
    1276:	a2 1a       	sub	r10, r18
    1278:	b3 0a       	sbc	r11, r19
    127a:	c4 0a       	sbc	r12, r20
    127c:	d5 0a       	sbc	r13, r21
    127e:	c6 01       	movw	r24, r12
    1280:	b5 01       	movw	r22, r10
    1282:	a4 01       	movw	r20, r8
    1284:	93 01       	movw	r18, r6
    1286:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
    128a:	7b 01       	movw	r14, r22
    128c:	8c 01       	movw	r16, r24
    128e:	c6 01       	movw	r24, r12
    1290:	b5 01       	movw	r22, r10
    1292:	a4 01       	movw	r20, r8
    1294:	93 01       	movw	r18, r6
    1296:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
    129a:	c9 01       	movw	r24, r18
    129c:	da 01       	movw	r26, r20
    129e:	3c 01       	movw	r6, r24
    12a0:	4d 01       	movw	r8, r26
    12a2:	c4 01       	movw	r24, r8
    12a4:	b3 01       	movw	r22, r6
    12a6:	a5 96       	adiw	r28, 0x25	; 37
    12a8:	2c ad       	ldd	r18, Y+60	; 0x3c
    12aa:	3d ad       	ldd	r19, Y+61	; 0x3d
    12ac:	4e ad       	ldd	r20, Y+62	; 0x3e
    12ae:	5f ad       	ldd	r21, Y+63	; 0x3f
    12b0:	a5 97       	sbiw	r28, 0x25	; 37
    12b2:	0e 94 43 2e 	call	0x5c86	; 0x5c86 <__mulsi3>
    12b6:	9b 01       	movw	r18, r22
    12b8:	ac 01       	movw	r20, r24
    12ba:	87 01       	movw	r16, r14
    12bc:	ff 24       	eor	r15, r15
    12be:	ee 24       	eor	r14, r14
    12c0:	8d a5       	ldd	r24, Y+45	; 0x2d
    12c2:	9e a5       	ldd	r25, Y+46	; 0x2e
    12c4:	af a5       	ldd	r26, Y+47	; 0x2f
    12c6:	b8 a9       	ldd	r27, Y+48	; 0x30
    12c8:	a0 70       	andi	r26, 0x00	; 0
    12ca:	b0 70       	andi	r27, 0x00	; 0
    12cc:	57 01       	movw	r10, r14
    12ce:	68 01       	movw	r12, r16
    12d0:	a8 2a       	or	r10, r24
    12d2:	b9 2a       	or	r11, r25
    12d4:	ca 2a       	or	r12, r26
    12d6:	db 2a       	or	r13, r27
    12d8:	a2 16       	cp	r10, r18
    12da:	b3 06       	cpc	r11, r19
    12dc:	c4 06       	cpc	r12, r20
    12de:	d5 06       	cpc	r13, r21
    12e0:	00 f5       	brcc	.+64     	; 0x1322 <__stack+0xac3>
    12e2:	08 94       	sec
    12e4:	61 08       	sbc	r6, r1
    12e6:	71 08       	sbc	r7, r1
    12e8:	81 08       	sbc	r8, r1
    12ea:	91 08       	sbc	r9, r1
    12ec:	6d a9       	ldd	r22, Y+53	; 0x35
    12ee:	7e a9       	ldd	r23, Y+54	; 0x36
    12f0:	8f a9       	ldd	r24, Y+55	; 0x37
    12f2:	98 ad       	ldd	r25, Y+56	; 0x38
    12f4:	a6 0e       	add	r10, r22
    12f6:	b7 1e       	adc	r11, r23
    12f8:	c8 1e       	adc	r12, r24
    12fa:	d9 1e       	adc	r13, r25
    12fc:	a6 16       	cp	r10, r22
    12fe:	b7 06       	cpc	r11, r23
    1300:	c8 06       	cpc	r12, r24
    1302:	d9 06       	cpc	r13, r25
    1304:	70 f0       	brcs	.+28     	; 0x1322 <__stack+0xac3>
    1306:	a2 16       	cp	r10, r18
    1308:	b3 06       	cpc	r11, r19
    130a:	c4 06       	cpc	r12, r20
    130c:	d5 06       	cpc	r13, r21
    130e:	48 f4       	brcc	.+18     	; 0x1322 <__stack+0xac3>
    1310:	08 94       	sec
    1312:	61 08       	sbc	r6, r1
    1314:	71 08       	sbc	r7, r1
    1316:	81 08       	sbc	r8, r1
    1318:	91 08       	sbc	r9, r1
    131a:	a6 0e       	add	r10, r22
    131c:	b7 1e       	adc	r11, r23
    131e:	c8 1e       	adc	r12, r24
    1320:	d9 1e       	adc	r13, r25
    1322:	d6 01       	movw	r26, r12
    1324:	c5 01       	movw	r24, r10
    1326:	82 1b       	sub	r24, r18
    1328:	93 0b       	sbc	r25, r19
    132a:	a4 0b       	sbc	r26, r20
    132c:	b5 0b       	sbc	r27, r21
    132e:	89 a7       	std	Y+41, r24	; 0x29
    1330:	9a a7       	std	Y+42, r25	; 0x2a
    1332:	ab a7       	std	Y+43, r26	; 0x2b
    1334:	bc a7       	std	Y+44, r27	; 0x2c
    1336:	d1 01       	movw	r26, r2
    1338:	99 27       	eor	r25, r25
    133a:	88 27       	eor	r24, r24
    133c:	64 01       	movw	r12, r8
    133e:	53 01       	movw	r10, r6
    1340:	a8 2a       	or	r10, r24
    1342:	b9 2a       	or	r11, r25
    1344:	ca 2a       	or	r12, r26
    1346:	db 2a       	or	r13, r27
    1348:	25 96       	adiw	r28, 0x05	; 5
    134a:	ac ae       	std	Y+60, r10	; 0x3c
    134c:	bd ae       	std	Y+61, r11	; 0x3d
    134e:	ce ae       	std	Y+62, r12	; 0x3e
    1350:	df ae       	std	Y+63, r13	; 0x3f
    1352:	25 97       	sbiw	r28, 0x05	; 5
    1354:	86 01       	movw	r16, r12
    1356:	75 01       	movw	r14, r10
    1358:	2f ef       	ldi	r18, 0xFF	; 255
    135a:	3f ef       	ldi	r19, 0xFF	; 255
    135c:	40 e0       	ldi	r20, 0x00	; 0
    135e:	50 e0       	ldi	r21, 0x00	; 0
    1360:	e2 22       	and	r14, r18
    1362:	f3 22       	and	r15, r19
    1364:	04 23       	and	r16, r20
    1366:	15 23       	and	r17, r21
    1368:	a6 01       	movw	r20, r12
    136a:	66 27       	eor	r22, r22
    136c:	77 27       	eor	r23, r23
    136e:	ad 96       	adiw	r28, 0x2d	; 45
    1370:	4c af       	std	Y+60, r20	; 0x3c
    1372:	5d af       	std	Y+61, r21	; 0x3d
    1374:	6e af       	std	Y+62, r22	; 0x3e
    1376:	7f af       	std	Y+63, r23	; 0x3f
    1378:	ad 97       	sbiw	r28, 0x2d	; 45
    137a:	a9 a8       	ldd	r10, Y+49	; 0x31
    137c:	ba a8       	ldd	r11, Y+50	; 0x32
    137e:	cb a8       	ldd	r12, Y+51	; 0x33
    1380:	dc a8       	ldd	r13, Y+52	; 0x34
    1382:	6f ef       	ldi	r22, 0xFF	; 255
    1384:	7f ef       	ldi	r23, 0xFF	; 255
    1386:	80 e0       	ldi	r24, 0x00	; 0
    1388:	90 e0       	ldi	r25, 0x00	; 0
    138a:	a6 22       	and	r10, r22
    138c:	b7 22       	and	r11, r23
    138e:	c8 22       	and	r12, r24
    1390:	d9 22       	and	r13, r25
    1392:	89 a9       	ldd	r24, Y+49	; 0x31
    1394:	9a a9       	ldd	r25, Y+50	; 0x32
    1396:	ab a9       	ldd	r26, Y+51	; 0x33
    1398:	bc a9       	ldd	r27, Y+52	; 0x34
    139a:	1d 01       	movw	r2, r26
    139c:	44 24       	eor	r4, r4
    139e:	55 24       	eor	r5, r5
    13a0:	c8 01       	movw	r24, r16
    13a2:	b7 01       	movw	r22, r14
    13a4:	a6 01       	movw	r20, r12
    13a6:	95 01       	movw	r18, r10
    13a8:	0e 94 43 2e 	call	0x5c86	; 0x5c86 <__mulsi3>
    13ac:	a9 96       	adiw	r28, 0x29	; 41
    13ae:	6c af       	std	Y+60, r22	; 0x3c
    13b0:	7d af       	std	Y+61, r23	; 0x3d
    13b2:	8e af       	std	Y+62, r24	; 0x3e
    13b4:	9f af       	std	Y+63, r25	; 0x3f
    13b6:	a9 97       	sbiw	r28, 0x29	; 41
    13b8:	c8 01       	movw	r24, r16
    13ba:	b7 01       	movw	r22, r14
    13bc:	a2 01       	movw	r20, r4
    13be:	91 01       	movw	r18, r2
    13c0:	0e 94 43 2e 	call	0x5c86	; 0x5c86 <__mulsi3>
    13c4:	3b 01       	movw	r6, r22
    13c6:	4c 01       	movw	r8, r24
    13c8:	ad 96       	adiw	r28, 0x2d	; 45
    13ca:	6c ad       	ldd	r22, Y+60	; 0x3c
    13cc:	7d ad       	ldd	r23, Y+61	; 0x3d
    13ce:	8e ad       	ldd	r24, Y+62	; 0x3e
    13d0:	9f ad       	ldd	r25, Y+63	; 0x3f
    13d2:	ad 97       	sbiw	r28, 0x2d	; 45
    13d4:	a6 01       	movw	r20, r12
    13d6:	95 01       	movw	r18, r10
    13d8:	0e 94 43 2e 	call	0x5c86	; 0x5c86 <__mulsi3>
    13dc:	7b 01       	movw	r14, r22
    13de:	8c 01       	movw	r16, r24
    13e0:	ad 96       	adiw	r28, 0x2d	; 45
    13e2:	6c ad       	ldd	r22, Y+60	; 0x3c
    13e4:	7d ad       	ldd	r23, Y+61	; 0x3d
    13e6:	8e ad       	ldd	r24, Y+62	; 0x3e
    13e8:	9f ad       	ldd	r25, Y+63	; 0x3f
    13ea:	ad 97       	sbiw	r28, 0x2d	; 45
    13ec:	a2 01       	movw	r20, r4
    13ee:	91 01       	movw	r18, r2
    13f0:	0e 94 43 2e 	call	0x5c86	; 0x5c86 <__mulsi3>
    13f4:	5b 01       	movw	r10, r22
    13f6:	6c 01       	movw	r12, r24
    13f8:	a8 01       	movw	r20, r16
    13fa:	97 01       	movw	r18, r14
    13fc:	26 0d       	add	r18, r6
    13fe:	37 1d       	adc	r19, r7
    1400:	48 1d       	adc	r20, r8
    1402:	59 1d       	adc	r21, r9
    1404:	a9 96       	adiw	r28, 0x29	; 41
    1406:	6c ac       	ldd	r6, Y+60	; 0x3c
    1408:	7d ac       	ldd	r7, Y+61	; 0x3d
    140a:	8e ac       	ldd	r8, Y+62	; 0x3e
    140c:	9f ac       	ldd	r9, Y+63	; 0x3f
    140e:	a9 97       	sbiw	r28, 0x29	; 41
    1410:	c4 01       	movw	r24, r8
    1412:	aa 27       	eor	r26, r26
    1414:	bb 27       	eor	r27, r27
    1416:	28 0f       	add	r18, r24
    1418:	39 1f       	adc	r19, r25
    141a:	4a 1f       	adc	r20, r26
    141c:	5b 1f       	adc	r21, r27
    141e:	2e 15       	cp	r18, r14
    1420:	3f 05       	cpc	r19, r15
    1422:	40 07       	cpc	r20, r16
    1424:	51 07       	cpc	r21, r17
    1426:	48 f4       	brcc	.+18     	; 0x143a <__stack+0xbdb>
    1428:	e1 2c       	mov	r14, r1
    142a:	f1 2c       	mov	r15, r1
    142c:	61 e0       	ldi	r22, 0x01	; 1
    142e:	06 2f       	mov	r16, r22
    1430:	11 2d       	mov	r17, r1
    1432:	ae 0c       	add	r10, r14
    1434:	bf 1c       	adc	r11, r15
    1436:	c0 1e       	adc	r12, r16
    1438:	d1 1e       	adc	r13, r17
    143a:	ca 01       	movw	r24, r20
    143c:	aa 27       	eor	r26, r26
    143e:	bb 27       	eor	r27, r27
    1440:	bc 01       	movw	r22, r24
    1442:	cd 01       	movw	r24, r26
    1444:	6a 0d       	add	r22, r10
    1446:	7b 1d       	adc	r23, r11
    1448:	8c 1d       	adc	r24, r12
    144a:	9d 1d       	adc	r25, r13
    144c:	69 a4       	ldd	r6, Y+41	; 0x29
    144e:	7a a4       	ldd	r7, Y+42	; 0x2a
    1450:	8b a4       	ldd	r8, Y+43	; 0x2b
    1452:	9c a4       	ldd	r9, Y+44	; 0x2c
    1454:	66 16       	cp	r6, r22
    1456:	77 06       	cpc	r7, r23
    1458:	88 06       	cpc	r8, r24
    145a:	99 06       	cpc	r9, r25
    145c:	50 f1       	brcs	.+84     	; 0x14b2 <__stack+0xc53>
    145e:	66 15       	cp	r22, r6
    1460:	77 05       	cpc	r23, r7
    1462:	88 05       	cpc	r24, r8
    1464:	99 05       	cpc	r25, r9
    1466:	09 f0       	breq	.+2      	; 0x146a <__stack+0xc0b>
    1468:	4d c0       	rjmp	.+154    	; 0x1504 <__stack+0xca5>
    146a:	d9 01       	movw	r26, r18
    146c:	99 27       	eor	r25, r25
    146e:	88 27       	eor	r24, r24
    1470:	a9 96       	adiw	r28, 0x29	; 41
    1472:	2c ad       	ldd	r18, Y+60	; 0x3c
    1474:	3d ad       	ldd	r19, Y+61	; 0x3d
    1476:	4e ad       	ldd	r20, Y+62	; 0x3e
    1478:	5f ad       	ldd	r21, Y+63	; 0x3f
    147a:	a9 97       	sbiw	r28, 0x29	; 41
    147c:	40 70       	andi	r20, 0x00	; 0
    147e:	50 70       	andi	r21, 0x00	; 0
    1480:	82 0f       	add	r24, r18
    1482:	93 1f       	adc	r25, r19
    1484:	a4 1f       	adc	r26, r20
    1486:	b5 1f       	adc	r27, r21
    1488:	21 96       	adiw	r28, 0x01	; 1
    148a:	2c ad       	ldd	r18, Y+60	; 0x3c
    148c:	3d ad       	ldd	r19, Y+61	; 0x3d
    148e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1490:	5f ad       	ldd	r21, Y+63	; 0x3f
    1492:	21 97       	sbiw	r28, 0x01	; 1
    1494:	e2 96       	adiw	r28, 0x32	; 50
    1496:	0f ac       	ldd	r0, Y+63	; 0x3f
    1498:	e2 97       	sbiw	r28, 0x32	; 50
    149a:	04 c0       	rjmp	.+8      	; 0x14a4 <__stack+0xc45>
    149c:	22 0f       	add	r18, r18
    149e:	33 1f       	adc	r19, r19
    14a0:	44 1f       	adc	r20, r20
    14a2:	55 1f       	adc	r21, r21
    14a4:	0a 94       	dec	r0
    14a6:	d2 f7       	brpl	.-12     	; 0x149c <__stack+0xc3d>
    14a8:	28 17       	cp	r18, r24
    14aa:	39 07       	cpc	r19, r25
    14ac:	4a 07       	cpc	r20, r26
    14ae:	5b 07       	cpc	r21, r27
    14b0:	48 f5       	brcc	.+82     	; 0x1504 <__stack+0xca5>
    14b2:	25 96       	adiw	r28, 0x05	; 5
    14b4:	0c ad       	ldd	r16, Y+60	; 0x3c
    14b6:	1d ad       	ldd	r17, Y+61	; 0x3d
    14b8:	2e ad       	ldd	r18, Y+62	; 0x3e
    14ba:	3f ad       	ldd	r19, Y+63	; 0x3f
    14bc:	25 97       	sbiw	r28, 0x05	; 5
    14be:	01 50       	subi	r16, 0x01	; 1
    14c0:	10 40       	sbci	r17, 0x00	; 0
    14c2:	20 40       	sbci	r18, 0x00	; 0
    14c4:	30 40       	sbci	r19, 0x00	; 0
    14c6:	25 96       	adiw	r28, 0x05	; 5
    14c8:	0c af       	std	Y+60, r16	; 0x3c
    14ca:	1d af       	std	Y+61, r17	; 0x3d
    14cc:	2e af       	std	Y+62, r18	; 0x3e
    14ce:	3f af       	std	Y+63, r19	; 0x3f
    14d0:	25 97       	sbiw	r28, 0x05	; 5
    14d2:	18 c0       	rjmp	.+48     	; 0x1504 <__stack+0xca5>
    14d4:	66 24       	eor	r6, r6
    14d6:	77 24       	eor	r7, r7
    14d8:	43 01       	movw	r8, r6
    14da:	21 e0       	ldi	r18, 0x01	; 1
    14dc:	30 e0       	ldi	r19, 0x00	; 0
    14de:	40 e0       	ldi	r20, 0x00	; 0
    14e0:	50 e0       	ldi	r21, 0x00	; 0
    14e2:	25 96       	adiw	r28, 0x05	; 5
    14e4:	2c af       	std	Y+60, r18	; 0x3c
    14e6:	3d af       	std	Y+61, r19	; 0x3d
    14e8:	4e af       	std	Y+62, r20	; 0x3e
    14ea:	5f af       	std	Y+63, r21	; 0x3f
    14ec:	25 97       	sbiw	r28, 0x05	; 5
    14ee:	0d c0       	rjmp	.+26     	; 0x150a <__stack+0xcab>
    14f0:	66 24       	eor	r6, r6
    14f2:	77 24       	eor	r7, r7
    14f4:	43 01       	movw	r8, r6
    14f6:	25 96       	adiw	r28, 0x05	; 5
    14f8:	1c ae       	std	Y+60, r1	; 0x3c
    14fa:	1d ae       	std	Y+61, r1	; 0x3d
    14fc:	1e ae       	std	Y+62, r1	; 0x3e
    14fe:	1f ae       	std	Y+63, r1	; 0x3f
    1500:	25 97       	sbiw	r28, 0x05	; 5
    1502:	03 c0       	rjmp	.+6      	; 0x150a <__stack+0xcab>
    1504:	66 24       	eor	r6, r6
    1506:	77 24       	eor	r7, r7
    1508:	43 01       	movw	r8, r6
    150a:	fe 01       	movw	r30, r28
    150c:	b1 96       	adiw	r30, 0x21	; 33
    150e:	88 e0       	ldi	r24, 0x08	; 8
    1510:	df 01       	movw	r26, r30
    1512:	1d 92       	st	X+, r1
    1514:	8a 95       	dec	r24
    1516:	e9 f7       	brne	.-6      	; 0x1512 <__stack+0xcb3>
    1518:	25 96       	adiw	r28, 0x05	; 5
    151a:	ac ac       	ldd	r10, Y+60	; 0x3c
    151c:	bd ac       	ldd	r11, Y+61	; 0x3d
    151e:	ce ac       	ldd	r12, Y+62	; 0x3e
    1520:	df ac       	ldd	r13, Y+63	; 0x3f
    1522:	25 97       	sbiw	r28, 0x05	; 5
    1524:	a9 a2       	std	Y+33, r10	; 0x21
    1526:	ba a2       	std	Y+34, r11	; 0x22
    1528:	cb a2       	std	Y+35, r12	; 0x23
    152a:	dc a2       	std	Y+36, r13	; 0x24
    152c:	6d a2       	std	Y+37, r6	; 0x25
    152e:	7e a2       	std	Y+38, r7	; 0x26
    1530:	8f a2       	std	Y+39, r8	; 0x27
    1532:	98 a6       	std	Y+40, r9	; 0x28
    1534:	22 96       	adiw	r28, 0x02	; 2
    1536:	2f ad       	ldd	r18, Y+63	; 0x3f
    1538:	22 97       	sbiw	r28, 0x02	; 2
    153a:	3a a1       	ldd	r19, Y+34	; 0x22
    153c:	4b a1       	ldd	r20, Y+35	; 0x23
    153e:	5c a1       	ldd	r21, Y+36	; 0x24
    1540:	66 2d       	mov	r22, r6
    1542:	7e a1       	ldd	r23, Y+38	; 0x26
    1544:	df a0       	ldd	r13, Y+39	; 0x27
    1546:	98 a5       	ldd	r25, Y+40	; 0x28
    1548:	e1 96       	adiw	r28, 0x31	; 49
    154a:	ec ac       	ldd	r14, Y+60	; 0x3c
    154c:	fd ac       	ldd	r15, Y+61	; 0x3d
    154e:	0e ad       	ldd	r16, Y+62	; 0x3e
    1550:	1f ad       	ldd	r17, Y+63	; 0x3f
    1552:	e1 97       	sbiw	r28, 0x31	; 49
    1554:	e1 14       	cp	r14, r1
    1556:	f1 04       	cpc	r15, r1
    1558:	01 05       	cpc	r16, r1
    155a:	11 05       	cpc	r17, r1
    155c:	09 f4       	brne	.+2      	; 0x1560 <__stack+0xd01>
    155e:	56 c0       	rjmp	.+172    	; 0x160c <__stack+0xdad>
    1560:	21 95       	neg	r18
    1562:	81 e0       	ldi	r24, 0x01	; 1
    1564:	12 16       	cp	r1, r18
    1566:	08 f0       	brcs	.+2      	; 0x156a <__stack+0xd0b>
    1568:	80 e0       	ldi	r24, 0x00	; 0
    156a:	31 95       	neg	r19
    156c:	e1 e0       	ldi	r30, 0x01	; 1
    156e:	13 16       	cp	r1, r19
    1570:	08 f0       	brcs	.+2      	; 0x1574 <__stack+0xd15>
    1572:	e0 e0       	ldi	r30, 0x00	; 0
    1574:	93 2e       	mov	r9, r19
    1576:	98 1a       	sub	r9, r24
    1578:	81 e0       	ldi	r24, 0x01	; 1
    157a:	39 15       	cp	r19, r9
    157c:	08 f0       	brcs	.+2      	; 0x1580 <__stack+0xd21>
    157e:	80 e0       	ldi	r24, 0x00	; 0
    1580:	e8 2b       	or	r30, r24
    1582:	41 95       	neg	r20
    1584:	f1 e0       	ldi	r31, 0x01	; 1
    1586:	14 16       	cp	r1, r20
    1588:	08 f0       	brcs	.+2      	; 0x158c <__stack+0xd2d>
    158a:	f0 e0       	ldi	r31, 0x00	; 0
    158c:	a4 2e       	mov	r10, r20
    158e:	ae 1a       	sub	r10, r30
    1590:	81 e0       	ldi	r24, 0x01	; 1
    1592:	4a 15       	cp	r20, r10
    1594:	08 f0       	brcs	.+2      	; 0x1598 <__stack+0xd39>
    1596:	80 e0       	ldi	r24, 0x00	; 0
    1598:	f8 2b       	or	r31, r24
    159a:	51 95       	neg	r21
    159c:	e1 e0       	ldi	r30, 0x01	; 1
    159e:	15 16       	cp	r1, r21
    15a0:	08 f0       	brcs	.+2      	; 0x15a4 <__stack+0xd45>
    15a2:	e0 e0       	ldi	r30, 0x00	; 0
    15a4:	b5 2e       	mov	r11, r21
    15a6:	bf 1a       	sub	r11, r31
    15a8:	81 e0       	ldi	r24, 0x01	; 1
    15aa:	5b 15       	cp	r21, r11
    15ac:	08 f0       	brcs	.+2      	; 0x15b0 <__stack+0xd51>
    15ae:	80 e0       	ldi	r24, 0x00	; 0
    15b0:	e8 2b       	or	r30, r24
    15b2:	61 95       	neg	r22
    15b4:	f1 e0       	ldi	r31, 0x01	; 1
    15b6:	16 16       	cp	r1, r22
    15b8:	08 f0       	brcs	.+2      	; 0x15bc <__stack+0xd5d>
    15ba:	f0 e0       	ldi	r31, 0x00	; 0
    15bc:	a6 2f       	mov	r26, r22
    15be:	ae 1b       	sub	r26, r30
    15c0:	81 e0       	ldi	r24, 0x01	; 1
    15c2:	6a 17       	cp	r22, r26
    15c4:	08 f0       	brcs	.+2      	; 0x15c8 <__stack+0xd69>
    15c6:	80 e0       	ldi	r24, 0x00	; 0
    15c8:	f8 2b       	or	r31, r24
    15ca:	71 95       	neg	r23
    15cc:	e1 e0       	ldi	r30, 0x01	; 1
    15ce:	17 16       	cp	r1, r23
    15d0:	08 f0       	brcs	.+2      	; 0x15d4 <__stack+0xd75>
    15d2:	e0 e0       	ldi	r30, 0x00	; 0
    15d4:	c7 2e       	mov	r12, r23
    15d6:	cf 1a       	sub	r12, r31
    15d8:	81 e0       	ldi	r24, 0x01	; 1
    15da:	7c 15       	cp	r23, r12
    15dc:	08 f0       	brcs	.+2      	; 0x15e0 <__stack+0xd81>
    15de:	80 e0       	ldi	r24, 0x00	; 0
    15e0:	e8 2b       	or	r30, r24
    15e2:	8d 2d       	mov	r24, r13
    15e4:	81 95       	neg	r24
    15e6:	f1 e0       	ldi	r31, 0x01	; 1
    15e8:	18 16       	cp	r1, r24
    15ea:	08 f0       	brcs	.+2      	; 0x15ee <__stack+0xd8f>
    15ec:	f0 e0       	ldi	r31, 0x00	; 0
    15ee:	d8 2e       	mov	r13, r24
    15f0:	de 1a       	sub	r13, r30
    15f2:	e1 e0       	ldi	r30, 0x01	; 1
    15f4:	8d 15       	cp	r24, r13
    15f6:	08 f0       	brcs	.+2      	; 0x15fa <__stack+0xd9b>
    15f8:	e0 e0       	ldi	r30, 0x00	; 0
    15fa:	fe 2b       	or	r31, r30
    15fc:	89 2f       	mov	r24, r25
    15fe:	81 95       	neg	r24
    1600:	39 2d       	mov	r19, r9
    1602:	a5 01       	movw	r20, r10
    1604:	6a 2f       	mov	r22, r26
    1606:	7c 2d       	mov	r23, r12
    1608:	98 2f       	mov	r25, r24
    160a:	9f 1b       	sub	r25, r31
    160c:	8d 2d       	mov	r24, r13
    160e:	ce 58       	subi	r28, 0x8E	; 142
    1610:	df 4f       	sbci	r29, 0xFF	; 255
    1612:	e2 e1       	ldi	r30, 0x12	; 18
    1614:	0c 94 a0 2e 	jmp	0x5d40	; 0x5d40 <__epilogue_restores__>

00001618 <__moddi3>:
    1618:	a7 e7       	ldi	r26, 0x77	; 119
    161a:	b0 e0       	ldi	r27, 0x00	; 0
    161c:	e2 e1       	ldi	r30, 0x12	; 18
    161e:	fb e0       	ldi	r31, 0x0B	; 11
    1620:	0c 94 84 2e 	jmp	0x5d08	; 0x5d08 <__prologue_saves__>
    1624:	98 2e       	mov	r9, r24
    1626:	89 2e       	mov	r8, r25
    1628:	71 2e       	mov	r7, r17
    162a:	88 e0       	ldi	r24, 0x08	; 8
    162c:	fe 01       	movw	r30, r28
    162e:	31 96       	adiw	r30, 0x01	; 1
    1630:	df 01       	movw	r26, r30
    1632:	68 2e       	mov	r6, r24
    1634:	1d 92       	st	X+, r1
    1636:	6a 94       	dec	r6
    1638:	e9 f7       	brne	.-6      	; 0x1634 <__moddi3+0x1c>
    163a:	29 83       	std	Y+1, r18	; 0x01
    163c:	3a 83       	std	Y+2, r19	; 0x02
    163e:	4b 83       	std	Y+3, r20	; 0x03
    1640:	5c 83       	std	Y+4, r21	; 0x04
    1642:	6d 83       	std	Y+5, r22	; 0x05
    1644:	7e 83       	std	Y+6, r23	; 0x06
    1646:	9f 82       	std	Y+7, r9	; 0x07
    1648:	98 87       	std	Y+8, r25	; 0x08
    164a:	fe 01       	movw	r30, r28
    164c:	39 96       	adiw	r30, 0x09	; 9
    164e:	df 01       	movw	r26, r30
    1650:	1d 92       	st	X+, r1
    1652:	8a 95       	dec	r24
    1654:	e9 f7       	brne	.-6      	; 0x1650 <__moddi3+0x38>
    1656:	a9 86       	std	Y+9, r10	; 0x09
    1658:	ba 86       	std	Y+10, r11	; 0x0a
    165a:	cb 86       	std	Y+11, r12	; 0x0b
    165c:	dc 86       	std	Y+12, r13	; 0x0c
    165e:	ed 86       	std	Y+13, r14	; 0x0d
    1660:	fe 86       	std	Y+14, r15	; 0x0e
    1662:	0f 87       	std	Y+15, r16	; 0x0f
    1664:	18 8b       	std	Y+16, r17	; 0x10
    1666:	8d 81       	ldd	r24, Y+5	; 0x05
    1668:	9e 81       	ldd	r25, Y+6	; 0x06
    166a:	af 81       	ldd	r26, Y+7	; 0x07
    166c:	b8 85       	ldd	r27, Y+8	; 0x08
    166e:	b7 fd       	sbrc	r27, 7
    1670:	07 c0       	rjmp	.+14     	; 0x1680 <__moddi3+0x68>
    1672:	e1 96       	adiw	r28, 0x31	; 49
    1674:	1c ae       	std	Y+60, r1	; 0x3c
    1676:	1d ae       	std	Y+61, r1	; 0x3d
    1678:	1e ae       	std	Y+62, r1	; 0x3e
    167a:	1f ae       	std	Y+63, r1	; 0x3f
    167c:	e1 97       	sbiw	r28, 0x31	; 49
    167e:	64 c0       	rjmp	.+200    	; 0x1748 <__moddi3+0x130>
    1680:	21 95       	neg	r18
    1682:	81 e0       	ldi	r24, 0x01	; 1
    1684:	12 16       	cp	r1, r18
    1686:	08 f0       	brcs	.+2      	; 0x168a <__moddi3+0x72>
    1688:	80 e0       	ldi	r24, 0x00	; 0
    168a:	31 95       	neg	r19
    168c:	91 e0       	ldi	r25, 0x01	; 1
    168e:	13 16       	cp	r1, r19
    1690:	08 f0       	brcs	.+2      	; 0x1694 <__moddi3+0x7c>
    1692:	90 e0       	ldi	r25, 0x00	; 0
    1694:	b3 2f       	mov	r27, r19
    1696:	b8 1b       	sub	r27, r24
    1698:	81 e0       	ldi	r24, 0x01	; 1
    169a:	3b 17       	cp	r19, r27
    169c:	08 f0       	brcs	.+2      	; 0x16a0 <__moddi3+0x88>
    169e:	80 e0       	ldi	r24, 0x00	; 0
    16a0:	98 2b       	or	r25, r24
    16a2:	41 95       	neg	r20
    16a4:	31 e0       	ldi	r19, 0x01	; 1
    16a6:	14 16       	cp	r1, r20
    16a8:	08 f0       	brcs	.+2      	; 0x16ac <__moddi3+0x94>
    16aa:	30 e0       	ldi	r19, 0x00	; 0
    16ac:	a4 2f       	mov	r26, r20
    16ae:	a9 1b       	sub	r26, r25
    16b0:	81 e0       	ldi	r24, 0x01	; 1
    16b2:	4a 17       	cp	r20, r26
    16b4:	08 f0       	brcs	.+2      	; 0x16b8 <__moddi3+0xa0>
    16b6:	80 e0       	ldi	r24, 0x00	; 0
    16b8:	38 2b       	or	r19, r24
    16ba:	51 95       	neg	r21
    16bc:	91 e0       	ldi	r25, 0x01	; 1
    16be:	15 16       	cp	r1, r21
    16c0:	08 f0       	brcs	.+2      	; 0x16c4 <__moddi3+0xac>
    16c2:	90 e0       	ldi	r25, 0x00	; 0
    16c4:	f5 2f       	mov	r31, r21
    16c6:	f3 1b       	sub	r31, r19
    16c8:	81 e0       	ldi	r24, 0x01	; 1
    16ca:	5f 17       	cp	r21, r31
    16cc:	08 f0       	brcs	.+2      	; 0x16d0 <__moddi3+0xb8>
    16ce:	80 e0       	ldi	r24, 0x00	; 0
    16d0:	98 2b       	or	r25, r24
    16d2:	61 95       	neg	r22
    16d4:	31 e0       	ldi	r19, 0x01	; 1
    16d6:	16 16       	cp	r1, r22
    16d8:	08 f0       	brcs	.+2      	; 0x16dc <__moddi3+0xc4>
    16da:	30 e0       	ldi	r19, 0x00	; 0
    16dc:	e6 2f       	mov	r30, r22
    16de:	e9 1b       	sub	r30, r25
    16e0:	81 e0       	ldi	r24, 0x01	; 1
    16e2:	6e 17       	cp	r22, r30
    16e4:	08 f0       	brcs	.+2      	; 0x16e8 <__moddi3+0xd0>
    16e6:	80 e0       	ldi	r24, 0x00	; 0
    16e8:	38 2b       	or	r19, r24
    16ea:	71 95       	neg	r23
    16ec:	41 e0       	ldi	r20, 0x01	; 1
    16ee:	17 16       	cp	r1, r23
    16f0:	08 f0       	brcs	.+2      	; 0x16f4 <__moddi3+0xdc>
    16f2:	40 e0       	ldi	r20, 0x00	; 0
    16f4:	57 2f       	mov	r21, r23
    16f6:	53 1b       	sub	r21, r19
    16f8:	81 e0       	ldi	r24, 0x01	; 1
    16fa:	75 17       	cp	r23, r21
    16fc:	08 f0       	brcs	.+2      	; 0x1700 <__moddi3+0xe8>
    16fe:	80 e0       	ldi	r24, 0x00	; 0
    1700:	48 2b       	or	r20, r24
    1702:	89 2d       	mov	r24, r9
    1704:	81 95       	neg	r24
    1706:	91 e0       	ldi	r25, 0x01	; 1
    1708:	18 16       	cp	r1, r24
    170a:	08 f0       	brcs	.+2      	; 0x170e <__moddi3+0xf6>
    170c:	90 e0       	ldi	r25, 0x00	; 0
    170e:	68 2e       	mov	r6, r24
    1710:	64 1a       	sub	r6, r20
    1712:	46 2d       	mov	r20, r6
    1714:	31 e0       	ldi	r19, 0x01	; 1
    1716:	86 15       	cp	r24, r6
    1718:	08 f0       	brcs	.+2      	; 0x171c <__moddi3+0x104>
    171a:	30 e0       	ldi	r19, 0x00	; 0
    171c:	93 2b       	or	r25, r19
    171e:	88 2d       	mov	r24, r8
    1720:	81 95       	neg	r24
    1722:	89 1b       	sub	r24, r25
    1724:	29 83       	std	Y+1, r18	; 0x01
    1726:	ba 83       	std	Y+2, r27	; 0x02
    1728:	ab 83       	std	Y+3, r26	; 0x03
    172a:	fc 83       	std	Y+4, r31	; 0x04
    172c:	ed 83       	std	Y+5, r30	; 0x05
    172e:	5e 83       	std	Y+6, r21	; 0x06
    1730:	4f 83       	std	Y+7, r20	; 0x07
    1732:	88 87       	std	Y+8, r24	; 0x08
    1734:	2f ef       	ldi	r18, 0xFF	; 255
    1736:	3f ef       	ldi	r19, 0xFF	; 255
    1738:	4f ef       	ldi	r20, 0xFF	; 255
    173a:	5f ef       	ldi	r21, 0xFF	; 255
    173c:	e1 96       	adiw	r28, 0x31	; 49
    173e:	2c af       	std	Y+60, r18	; 0x3c
    1740:	3d af       	std	Y+61, r19	; 0x3d
    1742:	4e af       	std	Y+62, r20	; 0x3e
    1744:	5f af       	std	Y+63, r21	; 0x3f
    1746:	e1 97       	sbiw	r28, 0x31	; 49
    1748:	8d 85       	ldd	r24, Y+13	; 0x0d
    174a:	9e 85       	ldd	r25, Y+14	; 0x0e
    174c:	af 85       	ldd	r26, Y+15	; 0x0f
    174e:	b8 89       	ldd	r27, Y+16	; 0x10
    1750:	b7 ff       	sbrs	r27, 7
    1752:	5a c0       	rjmp	.+180    	; 0x1808 <__moddi3+0x1f0>
    1754:	a1 94       	neg	r10
    1756:	81 e0       	ldi	r24, 0x01	; 1
    1758:	1a 14       	cp	r1, r10
    175a:	08 f0       	brcs	.+2      	; 0x175e <__moddi3+0x146>
    175c:	80 e0       	ldi	r24, 0x00	; 0
    175e:	b1 94       	neg	r11
    1760:	91 e0       	ldi	r25, 0x01	; 1
    1762:	1b 14       	cp	r1, r11
    1764:	08 f0       	brcs	.+2      	; 0x1768 <__moddi3+0x150>
    1766:	90 e0       	ldi	r25, 0x00	; 0
    1768:	6b 2d       	mov	r22, r11
    176a:	68 1b       	sub	r22, r24
    176c:	81 e0       	ldi	r24, 0x01	; 1
    176e:	b6 16       	cp	r11, r22
    1770:	08 f0       	brcs	.+2      	; 0x1774 <__moddi3+0x15c>
    1772:	80 e0       	ldi	r24, 0x00	; 0
    1774:	98 2b       	or	r25, r24
    1776:	c1 94       	neg	r12
    1778:	21 e0       	ldi	r18, 0x01	; 1
    177a:	1c 14       	cp	r1, r12
    177c:	08 f0       	brcs	.+2      	; 0x1780 <__moddi3+0x168>
    177e:	20 e0       	ldi	r18, 0x00	; 0
    1780:	5c 2d       	mov	r21, r12
    1782:	59 1b       	sub	r21, r25
    1784:	81 e0       	ldi	r24, 0x01	; 1
    1786:	c5 16       	cp	r12, r21
    1788:	08 f0       	brcs	.+2      	; 0x178c <__moddi3+0x174>
    178a:	80 e0       	ldi	r24, 0x00	; 0
    178c:	28 2b       	or	r18, r24
    178e:	d1 94       	neg	r13
    1790:	91 e0       	ldi	r25, 0x01	; 1
    1792:	1d 14       	cp	r1, r13
    1794:	08 f0       	brcs	.+2      	; 0x1798 <__moddi3+0x180>
    1796:	90 e0       	ldi	r25, 0x00	; 0
    1798:	4d 2d       	mov	r20, r13
    179a:	42 1b       	sub	r20, r18
    179c:	81 e0       	ldi	r24, 0x01	; 1
    179e:	d4 16       	cp	r13, r20
    17a0:	08 f0       	brcs	.+2      	; 0x17a4 <__moddi3+0x18c>
    17a2:	80 e0       	ldi	r24, 0x00	; 0
    17a4:	98 2b       	or	r25, r24
    17a6:	e1 94       	neg	r14
    17a8:	21 e0       	ldi	r18, 0x01	; 1
    17aa:	1e 14       	cp	r1, r14
    17ac:	08 f0       	brcs	.+2      	; 0x17b0 <__moddi3+0x198>
    17ae:	20 e0       	ldi	r18, 0x00	; 0
    17b0:	3e 2d       	mov	r19, r14
    17b2:	39 1b       	sub	r19, r25
    17b4:	81 e0       	ldi	r24, 0x01	; 1
    17b6:	e3 16       	cp	r14, r19
    17b8:	08 f0       	brcs	.+2      	; 0x17bc <__moddi3+0x1a4>
    17ba:	80 e0       	ldi	r24, 0x00	; 0
    17bc:	28 2b       	or	r18, r24
    17be:	f1 94       	neg	r15
    17c0:	91 e0       	ldi	r25, 0x01	; 1
    17c2:	1f 14       	cp	r1, r15
    17c4:	08 f0       	brcs	.+2      	; 0x17c8 <__moddi3+0x1b0>
    17c6:	90 e0       	ldi	r25, 0x00	; 0
    17c8:	7f 2d       	mov	r23, r15
    17ca:	72 1b       	sub	r23, r18
    17cc:	27 2f       	mov	r18, r23
    17ce:	81 e0       	ldi	r24, 0x01	; 1
    17d0:	f7 16       	cp	r15, r23
    17d2:	08 f0       	brcs	.+2      	; 0x17d6 <__moddi3+0x1be>
    17d4:	80 e0       	ldi	r24, 0x00	; 0
    17d6:	98 2b       	or	r25, r24
    17d8:	01 95       	neg	r16
    17da:	11 e0       	ldi	r17, 0x01	; 1
    17dc:	10 16       	cp	r1, r16
    17de:	08 f0       	brcs	.+2      	; 0x17e2 <__moddi3+0x1ca>
    17e0:	10 e0       	ldi	r17, 0x00	; 0
    17e2:	80 2f       	mov	r24, r16
    17e4:	89 1b       	sub	r24, r25
    17e6:	98 2f       	mov	r25, r24
    17e8:	81 e0       	ldi	r24, 0x01	; 1
    17ea:	09 17       	cp	r16, r25
    17ec:	08 f0       	brcs	.+2      	; 0x17f0 <__moddi3+0x1d8>
    17ee:	80 e0       	ldi	r24, 0x00	; 0
    17f0:	18 2b       	or	r17, r24
    17f2:	87 2d       	mov	r24, r7
    17f4:	81 95       	neg	r24
    17f6:	81 1b       	sub	r24, r17
    17f8:	a9 86       	std	Y+9, r10	; 0x09
    17fa:	6a 87       	std	Y+10, r22	; 0x0a
    17fc:	5b 87       	std	Y+11, r21	; 0x0b
    17fe:	4c 87       	std	Y+12, r20	; 0x0c
    1800:	3d 87       	std	Y+13, r19	; 0x0d
    1802:	2e 87       	std	Y+14, r18	; 0x0e
    1804:	9f 87       	std	Y+15, r25	; 0x0f
    1806:	88 8b       	std	Y+16, r24	; 0x10
    1808:	99 81       	ldd	r25, Y+1	; 0x01
    180a:	2a 81       	ldd	r18, Y+2	; 0x02
    180c:	3b 81       	ldd	r19, Y+3	; 0x03
    180e:	4c 81       	ldd	r20, Y+4	; 0x04
    1810:	5d 81       	ldd	r21, Y+5	; 0x05
    1812:	6e 81       	ldd	r22, Y+6	; 0x06
    1814:	7f 81       	ldd	r23, Y+7	; 0x07
    1816:	a8 85       	ldd	r26, Y+8	; 0x08
    1818:	b9 85       	ldd	r27, Y+9	; 0x09
    181a:	1a 85       	ldd	r17, Y+10	; 0x0a
    181c:	0b 85       	ldd	r16, Y+11	; 0x0b
    181e:	fc 84       	ldd	r15, Y+12	; 0x0c
    1820:	ed 84       	ldd	r14, Y+13	; 0x0d
    1822:	de 84       	ldd	r13, Y+14	; 0x0e
    1824:	cf 84       	ldd	r12, Y+15	; 0x0f
    1826:	b8 88       	ldd	r11, Y+16	; 0x10
    1828:	88 e0       	ldi	r24, 0x08	; 8
    182a:	e9 e1       	ldi	r30, 0x19	; 25
    182c:	8e 2e       	mov	r8, r30
    182e:	91 2c       	mov	r9, r1
    1830:	8c 0e       	add	r8, r28
    1832:	9d 1e       	adc	r9, r29
    1834:	f4 01       	movw	r30, r8
    1836:	68 2e       	mov	r6, r24
    1838:	11 92       	st	Z+, r1
    183a:	6a 94       	dec	r6
    183c:	e9 f7       	brne	.-6      	; 0x1838 <__moddi3+0x220>
    183e:	99 8f       	std	Y+25, r25	; 0x19
    1840:	2a 8f       	std	Y+26, r18	; 0x1a
    1842:	3b 8f       	std	Y+27, r19	; 0x1b
    1844:	4c 8f       	std	Y+28, r20	; 0x1c
    1846:	5d 8f       	std	Y+29, r21	; 0x1d
    1848:	6e 8f       	std	Y+30, r22	; 0x1e
    184a:	7f 8f       	std	Y+31, r23	; 0x1f
    184c:	a8 a3       	std	Y+32, r26	; 0x20
    184e:	9e 01       	movw	r18, r28
    1850:	2f 5d       	subi	r18, 0xDF	; 223
    1852:	3f 4f       	sbci	r19, 0xFF	; 255
    1854:	f9 01       	movw	r30, r18
    1856:	11 92       	st	Z+, r1
    1858:	8a 95       	dec	r24
    185a:	e9 f7       	brne	.-6      	; 0x1856 <__moddi3+0x23e>
    185c:	b9 a3       	std	Y+33, r27	; 0x21
    185e:	1a a3       	std	Y+34, r17	; 0x22
    1860:	0b a3       	std	Y+35, r16	; 0x23
    1862:	fc a2       	std	Y+36, r15	; 0x24
    1864:	ed a2       	std	Y+37, r14	; 0x25
    1866:	de a2       	std	Y+38, r13	; 0x26
    1868:	cf a2       	std	Y+39, r12	; 0x27
    186a:	b8 a6       	std	Y+40, r11	; 0x28
    186c:	29 a0       	ldd	r2, Y+33	; 0x21
    186e:	3a a0       	ldd	r3, Y+34	; 0x22
    1870:	4b a0       	ldd	r4, Y+35	; 0x23
    1872:	5c a0       	ldd	r5, Y+36	; 0x24
    1874:	ad a0       	ldd	r10, Y+37	; 0x25
    1876:	be a0       	ldd	r11, Y+38	; 0x26
    1878:	cf a0       	ldd	r12, Y+39	; 0x27
    187a:	d8 a4       	ldd	r13, Y+40	; 0x28
    187c:	49 8d       	ldd	r20, Y+25	; 0x19
    187e:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1880:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1882:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1884:	e5 96       	adiw	r28, 0x35	; 53
    1886:	4f af       	std	Y+63, r20	; 0x3f
    1888:	e5 97       	sbiw	r28, 0x35	; 53
    188a:	e6 96       	adiw	r28, 0x36	; 54
    188c:	5f af       	std	Y+63, r21	; 0x3f
    188e:	e6 97       	sbiw	r28, 0x36	; 54
    1890:	e7 96       	adiw	r28, 0x37	; 55
    1892:	6f af       	std	Y+63, r22	; 0x3f
    1894:	e7 97       	sbiw	r28, 0x37	; 55
    1896:	e8 96       	adiw	r28, 0x38	; 56
    1898:	7f af       	std	Y+63, r23	; 0x3f
    189a:	e8 97       	sbiw	r28, 0x38	; 56
    189c:	e8 96       	adiw	r28, 0x38	; 56
    189e:	6c ac       	ldd	r6, Y+60	; 0x3c
    18a0:	7d ac       	ldd	r7, Y+61	; 0x3d
    18a2:	8e ac       	ldd	r8, Y+62	; 0x3e
    18a4:	9f ac       	ldd	r9, Y+63	; 0x3f
    18a6:	e8 97       	sbiw	r28, 0x38	; 56
    18a8:	2d 96       	adiw	r28, 0x0d	; 13
    18aa:	6c ae       	std	Y+60, r6	; 0x3c
    18ac:	7d ae       	std	Y+61, r7	; 0x3d
    18ae:	8e ae       	std	Y+62, r8	; 0x3e
    18b0:	9f ae       	std	Y+63, r9	; 0x3f
    18b2:	2d 97       	sbiw	r28, 0x0d	; 13
    18b4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    18b6:	9e 8d       	ldd	r25, Y+30	; 0x1e
    18b8:	2f 8d       	ldd	r18, Y+31	; 0x1f
    18ba:	38 a1       	ldd	r19, Y+32	; 0x20
    18bc:	3c 01       	movw	r6, r24
    18be:	49 01       	movw	r8, r18
    18c0:	61 96       	adiw	r28, 0x11	; 17
    18c2:	6c ae       	std	Y+60, r6	; 0x3c
    18c4:	7d ae       	std	Y+61, r7	; 0x3d
    18c6:	8e ae       	std	Y+62, r8	; 0x3e
    18c8:	9f ae       	std	Y+63, r9	; 0x3f
    18ca:	61 97       	sbiw	r28, 0x11	; 17
    18cc:	a1 14       	cp	r10, r1
    18ce:	b1 04       	cpc	r11, r1
    18d0:	c1 04       	cpc	r12, r1
    18d2:	d1 04       	cpc	r13, r1
    18d4:	09 f0       	breq	.+2      	; 0x18d8 <__moddi3+0x2c0>
    18d6:	28 c3       	rjmp	.+1616   	; 0x1f28 <__moddi3+0x910>
    18d8:	62 14       	cp	r6, r2
    18da:	73 04       	cpc	r7, r3
    18dc:	84 04       	cpc	r8, r4
    18de:	95 04       	cpc	r9, r5
    18e0:	08 f0       	brcs	.+2      	; 0x18e4 <__moddi3+0x2cc>
    18e2:	0e c1       	rjmp	.+540    	; 0x1b00 <__moddi3+0x4e8>
    18e4:	00 e0       	ldi	r16, 0x00	; 0
    18e6:	20 16       	cp	r2, r16
    18e8:	00 e0       	ldi	r16, 0x00	; 0
    18ea:	30 06       	cpc	r3, r16
    18ec:	01 e0       	ldi	r16, 0x01	; 1
    18ee:	40 06       	cpc	r4, r16
    18f0:	00 e0       	ldi	r16, 0x00	; 0
    18f2:	50 06       	cpc	r5, r16
    18f4:	88 f4       	brcc	.+34     	; 0x1918 <__moddi3+0x300>
    18f6:	1f ef       	ldi	r17, 0xFF	; 255
    18f8:	21 16       	cp	r2, r17
    18fa:	31 04       	cpc	r3, r1
    18fc:	41 04       	cpc	r4, r1
    18fe:	51 04       	cpc	r5, r1
    1900:	39 f0       	breq	.+14     	; 0x1910 <__moddi3+0x2f8>
    1902:	30 f0       	brcs	.+12     	; 0x1910 <__moddi3+0x2f8>
    1904:	88 e0       	ldi	r24, 0x08	; 8
    1906:	e8 2e       	mov	r14, r24
    1908:	f1 2c       	mov	r15, r1
    190a:	01 2d       	mov	r16, r1
    190c:	11 2d       	mov	r17, r1
    190e:	18 c0       	rjmp	.+48     	; 0x1940 <__moddi3+0x328>
    1910:	ee 24       	eor	r14, r14
    1912:	ff 24       	eor	r15, r15
    1914:	87 01       	movw	r16, r14
    1916:	14 c0       	rjmp	.+40     	; 0x1940 <__moddi3+0x328>
    1918:	20 e0       	ldi	r18, 0x00	; 0
    191a:	22 16       	cp	r2, r18
    191c:	20 e0       	ldi	r18, 0x00	; 0
    191e:	32 06       	cpc	r3, r18
    1920:	20 e0       	ldi	r18, 0x00	; 0
    1922:	42 06       	cpc	r4, r18
    1924:	21 e0       	ldi	r18, 0x01	; 1
    1926:	52 06       	cpc	r5, r18
    1928:	30 f0       	brcs	.+12     	; 0x1936 <__moddi3+0x31e>
    192a:	b8 e1       	ldi	r27, 0x18	; 24
    192c:	eb 2e       	mov	r14, r27
    192e:	f1 2c       	mov	r15, r1
    1930:	01 2d       	mov	r16, r1
    1932:	11 2d       	mov	r17, r1
    1934:	05 c0       	rjmp	.+10     	; 0x1940 <__moddi3+0x328>
    1936:	a0 e1       	ldi	r26, 0x10	; 16
    1938:	ea 2e       	mov	r14, r26
    193a:	f1 2c       	mov	r15, r1
    193c:	01 2d       	mov	r16, r1
    193e:	11 2d       	mov	r17, r1
    1940:	d2 01       	movw	r26, r4
    1942:	c1 01       	movw	r24, r2
    1944:	0e 2c       	mov	r0, r14
    1946:	04 c0       	rjmp	.+8      	; 0x1950 <__moddi3+0x338>
    1948:	b6 95       	lsr	r27
    194a:	a7 95       	ror	r26
    194c:	97 95       	ror	r25
    194e:	87 95       	ror	r24
    1950:	0a 94       	dec	r0
    1952:	d2 f7       	brpl	.-12     	; 0x1948 <__moddi3+0x330>
    1954:	82 59       	subi	r24, 0x92	; 146
    1956:	9f 4f       	sbci	r25, 0xFF	; 255
    1958:	dc 01       	movw	r26, r24
    195a:	2c 91       	ld	r18, X
    195c:	80 e2       	ldi	r24, 0x20	; 32
    195e:	90 e0       	ldi	r25, 0x00	; 0
    1960:	a0 e0       	ldi	r26, 0x00	; 0
    1962:	b0 e0       	ldi	r27, 0x00	; 0
    1964:	8e 19       	sub	r24, r14
    1966:	9f 09       	sbc	r25, r15
    1968:	a0 0b       	sbc	r26, r16
    196a:	b1 0b       	sbc	r27, r17
    196c:	5c 01       	movw	r10, r24
    196e:	6d 01       	movw	r12, r26
    1970:	a2 1a       	sub	r10, r18
    1972:	b1 08       	sbc	r11, r1
    1974:	c1 08       	sbc	r12, r1
    1976:	d1 08       	sbc	r13, r1
    1978:	65 96       	adiw	r28, 0x15	; 21
    197a:	ac ae       	std	Y+60, r10	; 0x3c
    197c:	bd ae       	std	Y+61, r11	; 0x3d
    197e:	ce ae       	std	Y+62, r12	; 0x3e
    1980:	df ae       	std	Y+63, r13	; 0x3f
    1982:	65 97       	sbiw	r28, 0x15	; 21
    1984:	a1 14       	cp	r10, r1
    1986:	b1 04       	cpc	r11, r1
    1988:	c1 04       	cpc	r12, r1
    198a:	d1 04       	cpc	r13, r1
    198c:	09 f4       	brne	.+2      	; 0x1990 <__moddi3+0x378>
    198e:	45 c0       	rjmp	.+138    	; 0x1a1a <__moddi3+0x402>
    1990:	62 96       	adiw	r28, 0x12	; 18
    1992:	6f ad       	ldd	r22, Y+63	; 0x3f
    1994:	62 97       	sbiw	r28, 0x12	; 18
    1996:	06 2e       	mov	r0, r22
    1998:	04 c0       	rjmp	.+8      	; 0x19a2 <__moddi3+0x38a>
    199a:	22 0c       	add	r2, r2
    199c:	33 1c       	adc	r3, r3
    199e:	44 1c       	adc	r4, r4
    19a0:	55 1c       	adc	r5, r5
    19a2:	0a 94       	dec	r0
    19a4:	d2 f7       	brpl	.-12     	; 0x199a <__moddi3+0x382>
    19a6:	a4 01       	movw	r20, r8
    19a8:	93 01       	movw	r18, r6
    19aa:	06 2e       	mov	r0, r22
    19ac:	04 c0       	rjmp	.+8      	; 0x19b6 <__moddi3+0x39e>
    19ae:	22 0f       	add	r18, r18
    19b0:	33 1f       	adc	r19, r19
    19b2:	44 1f       	adc	r20, r20
    19b4:	55 1f       	adc	r21, r21
    19b6:	0a 94       	dec	r0
    19b8:	d2 f7       	brpl	.-12     	; 0x19ae <__moddi3+0x396>
    19ba:	80 e2       	ldi	r24, 0x20	; 32
    19bc:	90 e0       	ldi	r25, 0x00	; 0
    19be:	8a 19       	sub	r24, r10
    19c0:	9b 09       	sbc	r25, r11
    19c2:	e8 96       	adiw	r28, 0x38	; 56
    19c4:	cc ac       	ldd	r12, Y+60	; 0x3c
    19c6:	dd ac       	ldd	r13, Y+61	; 0x3d
    19c8:	ee ac       	ldd	r14, Y+62	; 0x3e
    19ca:	ff ac       	ldd	r15, Y+63	; 0x3f
    19cc:	e8 97       	sbiw	r28, 0x38	; 56
    19ce:	04 c0       	rjmp	.+8      	; 0x19d8 <__moddi3+0x3c0>
    19d0:	f6 94       	lsr	r15
    19d2:	e7 94       	ror	r14
    19d4:	d7 94       	ror	r13
    19d6:	c7 94       	ror	r12
    19d8:	8a 95       	dec	r24
    19da:	d2 f7       	brpl	.-12     	; 0x19d0 <__moddi3+0x3b8>
    19dc:	87 01       	movw	r16, r14
    19de:	76 01       	movw	r14, r12
    19e0:	e2 2a       	or	r14, r18
    19e2:	f3 2a       	or	r15, r19
    19e4:	04 2b       	or	r16, r20
    19e6:	15 2b       	or	r17, r21
    19e8:	61 96       	adiw	r28, 0x11	; 17
    19ea:	ec ae       	std	Y+60, r14	; 0x3c
    19ec:	fd ae       	std	Y+61, r15	; 0x3d
    19ee:	0e af       	std	Y+62, r16	; 0x3e
    19f0:	1f af       	std	Y+63, r17	; 0x3f
    19f2:	61 97       	sbiw	r28, 0x11	; 17
    19f4:	e8 96       	adiw	r28, 0x38	; 56
    19f6:	0c ad       	ldd	r16, Y+60	; 0x3c
    19f8:	1d ad       	ldd	r17, Y+61	; 0x3d
    19fa:	2e ad       	ldd	r18, Y+62	; 0x3e
    19fc:	3f ad       	ldd	r19, Y+63	; 0x3f
    19fe:	e8 97       	sbiw	r28, 0x38	; 56
    1a00:	04 c0       	rjmp	.+8      	; 0x1a0a <__moddi3+0x3f2>
    1a02:	00 0f       	add	r16, r16
    1a04:	11 1f       	adc	r17, r17
    1a06:	22 1f       	adc	r18, r18
    1a08:	33 1f       	adc	r19, r19
    1a0a:	6a 95       	dec	r22
    1a0c:	d2 f7       	brpl	.-12     	; 0x1a02 <__moddi3+0x3ea>
    1a0e:	2d 96       	adiw	r28, 0x0d	; 13
    1a10:	0c af       	std	Y+60, r16	; 0x3c
    1a12:	1d af       	std	Y+61, r17	; 0x3d
    1a14:	2e af       	std	Y+62, r18	; 0x3e
    1a16:	3f af       	std	Y+63, r19	; 0x3f
    1a18:	2d 97       	sbiw	r28, 0x0d	; 13
    1a1a:	32 01       	movw	r6, r4
    1a1c:	88 24       	eor	r8, r8
    1a1e:	99 24       	eor	r9, r9
    1a20:	a2 01       	movw	r20, r4
    1a22:	91 01       	movw	r18, r2
    1a24:	40 70       	andi	r20, 0x00	; 0
    1a26:	50 70       	andi	r21, 0x00	; 0
    1a28:	69 96       	adiw	r28, 0x19	; 25
    1a2a:	2c af       	std	Y+60, r18	; 0x3c
    1a2c:	3d af       	std	Y+61, r19	; 0x3d
    1a2e:	4e af       	std	Y+62, r20	; 0x3e
    1a30:	5f af       	std	Y+63, r21	; 0x3f
    1a32:	69 97       	sbiw	r28, 0x19	; 25
    1a34:	61 96       	adiw	r28, 0x11	; 17
    1a36:	6c ad       	ldd	r22, Y+60	; 0x3c
    1a38:	7d ad       	ldd	r23, Y+61	; 0x3d
    1a3a:	8e ad       	ldd	r24, Y+62	; 0x3e
    1a3c:	9f ad       	ldd	r25, Y+63	; 0x3f
    1a3e:	61 97       	sbiw	r28, 0x11	; 17
    1a40:	a4 01       	movw	r20, r8
    1a42:	93 01       	movw	r18, r6
    1a44:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
    1a48:	7b 01       	movw	r14, r22
    1a4a:	8c 01       	movw	r16, r24
    1a4c:	61 96       	adiw	r28, 0x11	; 17
    1a4e:	6c ad       	ldd	r22, Y+60	; 0x3c
    1a50:	7d ad       	ldd	r23, Y+61	; 0x3d
    1a52:	8e ad       	ldd	r24, Y+62	; 0x3e
    1a54:	9f ad       	ldd	r25, Y+63	; 0x3f
    1a56:	61 97       	sbiw	r28, 0x11	; 17
    1a58:	a4 01       	movw	r20, r8
    1a5a:	93 01       	movw	r18, r6
    1a5c:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
    1a60:	ca 01       	movw	r24, r20
    1a62:	b9 01       	movw	r22, r18
    1a64:	69 96       	adiw	r28, 0x19	; 25
    1a66:	2c ad       	ldd	r18, Y+60	; 0x3c
    1a68:	3d ad       	ldd	r19, Y+61	; 0x3d
    1a6a:	4e ad       	ldd	r20, Y+62	; 0x3e
    1a6c:	5f ad       	ldd	r21, Y+63	; 0x3f
    1a6e:	69 97       	sbiw	r28, 0x19	; 25
    1a70:	0e 94 43 2e 	call	0x5c86	; 0x5c86 <__mulsi3>
    1a74:	9b 01       	movw	r18, r22
    1a76:	ac 01       	movw	r20, r24
    1a78:	87 01       	movw	r16, r14
    1a7a:	ff 24       	eor	r15, r15
    1a7c:	ee 24       	eor	r14, r14
    1a7e:	2d 96       	adiw	r28, 0x0d	; 13
    1a80:	ac ac       	ldd	r10, Y+60	; 0x3c
    1a82:	bd ac       	ldd	r11, Y+61	; 0x3d
    1a84:	ce ac       	ldd	r12, Y+62	; 0x3e
    1a86:	df ac       	ldd	r13, Y+63	; 0x3f
    1a88:	2d 97       	sbiw	r28, 0x0d	; 13
    1a8a:	c6 01       	movw	r24, r12
    1a8c:	aa 27       	eor	r26, r26
    1a8e:	bb 27       	eor	r27, r27
    1a90:	57 01       	movw	r10, r14
    1a92:	68 01       	movw	r12, r16
    1a94:	a8 2a       	or	r10, r24
    1a96:	b9 2a       	or	r11, r25
    1a98:	ca 2a       	or	r12, r26
    1a9a:	db 2a       	or	r13, r27
    1a9c:	a2 16       	cp	r10, r18
    1a9e:	b3 06       	cpc	r11, r19
    1aa0:	c4 06       	cpc	r12, r20
    1aa2:	d5 06       	cpc	r13, r21
    1aa4:	90 f4       	brcc	.+36     	; 0x1aca <__moddi3+0x4b2>
    1aa6:	a2 0c       	add	r10, r2
    1aa8:	b3 1c       	adc	r11, r3
    1aaa:	c4 1c       	adc	r12, r4
    1aac:	d5 1c       	adc	r13, r5
    1aae:	a2 14       	cp	r10, r2
    1ab0:	b3 04       	cpc	r11, r3
    1ab2:	c4 04       	cpc	r12, r4
    1ab4:	d5 04       	cpc	r13, r5
    1ab6:	48 f0       	brcs	.+18     	; 0x1aca <__moddi3+0x4b2>
    1ab8:	a2 16       	cp	r10, r18
    1aba:	b3 06       	cpc	r11, r19
    1abc:	c4 06       	cpc	r12, r20
    1abe:	d5 06       	cpc	r13, r21
    1ac0:	20 f4       	brcc	.+8      	; 0x1aca <__moddi3+0x4b2>
    1ac2:	a2 0c       	add	r10, r2
    1ac4:	b3 1c       	adc	r11, r3
    1ac6:	c4 1c       	adc	r12, r4
    1ac8:	d5 1c       	adc	r13, r5
    1aca:	a2 1a       	sub	r10, r18
    1acc:	b3 0a       	sbc	r11, r19
    1ace:	c4 0a       	sbc	r12, r20
    1ad0:	d5 0a       	sbc	r13, r21
    1ad2:	c6 01       	movw	r24, r12
    1ad4:	b5 01       	movw	r22, r10
    1ad6:	a4 01       	movw	r20, r8
    1ad8:	93 01       	movw	r18, r6
    1ada:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
    1ade:	7b 01       	movw	r14, r22
    1ae0:	8c 01       	movw	r16, r24
    1ae2:	c6 01       	movw	r24, r12
    1ae4:	b5 01       	movw	r22, r10
    1ae6:	a4 01       	movw	r20, r8
    1ae8:	93 01       	movw	r18, r6
    1aea:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
    1aee:	ca 01       	movw	r24, r20
    1af0:	b9 01       	movw	r22, r18
    1af2:	69 96       	adiw	r28, 0x19	; 25
    1af4:	2c ad       	ldd	r18, Y+60	; 0x3c
    1af6:	3d ad       	ldd	r19, Y+61	; 0x3d
    1af8:	4e ad       	ldd	r20, Y+62	; 0x3e
    1afa:	5f ad       	ldd	r21, Y+63	; 0x3f
    1afc:	69 97       	sbiw	r28, 0x19	; 25
    1afe:	c8 c1       	rjmp	.+912    	; 0x1e90 <__moddi3+0x878>
    1b00:	21 14       	cp	r2, r1
    1b02:	31 04       	cpc	r3, r1
    1b04:	41 04       	cpc	r4, r1
    1b06:	51 04       	cpc	r5, r1
    1b08:	71 f4       	brne	.+28     	; 0x1b26 <__moddi3+0x50e>
    1b0a:	61 e0       	ldi	r22, 0x01	; 1
    1b0c:	70 e0       	ldi	r23, 0x00	; 0
    1b0e:	80 e0       	ldi	r24, 0x00	; 0
    1b10:	90 e0       	ldi	r25, 0x00	; 0
    1b12:	20 e0       	ldi	r18, 0x00	; 0
    1b14:	30 e0       	ldi	r19, 0x00	; 0
    1b16:	40 e0       	ldi	r20, 0x00	; 0
    1b18:	50 e0       	ldi	r21, 0x00	; 0
    1b1a:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
    1b1e:	c9 01       	movw	r24, r18
    1b20:	da 01       	movw	r26, r20
    1b22:	1c 01       	movw	r2, r24
    1b24:	2d 01       	movw	r4, r26
    1b26:	00 e0       	ldi	r16, 0x00	; 0
    1b28:	20 16       	cp	r2, r16
    1b2a:	00 e0       	ldi	r16, 0x00	; 0
    1b2c:	30 06       	cpc	r3, r16
    1b2e:	01 e0       	ldi	r16, 0x01	; 1
    1b30:	40 06       	cpc	r4, r16
    1b32:	00 e0       	ldi	r16, 0x00	; 0
    1b34:	50 06       	cpc	r5, r16
    1b36:	88 f4       	brcc	.+34     	; 0x1b5a <__moddi3+0x542>
    1b38:	1f ef       	ldi	r17, 0xFF	; 255
    1b3a:	21 16       	cp	r2, r17
    1b3c:	31 04       	cpc	r3, r1
    1b3e:	41 04       	cpc	r4, r1
    1b40:	51 04       	cpc	r5, r1
    1b42:	39 f0       	breq	.+14     	; 0x1b52 <__moddi3+0x53a>
    1b44:	30 f0       	brcs	.+12     	; 0x1b52 <__moddi3+0x53a>
    1b46:	68 e0       	ldi	r22, 0x08	; 8
    1b48:	e6 2e       	mov	r14, r22
    1b4a:	f1 2c       	mov	r15, r1
    1b4c:	01 2d       	mov	r16, r1
    1b4e:	11 2d       	mov	r17, r1
    1b50:	18 c0       	rjmp	.+48     	; 0x1b82 <__moddi3+0x56a>
    1b52:	ee 24       	eor	r14, r14
    1b54:	ff 24       	eor	r15, r15
    1b56:	87 01       	movw	r16, r14
    1b58:	14 c0       	rjmp	.+40     	; 0x1b82 <__moddi3+0x56a>
    1b5a:	20 e0       	ldi	r18, 0x00	; 0
    1b5c:	22 16       	cp	r2, r18
    1b5e:	20 e0       	ldi	r18, 0x00	; 0
    1b60:	32 06       	cpc	r3, r18
    1b62:	20 e0       	ldi	r18, 0x00	; 0
    1b64:	42 06       	cpc	r4, r18
    1b66:	21 e0       	ldi	r18, 0x01	; 1
    1b68:	52 06       	cpc	r5, r18
    1b6a:	30 f0       	brcs	.+12     	; 0x1b78 <__moddi3+0x560>
    1b6c:	58 e1       	ldi	r21, 0x18	; 24
    1b6e:	e5 2e       	mov	r14, r21
    1b70:	f1 2c       	mov	r15, r1
    1b72:	01 2d       	mov	r16, r1
    1b74:	11 2d       	mov	r17, r1
    1b76:	05 c0       	rjmp	.+10     	; 0x1b82 <__moddi3+0x56a>
    1b78:	40 e1       	ldi	r20, 0x10	; 16
    1b7a:	e4 2e       	mov	r14, r20
    1b7c:	f1 2c       	mov	r15, r1
    1b7e:	01 2d       	mov	r16, r1
    1b80:	11 2d       	mov	r17, r1
    1b82:	d2 01       	movw	r26, r4
    1b84:	c1 01       	movw	r24, r2
    1b86:	0e 2c       	mov	r0, r14
    1b88:	04 c0       	rjmp	.+8      	; 0x1b92 <__moddi3+0x57a>
    1b8a:	b6 95       	lsr	r27
    1b8c:	a7 95       	ror	r26
    1b8e:	97 95       	ror	r25
    1b90:	87 95       	ror	r24
    1b92:	0a 94       	dec	r0
    1b94:	d2 f7       	brpl	.-12     	; 0x1b8a <__moddi3+0x572>
    1b96:	82 59       	subi	r24, 0x92	; 146
    1b98:	9f 4f       	sbci	r25, 0xFF	; 255
    1b9a:	dc 01       	movw	r26, r24
    1b9c:	2c 91       	ld	r18, X
    1b9e:	30 e2       	ldi	r19, 0x20	; 32
    1ba0:	a3 2e       	mov	r10, r19
    1ba2:	b1 2c       	mov	r11, r1
    1ba4:	c1 2c       	mov	r12, r1
    1ba6:	d1 2c       	mov	r13, r1
    1ba8:	d6 01       	movw	r26, r12
    1baa:	c5 01       	movw	r24, r10
    1bac:	8e 19       	sub	r24, r14
    1bae:	9f 09       	sbc	r25, r15
    1bb0:	a0 0b       	sbc	r26, r16
    1bb2:	b1 0b       	sbc	r27, r17
    1bb4:	7c 01       	movw	r14, r24
    1bb6:	8d 01       	movw	r16, r26
    1bb8:	e2 1a       	sub	r14, r18
    1bba:	f1 08       	sbc	r15, r1
    1bbc:	01 09       	sbc	r16, r1
    1bbe:	11 09       	sbc	r17, r1
    1bc0:	65 96       	adiw	r28, 0x15	; 21
    1bc2:	ec ae       	std	Y+60, r14	; 0x3c
    1bc4:	fd ae       	std	Y+61, r15	; 0x3d
    1bc6:	0e af       	std	Y+62, r16	; 0x3e
    1bc8:	1f af       	std	Y+63, r17	; 0x3f
    1bca:	65 97       	sbiw	r28, 0x15	; 21
    1bcc:	e1 14       	cp	r14, r1
    1bce:	f1 04       	cpc	r15, r1
    1bd0:	01 05       	cpc	r16, r1
    1bd2:	11 05       	cpc	r17, r1
    1bd4:	39 f4       	brne	.+14     	; 0x1be4 <__moddi3+0x5cc>
    1bd6:	64 01       	movw	r12, r8
    1bd8:	53 01       	movw	r10, r6
    1bda:	a2 18       	sub	r10, r2
    1bdc:	b3 08       	sbc	r11, r3
    1bde:	c4 08       	sbc	r12, r4
    1be0:	d5 08       	sbc	r13, r5
    1be2:	ec c0       	rjmp	.+472    	; 0x1dbc <__moddi3+0x7a4>
    1be4:	62 96       	adiw	r28, 0x12	; 18
    1be6:	ff ac       	ldd	r15, Y+63	; 0x3f
    1be8:	62 97       	sbiw	r28, 0x12	; 18
    1bea:	e4 96       	adiw	r28, 0x34	; 52
    1bec:	ff ae       	std	Y+63, r15	; 0x3f
    1bee:	e4 97       	sbiw	r28, 0x34	; 52
    1bf0:	0f 2c       	mov	r0, r15
    1bf2:	04 c0       	rjmp	.+8      	; 0x1bfc <__moddi3+0x5e4>
    1bf4:	22 0c       	add	r2, r2
    1bf6:	33 1c       	adc	r3, r3
    1bf8:	44 1c       	adc	r4, r4
    1bfa:	55 1c       	adc	r5, r5
    1bfc:	0a 94       	dec	r0
    1bfe:	d2 f7       	brpl	.-12     	; 0x1bf4 <__moddi3+0x5dc>
    1c00:	8a 2d       	mov	r24, r10
    1c02:	8f 19       	sub	r24, r15
    1c04:	64 01       	movw	r12, r8
    1c06:	53 01       	movw	r10, r6
    1c08:	08 2e       	mov	r0, r24
    1c0a:	04 c0       	rjmp	.+8      	; 0x1c14 <__moddi3+0x5fc>
    1c0c:	d6 94       	lsr	r13
    1c0e:	c7 94       	ror	r12
    1c10:	b7 94       	ror	r11
    1c12:	a7 94       	ror	r10
    1c14:	0a 94       	dec	r0
    1c16:	d2 f7       	brpl	.-12     	; 0x1c0c <__moddi3+0x5f4>
    1c18:	a4 01       	movw	r20, r8
    1c1a:	93 01       	movw	r18, r6
    1c1c:	04 c0       	rjmp	.+8      	; 0x1c26 <__moddi3+0x60e>
    1c1e:	22 0f       	add	r18, r18
    1c20:	33 1f       	adc	r19, r19
    1c22:	44 1f       	adc	r20, r20
    1c24:	55 1f       	adc	r21, r21
    1c26:	fa 94       	dec	r15
    1c28:	d2 f7       	brpl	.-12     	; 0x1c1e <__moddi3+0x606>
    1c2a:	e8 96       	adiw	r28, 0x38	; 56
    1c2c:	6c ac       	ldd	r6, Y+60	; 0x3c
    1c2e:	7d ac       	ldd	r7, Y+61	; 0x3d
    1c30:	8e ac       	ldd	r8, Y+62	; 0x3e
    1c32:	9f ac       	ldd	r9, Y+63	; 0x3f
    1c34:	e8 97       	sbiw	r28, 0x38	; 56
    1c36:	04 c0       	rjmp	.+8      	; 0x1c40 <__moddi3+0x628>
    1c38:	96 94       	lsr	r9
    1c3a:	87 94       	ror	r8
    1c3c:	77 94       	ror	r7
    1c3e:	67 94       	ror	r6
    1c40:	8a 95       	dec	r24
    1c42:	d2 f7       	brpl	.-12     	; 0x1c38 <__moddi3+0x620>
    1c44:	84 01       	movw	r16, r8
    1c46:	73 01       	movw	r14, r6
    1c48:	e2 2a       	or	r14, r18
    1c4a:	f3 2a       	or	r15, r19
    1c4c:	04 2b       	or	r16, r20
    1c4e:	15 2b       	or	r17, r21
    1c50:	29 96       	adiw	r28, 0x09	; 9
    1c52:	ec ae       	std	Y+60, r14	; 0x3c
    1c54:	fd ae       	std	Y+61, r15	; 0x3d
    1c56:	0e af       	std	Y+62, r16	; 0x3e
    1c58:	1f af       	std	Y+63, r17	; 0x3f
    1c5a:	29 97       	sbiw	r28, 0x09	; 9
    1c5c:	32 01       	movw	r6, r4
    1c5e:	88 24       	eor	r8, r8
    1c60:	99 24       	eor	r9, r9
    1c62:	92 01       	movw	r18, r4
    1c64:	81 01       	movw	r16, r2
    1c66:	20 70       	andi	r18, 0x00	; 0
    1c68:	30 70       	andi	r19, 0x00	; 0
    1c6a:	6d 96       	adiw	r28, 0x1d	; 29
    1c6c:	0c af       	std	Y+60, r16	; 0x3c
    1c6e:	1d af       	std	Y+61, r17	; 0x3d
    1c70:	2e af       	std	Y+62, r18	; 0x3e
    1c72:	3f af       	std	Y+63, r19	; 0x3f
    1c74:	6d 97       	sbiw	r28, 0x1d	; 29
    1c76:	c6 01       	movw	r24, r12
    1c78:	b5 01       	movw	r22, r10
    1c7a:	a4 01       	movw	r20, r8
    1c7c:	93 01       	movw	r18, r6
    1c7e:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
    1c82:	7b 01       	movw	r14, r22
    1c84:	8c 01       	movw	r16, r24
    1c86:	c6 01       	movw	r24, r12
    1c88:	b5 01       	movw	r22, r10
    1c8a:	a4 01       	movw	r20, r8
    1c8c:	93 01       	movw	r18, r6
    1c8e:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
    1c92:	ca 01       	movw	r24, r20
    1c94:	b9 01       	movw	r22, r18
    1c96:	6d 96       	adiw	r28, 0x1d	; 29
    1c98:	2c ad       	ldd	r18, Y+60	; 0x3c
    1c9a:	3d ad       	ldd	r19, Y+61	; 0x3d
    1c9c:	4e ad       	ldd	r20, Y+62	; 0x3e
    1c9e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1ca0:	6d 97       	sbiw	r28, 0x1d	; 29
    1ca2:	0e 94 43 2e 	call	0x5c86	; 0x5c86 <__mulsi3>
    1ca6:	9b 01       	movw	r18, r22
    1ca8:	ac 01       	movw	r20, r24
    1caa:	87 01       	movw	r16, r14
    1cac:	ff 24       	eor	r15, r15
    1cae:	ee 24       	eor	r14, r14
    1cb0:	29 96       	adiw	r28, 0x09	; 9
    1cb2:	ac ac       	ldd	r10, Y+60	; 0x3c
    1cb4:	bd ac       	ldd	r11, Y+61	; 0x3d
    1cb6:	ce ac       	ldd	r12, Y+62	; 0x3e
    1cb8:	df ac       	ldd	r13, Y+63	; 0x3f
    1cba:	29 97       	sbiw	r28, 0x09	; 9
    1cbc:	c6 01       	movw	r24, r12
    1cbe:	aa 27       	eor	r26, r26
    1cc0:	bb 27       	eor	r27, r27
    1cc2:	5c 01       	movw	r10, r24
    1cc4:	6d 01       	movw	r12, r26
    1cc6:	ae 28       	or	r10, r14
    1cc8:	bf 28       	or	r11, r15
    1cca:	c0 2a       	or	r12, r16
    1ccc:	d1 2a       	or	r13, r17
    1cce:	a2 16       	cp	r10, r18
    1cd0:	b3 06       	cpc	r11, r19
    1cd2:	c4 06       	cpc	r12, r20
    1cd4:	d5 06       	cpc	r13, r21
    1cd6:	90 f4       	brcc	.+36     	; 0x1cfc <__moddi3+0x6e4>
    1cd8:	a2 0c       	add	r10, r2
    1cda:	b3 1c       	adc	r11, r3
    1cdc:	c4 1c       	adc	r12, r4
    1cde:	d5 1c       	adc	r13, r5
    1ce0:	a2 14       	cp	r10, r2
    1ce2:	b3 04       	cpc	r11, r3
    1ce4:	c4 04       	cpc	r12, r4
    1ce6:	d5 04       	cpc	r13, r5
    1ce8:	48 f0       	brcs	.+18     	; 0x1cfc <__moddi3+0x6e4>
    1cea:	a2 16       	cp	r10, r18
    1cec:	b3 06       	cpc	r11, r19
    1cee:	c4 06       	cpc	r12, r20
    1cf0:	d5 06       	cpc	r13, r21
    1cf2:	20 f4       	brcc	.+8      	; 0x1cfc <__moddi3+0x6e4>
    1cf4:	a2 0c       	add	r10, r2
    1cf6:	b3 1c       	adc	r11, r3
    1cf8:	c4 1c       	adc	r12, r4
    1cfa:	d5 1c       	adc	r13, r5
    1cfc:	a2 1a       	sub	r10, r18
    1cfe:	b3 0a       	sbc	r11, r19
    1d00:	c4 0a       	sbc	r12, r20
    1d02:	d5 0a       	sbc	r13, r21
    1d04:	c6 01       	movw	r24, r12
    1d06:	b5 01       	movw	r22, r10
    1d08:	a4 01       	movw	r20, r8
    1d0a:	93 01       	movw	r18, r6
    1d0c:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
    1d10:	7b 01       	movw	r14, r22
    1d12:	8c 01       	movw	r16, r24
    1d14:	c6 01       	movw	r24, r12
    1d16:	b5 01       	movw	r22, r10
    1d18:	a4 01       	movw	r20, r8
    1d1a:	93 01       	movw	r18, r6
    1d1c:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
    1d20:	ca 01       	movw	r24, r20
    1d22:	b9 01       	movw	r22, r18
    1d24:	6d 96       	adiw	r28, 0x1d	; 29
    1d26:	2c ad       	ldd	r18, Y+60	; 0x3c
    1d28:	3d ad       	ldd	r19, Y+61	; 0x3d
    1d2a:	4e ad       	ldd	r20, Y+62	; 0x3e
    1d2c:	5f ad       	ldd	r21, Y+63	; 0x3f
    1d2e:	6d 97       	sbiw	r28, 0x1d	; 29
    1d30:	0e 94 43 2e 	call	0x5c86	; 0x5c86 <__mulsi3>
    1d34:	9b 01       	movw	r18, r22
    1d36:	ac 01       	movw	r20, r24
    1d38:	87 01       	movw	r16, r14
    1d3a:	ff 24       	eor	r15, r15
    1d3c:	ee 24       	eor	r14, r14
    1d3e:	29 96       	adiw	r28, 0x09	; 9
    1d40:	8c ad       	ldd	r24, Y+60	; 0x3c
    1d42:	9d ad       	ldd	r25, Y+61	; 0x3d
    1d44:	ae ad       	ldd	r26, Y+62	; 0x3e
    1d46:	bf ad       	ldd	r27, Y+63	; 0x3f
    1d48:	29 97       	sbiw	r28, 0x09	; 9
    1d4a:	a0 70       	andi	r26, 0x00	; 0
    1d4c:	b0 70       	andi	r27, 0x00	; 0
    1d4e:	57 01       	movw	r10, r14
    1d50:	68 01       	movw	r12, r16
    1d52:	a8 2a       	or	r10, r24
    1d54:	b9 2a       	or	r11, r25
    1d56:	ca 2a       	or	r12, r26
    1d58:	db 2a       	or	r13, r27
    1d5a:	a2 16       	cp	r10, r18
    1d5c:	b3 06       	cpc	r11, r19
    1d5e:	c4 06       	cpc	r12, r20
    1d60:	d5 06       	cpc	r13, r21
    1d62:	90 f4       	brcc	.+36     	; 0x1d88 <__moddi3+0x770>
    1d64:	a2 0c       	add	r10, r2
    1d66:	b3 1c       	adc	r11, r3
    1d68:	c4 1c       	adc	r12, r4
    1d6a:	d5 1c       	adc	r13, r5
    1d6c:	a2 14       	cp	r10, r2
    1d6e:	b3 04       	cpc	r11, r3
    1d70:	c4 04       	cpc	r12, r4
    1d72:	d5 04       	cpc	r13, r5
    1d74:	48 f0       	brcs	.+18     	; 0x1d88 <__moddi3+0x770>
    1d76:	a2 16       	cp	r10, r18
    1d78:	b3 06       	cpc	r11, r19
    1d7a:	c4 06       	cpc	r12, r20
    1d7c:	d5 06       	cpc	r13, r21
    1d7e:	20 f4       	brcc	.+8      	; 0x1d88 <__moddi3+0x770>
    1d80:	a2 0c       	add	r10, r2
    1d82:	b3 1c       	adc	r11, r3
    1d84:	c4 1c       	adc	r12, r4
    1d86:	d5 1c       	adc	r13, r5
    1d88:	e8 96       	adiw	r28, 0x38	; 56
    1d8a:	ec ac       	ldd	r14, Y+60	; 0x3c
    1d8c:	fd ac       	ldd	r15, Y+61	; 0x3d
    1d8e:	0e ad       	ldd	r16, Y+62	; 0x3e
    1d90:	1f ad       	ldd	r17, Y+63	; 0x3f
    1d92:	e8 97       	sbiw	r28, 0x38	; 56
    1d94:	e4 96       	adiw	r28, 0x34	; 52
    1d96:	0f ac       	ldd	r0, Y+63	; 0x3f
    1d98:	e4 97       	sbiw	r28, 0x34	; 52
    1d9a:	04 c0       	rjmp	.+8      	; 0x1da4 <__moddi3+0x78c>
    1d9c:	ee 0c       	add	r14, r14
    1d9e:	ff 1c       	adc	r15, r15
    1da0:	00 1f       	adc	r16, r16
    1da2:	11 1f       	adc	r17, r17
    1da4:	0a 94       	dec	r0
    1da6:	d2 f7       	brpl	.-12     	; 0x1d9c <__moddi3+0x784>
    1da8:	2d 96       	adiw	r28, 0x0d	; 13
    1daa:	ec ae       	std	Y+60, r14	; 0x3c
    1dac:	fd ae       	std	Y+61, r15	; 0x3d
    1dae:	0e af       	std	Y+62, r16	; 0x3e
    1db0:	1f af       	std	Y+63, r17	; 0x3f
    1db2:	2d 97       	sbiw	r28, 0x0d	; 13
    1db4:	a2 1a       	sub	r10, r18
    1db6:	b3 0a       	sbc	r11, r19
    1db8:	c4 0a       	sbc	r12, r20
    1dba:	d5 0a       	sbc	r13, r21
    1dbc:	32 01       	movw	r6, r4
    1dbe:	88 24       	eor	r8, r8
    1dc0:	99 24       	eor	r9, r9
    1dc2:	92 01       	movw	r18, r4
    1dc4:	81 01       	movw	r16, r2
    1dc6:	20 70       	andi	r18, 0x00	; 0
    1dc8:	30 70       	andi	r19, 0x00	; 0
    1dca:	a1 96       	adiw	r28, 0x21	; 33
    1dcc:	0c af       	std	Y+60, r16	; 0x3c
    1dce:	1d af       	std	Y+61, r17	; 0x3d
    1dd0:	2e af       	std	Y+62, r18	; 0x3e
    1dd2:	3f af       	std	Y+63, r19	; 0x3f
    1dd4:	a1 97       	sbiw	r28, 0x21	; 33
    1dd6:	c6 01       	movw	r24, r12
    1dd8:	b5 01       	movw	r22, r10
    1dda:	a4 01       	movw	r20, r8
    1ddc:	93 01       	movw	r18, r6
    1dde:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
    1de2:	7b 01       	movw	r14, r22
    1de4:	8c 01       	movw	r16, r24
    1de6:	c6 01       	movw	r24, r12
    1de8:	b5 01       	movw	r22, r10
    1dea:	a4 01       	movw	r20, r8
    1dec:	93 01       	movw	r18, r6
    1dee:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
    1df2:	ca 01       	movw	r24, r20
    1df4:	b9 01       	movw	r22, r18
    1df6:	a1 96       	adiw	r28, 0x21	; 33
    1df8:	2c ad       	ldd	r18, Y+60	; 0x3c
    1dfa:	3d ad       	ldd	r19, Y+61	; 0x3d
    1dfc:	4e ad       	ldd	r20, Y+62	; 0x3e
    1dfe:	5f ad       	ldd	r21, Y+63	; 0x3f
    1e00:	a1 97       	sbiw	r28, 0x21	; 33
    1e02:	0e 94 43 2e 	call	0x5c86	; 0x5c86 <__mulsi3>
    1e06:	9b 01       	movw	r18, r22
    1e08:	ac 01       	movw	r20, r24
    1e0a:	87 01       	movw	r16, r14
    1e0c:	ff 24       	eor	r15, r15
    1e0e:	ee 24       	eor	r14, r14
    1e10:	2d 96       	adiw	r28, 0x0d	; 13
    1e12:	ac ac       	ldd	r10, Y+60	; 0x3c
    1e14:	bd ac       	ldd	r11, Y+61	; 0x3d
    1e16:	ce ac       	ldd	r12, Y+62	; 0x3e
    1e18:	df ac       	ldd	r13, Y+63	; 0x3f
    1e1a:	2d 97       	sbiw	r28, 0x0d	; 13
    1e1c:	c6 01       	movw	r24, r12
    1e1e:	aa 27       	eor	r26, r26
    1e20:	bb 27       	eor	r27, r27
    1e22:	57 01       	movw	r10, r14
    1e24:	68 01       	movw	r12, r16
    1e26:	a8 2a       	or	r10, r24
    1e28:	b9 2a       	or	r11, r25
    1e2a:	ca 2a       	or	r12, r26
    1e2c:	db 2a       	or	r13, r27
    1e2e:	a2 16       	cp	r10, r18
    1e30:	b3 06       	cpc	r11, r19
    1e32:	c4 06       	cpc	r12, r20
    1e34:	d5 06       	cpc	r13, r21
    1e36:	90 f4       	brcc	.+36     	; 0x1e5c <__moddi3+0x844>
    1e38:	a2 0c       	add	r10, r2
    1e3a:	b3 1c       	adc	r11, r3
    1e3c:	c4 1c       	adc	r12, r4
    1e3e:	d5 1c       	adc	r13, r5
    1e40:	a2 14       	cp	r10, r2
    1e42:	b3 04       	cpc	r11, r3
    1e44:	c4 04       	cpc	r12, r4
    1e46:	d5 04       	cpc	r13, r5
    1e48:	48 f0       	brcs	.+18     	; 0x1e5c <__moddi3+0x844>
    1e4a:	a2 16       	cp	r10, r18
    1e4c:	b3 06       	cpc	r11, r19
    1e4e:	c4 06       	cpc	r12, r20
    1e50:	d5 06       	cpc	r13, r21
    1e52:	20 f4       	brcc	.+8      	; 0x1e5c <__moddi3+0x844>
    1e54:	a2 0c       	add	r10, r2
    1e56:	b3 1c       	adc	r11, r3
    1e58:	c4 1c       	adc	r12, r4
    1e5a:	d5 1c       	adc	r13, r5
    1e5c:	a2 1a       	sub	r10, r18
    1e5e:	b3 0a       	sbc	r11, r19
    1e60:	c4 0a       	sbc	r12, r20
    1e62:	d5 0a       	sbc	r13, r21
    1e64:	c6 01       	movw	r24, r12
    1e66:	b5 01       	movw	r22, r10
    1e68:	a4 01       	movw	r20, r8
    1e6a:	93 01       	movw	r18, r6
    1e6c:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
    1e70:	7b 01       	movw	r14, r22
    1e72:	8c 01       	movw	r16, r24
    1e74:	c6 01       	movw	r24, r12
    1e76:	b5 01       	movw	r22, r10
    1e78:	a4 01       	movw	r20, r8
    1e7a:	93 01       	movw	r18, r6
    1e7c:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
    1e80:	ca 01       	movw	r24, r20
    1e82:	b9 01       	movw	r22, r18
    1e84:	a1 96       	adiw	r28, 0x21	; 33
    1e86:	2c ad       	ldd	r18, Y+60	; 0x3c
    1e88:	3d ad       	ldd	r19, Y+61	; 0x3d
    1e8a:	4e ad       	ldd	r20, Y+62	; 0x3e
    1e8c:	5f ad       	ldd	r21, Y+63	; 0x3f
    1e8e:	a1 97       	sbiw	r28, 0x21	; 33
    1e90:	0e 94 43 2e 	call	0x5c86	; 0x5c86 <__mulsi3>
    1e94:	9b 01       	movw	r18, r22
    1e96:	ac 01       	movw	r20, r24
    1e98:	87 01       	movw	r16, r14
    1e9a:	ff 24       	eor	r15, r15
    1e9c:	ee 24       	eor	r14, r14
    1e9e:	2d 96       	adiw	r28, 0x0d	; 13
    1ea0:	8c ad       	ldd	r24, Y+60	; 0x3c
    1ea2:	9d ad       	ldd	r25, Y+61	; 0x3d
    1ea4:	ae ad       	ldd	r26, Y+62	; 0x3e
    1ea6:	bf ad       	ldd	r27, Y+63	; 0x3f
    1ea8:	2d 97       	sbiw	r28, 0x0d	; 13
    1eaa:	a0 70       	andi	r26, 0x00	; 0
    1eac:	b0 70       	andi	r27, 0x00	; 0
    1eae:	e8 2a       	or	r14, r24
    1eb0:	f9 2a       	or	r15, r25
    1eb2:	0a 2b       	or	r16, r26
    1eb4:	1b 2b       	or	r17, r27
    1eb6:	e2 16       	cp	r14, r18
    1eb8:	f3 06       	cpc	r15, r19
    1eba:	04 07       	cpc	r16, r20
    1ebc:	15 07       	cpc	r17, r21
    1ebe:	90 f4       	brcc	.+36     	; 0x1ee4 <__moddi3+0x8cc>
    1ec0:	e2 0c       	add	r14, r2
    1ec2:	f3 1c       	adc	r15, r3
    1ec4:	04 1d       	adc	r16, r4
    1ec6:	15 1d       	adc	r17, r5
    1ec8:	e2 14       	cp	r14, r2
    1eca:	f3 04       	cpc	r15, r3
    1ecc:	04 05       	cpc	r16, r4
    1ece:	15 05       	cpc	r17, r5
    1ed0:	48 f0       	brcs	.+18     	; 0x1ee4 <__moddi3+0x8cc>
    1ed2:	e2 16       	cp	r14, r18
    1ed4:	f3 06       	cpc	r15, r19
    1ed6:	04 07       	cpc	r16, r20
    1ed8:	15 07       	cpc	r17, r21
    1eda:	20 f4       	brcc	.+8      	; 0x1ee4 <__moddi3+0x8cc>
    1edc:	e2 0c       	add	r14, r2
    1ede:	f3 1c       	adc	r15, r3
    1ee0:	04 1d       	adc	r16, r4
    1ee2:	15 1d       	adc	r17, r5
    1ee4:	e2 1a       	sub	r14, r18
    1ee6:	f3 0a       	sbc	r15, r19
    1ee8:	04 0b       	sbc	r16, r20
    1eea:	15 0b       	sbc	r17, r21
    1eec:	d8 01       	movw	r26, r16
    1eee:	c7 01       	movw	r24, r14
    1ef0:	62 96       	adiw	r28, 0x12	; 18
    1ef2:	0f ac       	ldd	r0, Y+63	; 0x3f
    1ef4:	62 97       	sbiw	r28, 0x12	; 18
    1ef6:	04 c0       	rjmp	.+8      	; 0x1f00 <__moddi3+0x8e8>
    1ef8:	b6 95       	lsr	r27
    1efa:	a7 95       	ror	r26
    1efc:	97 95       	ror	r25
    1efe:	87 95       	ror	r24
    1f00:	0a 94       	dec	r0
    1f02:	d2 f7       	brpl	.-12     	; 0x1ef8 <__moddi3+0x8e0>
    1f04:	89 a7       	std	Y+41, r24	; 0x29
    1f06:	9a a7       	std	Y+42, r25	; 0x2a
    1f08:	ab a7       	std	Y+43, r26	; 0x2b
    1f0a:	bc a7       	std	Y+44, r27	; 0x2c
    1f0c:	1d a6       	std	Y+45, r1	; 0x2d
    1f0e:	1e a6       	std	Y+46, r1	; 0x2e
    1f10:	1f a6       	std	Y+47, r1	; 0x2f
    1f12:	18 aa       	std	Y+48, r1	; 0x30
    1f14:	89 8b       	std	Y+17, r24	; 0x11
    1f16:	8a a5       	ldd	r24, Y+42	; 0x2a
    1f18:	8a 8b       	std	Y+18, r24	; 0x12
    1f1a:	8b a5       	ldd	r24, Y+43	; 0x2b
    1f1c:	8b 8b       	std	Y+19, r24	; 0x13
    1f1e:	8c a5       	ldd	r24, Y+44	; 0x2c
    1f20:	8c 8b       	std	Y+20, r24	; 0x14
    1f22:	8d a5       	ldd	r24, Y+45	; 0x2d
    1f24:	8d 8b       	std	Y+21, r24	; 0x15
    1f26:	2f c3       	rjmp	.+1630   	; 0x2586 <__moddi3+0xf6e>
    1f28:	6a 14       	cp	r6, r10
    1f2a:	7b 04       	cpc	r7, r11
    1f2c:	8c 04       	cpc	r8, r12
    1f2e:	9d 04       	cpc	r9, r13
    1f30:	48 f4       	brcc	.+18     	; 0x1f44 <__moddi3+0x92c>
    1f32:	49 8b       	std	Y+17, r20	; 0x11
    1f34:	5a 8b       	std	Y+18, r21	; 0x12
    1f36:	6b 8b       	std	Y+19, r22	; 0x13
    1f38:	7c 8b       	std	Y+20, r23	; 0x14
    1f3a:	8d 8b       	std	Y+21, r24	; 0x15
    1f3c:	9e 8b       	std	Y+22, r25	; 0x16
    1f3e:	2f 8b       	std	Y+23, r18	; 0x17
    1f40:	38 8f       	std	Y+24, r19	; 0x18
    1f42:	27 c3       	rjmp	.+1614   	; 0x2592 <__moddi3+0xf7a>
    1f44:	00 e0       	ldi	r16, 0x00	; 0
    1f46:	a0 16       	cp	r10, r16
    1f48:	00 e0       	ldi	r16, 0x00	; 0
    1f4a:	b0 06       	cpc	r11, r16
    1f4c:	01 e0       	ldi	r16, 0x01	; 1
    1f4e:	c0 06       	cpc	r12, r16
    1f50:	00 e0       	ldi	r16, 0x00	; 0
    1f52:	d0 06       	cpc	r13, r16
    1f54:	88 f4       	brcc	.+34     	; 0x1f78 <__moddi3+0x960>
    1f56:	1f ef       	ldi	r17, 0xFF	; 255
    1f58:	a1 16       	cp	r10, r17
    1f5a:	b1 04       	cpc	r11, r1
    1f5c:	c1 04       	cpc	r12, r1
    1f5e:	d1 04       	cpc	r13, r1
    1f60:	39 f0       	breq	.+14     	; 0x1f70 <__moddi3+0x958>
    1f62:	30 f0       	brcs	.+12     	; 0x1f70 <__moddi3+0x958>
    1f64:	28 e0       	ldi	r18, 0x08	; 8
    1f66:	e2 2e       	mov	r14, r18
    1f68:	f1 2c       	mov	r15, r1
    1f6a:	01 2d       	mov	r16, r1
    1f6c:	11 2d       	mov	r17, r1
    1f6e:	18 c0       	rjmp	.+48     	; 0x1fa0 <__moddi3+0x988>
    1f70:	ee 24       	eor	r14, r14
    1f72:	ff 24       	eor	r15, r15
    1f74:	87 01       	movw	r16, r14
    1f76:	14 c0       	rjmp	.+40     	; 0x1fa0 <__moddi3+0x988>
    1f78:	20 e0       	ldi	r18, 0x00	; 0
    1f7a:	a2 16       	cp	r10, r18
    1f7c:	20 e0       	ldi	r18, 0x00	; 0
    1f7e:	b2 06       	cpc	r11, r18
    1f80:	20 e0       	ldi	r18, 0x00	; 0
    1f82:	c2 06       	cpc	r12, r18
    1f84:	21 e0       	ldi	r18, 0x01	; 1
    1f86:	d2 06       	cpc	r13, r18
    1f88:	30 f0       	brcs	.+12     	; 0x1f96 <__moddi3+0x97e>
    1f8a:	98 e1       	ldi	r25, 0x18	; 24
    1f8c:	e9 2e       	mov	r14, r25
    1f8e:	f1 2c       	mov	r15, r1
    1f90:	01 2d       	mov	r16, r1
    1f92:	11 2d       	mov	r17, r1
    1f94:	05 c0       	rjmp	.+10     	; 0x1fa0 <__moddi3+0x988>
    1f96:	80 e1       	ldi	r24, 0x10	; 16
    1f98:	e8 2e       	mov	r14, r24
    1f9a:	f1 2c       	mov	r15, r1
    1f9c:	01 2d       	mov	r16, r1
    1f9e:	11 2d       	mov	r17, r1
    1fa0:	d6 01       	movw	r26, r12
    1fa2:	c5 01       	movw	r24, r10
    1fa4:	0e 2c       	mov	r0, r14
    1fa6:	04 c0       	rjmp	.+8      	; 0x1fb0 <__moddi3+0x998>
    1fa8:	b6 95       	lsr	r27
    1faa:	a7 95       	ror	r26
    1fac:	97 95       	ror	r25
    1fae:	87 95       	ror	r24
    1fb0:	0a 94       	dec	r0
    1fb2:	d2 f7       	brpl	.-12     	; 0x1fa8 <__moddi3+0x990>
    1fb4:	82 59       	subi	r24, 0x92	; 146
    1fb6:	9f 4f       	sbci	r25, 0xFF	; 255
    1fb8:	dc 01       	movw	r26, r24
    1fba:	2c 91       	ld	r18, X
    1fbc:	80 e2       	ldi	r24, 0x20	; 32
    1fbe:	90 e0       	ldi	r25, 0x00	; 0
    1fc0:	a0 e0       	ldi	r26, 0x00	; 0
    1fc2:	b0 e0       	ldi	r27, 0x00	; 0
    1fc4:	8e 19       	sub	r24, r14
    1fc6:	9f 09       	sbc	r25, r15
    1fc8:	a0 0b       	sbc	r26, r16
    1fca:	b1 0b       	sbc	r27, r17
    1fcc:	82 1b       	sub	r24, r18
    1fce:	91 09       	sbc	r25, r1
    1fd0:	a1 09       	sbc	r26, r1
    1fd2:	b1 09       	sbc	r27, r1
    1fd4:	00 97       	sbiw	r24, 0x00	; 0
    1fd6:	a1 05       	cpc	r26, r1
    1fd8:	b1 05       	cpc	r27, r1
    1fda:	09 f0       	breq	.+2      	; 0x1fde <__moddi3+0x9c6>
    1fdc:	59 c0       	rjmp	.+178    	; 0x2090 <__moddi3+0xa78>
    1fde:	a6 14       	cp	r10, r6
    1fe0:	b7 04       	cpc	r11, r7
    1fe2:	c8 04       	cpc	r12, r8
    1fe4:	d9 04       	cpc	r13, r9
    1fe6:	70 f0       	brcs	.+28     	; 0x2004 <__moddi3+0x9ec>
    1fe8:	e8 96       	adiw	r28, 0x38	; 56
    1fea:	ec ac       	ldd	r14, Y+60	; 0x3c
    1fec:	fd ac       	ldd	r15, Y+61	; 0x3d
    1fee:	0e ad       	ldd	r16, Y+62	; 0x3e
    1ff0:	1f ad       	ldd	r17, Y+63	; 0x3f
    1ff2:	e8 97       	sbiw	r28, 0x38	; 56
    1ff4:	e2 14       	cp	r14, r2
    1ff6:	f3 04       	cpc	r15, r3
    1ff8:	04 05       	cpc	r16, r4
    1ffa:	15 05       	cpc	r17, r5
    1ffc:	18 f4       	brcc	.+6      	; 0x2004 <__moddi3+0x9ec>
    1ffe:	d8 01       	movw	r26, r16
    2000:	c7 01       	movw	r24, r14
    2002:	2f c0       	rjmp	.+94     	; 0x2062 <__moddi3+0xa4a>
    2004:	e8 96       	adiw	r28, 0x38	; 56
    2006:	8c ad       	ldd	r24, Y+60	; 0x3c
    2008:	9d ad       	ldd	r25, Y+61	; 0x3d
    200a:	ae ad       	ldd	r26, Y+62	; 0x3e
    200c:	bf ad       	ldd	r27, Y+63	; 0x3f
    200e:	e8 97       	sbiw	r28, 0x38	; 56
    2010:	82 19       	sub	r24, r2
    2012:	93 09       	sbc	r25, r3
    2014:	a4 09       	sbc	r26, r4
    2016:	b5 09       	sbc	r27, r5
    2018:	a4 01       	movw	r20, r8
    201a:	93 01       	movw	r18, r6
    201c:	2a 19       	sub	r18, r10
    201e:	3b 09       	sbc	r19, r11
    2020:	4c 09       	sbc	r20, r12
    2022:	5d 09       	sbc	r21, r13
    2024:	aa 24       	eor	r10, r10
    2026:	bb 24       	eor	r11, r11
    2028:	65 01       	movw	r12, r10
    202a:	e8 96       	adiw	r28, 0x38	; 56
    202c:	6c ac       	ldd	r6, Y+60	; 0x3c
    202e:	7d ac       	ldd	r7, Y+61	; 0x3d
    2030:	8e ac       	ldd	r8, Y+62	; 0x3e
    2032:	9f ac       	ldd	r9, Y+63	; 0x3f
    2034:	e8 97       	sbiw	r28, 0x38	; 56
    2036:	68 16       	cp	r6, r24
    2038:	79 06       	cpc	r7, r25
    203a:	8a 06       	cpc	r8, r26
    203c:	9b 06       	cpc	r9, r27
    203e:	28 f4       	brcc	.+10     	; 0x204a <__moddi3+0xa32>
    2040:	11 e0       	ldi	r17, 0x01	; 1
    2042:	a1 2e       	mov	r10, r17
    2044:	b1 2c       	mov	r11, r1
    2046:	c1 2c       	mov	r12, r1
    2048:	d1 2c       	mov	r13, r1
    204a:	79 01       	movw	r14, r18
    204c:	8a 01       	movw	r16, r20
    204e:	ea 18       	sub	r14, r10
    2050:	fb 08       	sbc	r15, r11
    2052:	0c 09       	sbc	r16, r12
    2054:	1d 09       	sbc	r17, r13
    2056:	61 96       	adiw	r28, 0x11	; 17
    2058:	ec ae       	std	Y+60, r14	; 0x3c
    205a:	fd ae       	std	Y+61, r15	; 0x3d
    205c:	0e af       	std	Y+62, r16	; 0x3e
    205e:	1f af       	std	Y+63, r17	; 0x3f
    2060:	61 97       	sbiw	r28, 0x11	; 17
    2062:	89 a7       	std	Y+41, r24	; 0x29
    2064:	9a a7       	std	Y+42, r25	; 0x2a
    2066:	ab a7       	std	Y+43, r26	; 0x2b
    2068:	bc a7       	std	Y+44, r27	; 0x2c
    206a:	61 96       	adiw	r28, 0x11	; 17
    206c:	0c ad       	ldd	r16, Y+60	; 0x3c
    206e:	1d ad       	ldd	r17, Y+61	; 0x3d
    2070:	2e ad       	ldd	r18, Y+62	; 0x3e
    2072:	3f ad       	ldd	r19, Y+63	; 0x3f
    2074:	61 97       	sbiw	r28, 0x11	; 17
    2076:	0d a7       	std	Y+45, r16	; 0x2d
    2078:	1e a7       	std	Y+46, r17	; 0x2e
    207a:	2f a7       	std	Y+47, r18	; 0x2f
    207c:	38 ab       	std	Y+48, r19	; 0x30
    207e:	89 8b       	std	Y+17, r24	; 0x11
    2080:	8a a5       	ldd	r24, Y+42	; 0x2a
    2082:	8a 8b       	std	Y+18, r24	; 0x12
    2084:	8b a5       	ldd	r24, Y+43	; 0x2b
    2086:	8b 8b       	std	Y+19, r24	; 0x13
    2088:	8c a5       	ldd	r24, Y+44	; 0x2c
    208a:	8c 8b       	std	Y+20, r24	; 0x14
    208c:	0d 8b       	std	Y+21, r16	; 0x15
    208e:	7b c2       	rjmp	.+1270   	; 0x2586 <__moddi3+0xf6e>
    2090:	e3 96       	adiw	r28, 0x33	; 51
    2092:	8f af       	std	Y+63, r24	; 0x3f
    2094:	e3 97       	sbiw	r28, 0x33	; 51
    2096:	a6 01       	movw	r20, r12
    2098:	95 01       	movw	r18, r10
    209a:	08 2e       	mov	r0, r24
    209c:	04 c0       	rjmp	.+8      	; 0x20a6 <__moddi3+0xa8e>
    209e:	22 0f       	add	r18, r18
    20a0:	33 1f       	adc	r19, r19
    20a2:	44 1f       	adc	r20, r20
    20a4:	55 1f       	adc	r21, r21
    20a6:	0a 94       	dec	r0
    20a8:	d2 f7       	brpl	.-12     	; 0x209e <__moddi3+0xa86>
    20aa:	10 e2       	ldi	r17, 0x20	; 32
    20ac:	18 1b       	sub	r17, r24
    20ae:	e2 96       	adiw	r28, 0x32	; 50
    20b0:	1f af       	std	Y+63, r17	; 0x3f
    20b2:	e2 97       	sbiw	r28, 0x32	; 50
    20b4:	d2 01       	movw	r26, r4
    20b6:	c1 01       	movw	r24, r2
    20b8:	01 2e       	mov	r0, r17
    20ba:	04 c0       	rjmp	.+8      	; 0x20c4 <__moddi3+0xaac>
    20bc:	b6 95       	lsr	r27
    20be:	a7 95       	ror	r26
    20c0:	97 95       	ror	r25
    20c2:	87 95       	ror	r24
    20c4:	0a 94       	dec	r0
    20c6:	d2 f7       	brpl	.-12     	; 0x20bc <__moddi3+0xaa4>
    20c8:	5c 01       	movw	r10, r24
    20ca:	6d 01       	movw	r12, r26
    20cc:	a2 2a       	or	r10, r18
    20ce:	b3 2a       	or	r11, r19
    20d0:	c4 2a       	or	r12, r20
    20d2:	d5 2a       	or	r13, r21
    20d4:	25 96       	adiw	r28, 0x05	; 5
    20d6:	ac ae       	std	Y+60, r10	; 0x3c
    20d8:	bd ae       	std	Y+61, r11	; 0x3d
    20da:	ce ae       	std	Y+62, r12	; 0x3e
    20dc:	df ae       	std	Y+63, r13	; 0x3f
    20de:	25 97       	sbiw	r28, 0x05	; 5
    20e0:	72 01       	movw	r14, r4
    20e2:	61 01       	movw	r12, r2
    20e4:	e3 96       	adiw	r28, 0x33	; 51
    20e6:	0f ac       	ldd	r0, Y+63	; 0x3f
    20e8:	e3 97       	sbiw	r28, 0x33	; 51
    20ea:	04 c0       	rjmp	.+8      	; 0x20f4 <__moddi3+0xadc>
    20ec:	cc 0c       	add	r12, r12
    20ee:	dd 1c       	adc	r13, r13
    20f0:	ee 1c       	adc	r14, r14
    20f2:	ff 1c       	adc	r15, r15
    20f4:	0a 94       	dec	r0
    20f6:	d2 f7       	brpl	.-12     	; 0x20ec <__moddi3+0xad4>
    20f8:	21 96       	adiw	r28, 0x01	; 1
    20fa:	cc ae       	std	Y+60, r12	; 0x3c
    20fc:	dd ae       	std	Y+61, r13	; 0x3d
    20fe:	ee ae       	std	Y+62, r14	; 0x3e
    2100:	ff ae       	std	Y+63, r15	; 0x3f
    2102:	21 97       	sbiw	r28, 0x01	; 1
    2104:	64 01       	movw	r12, r8
    2106:	53 01       	movw	r10, r6
    2108:	01 2e       	mov	r0, r17
    210a:	04 c0       	rjmp	.+8      	; 0x2114 <__moddi3+0xafc>
    210c:	d6 94       	lsr	r13
    210e:	c7 94       	ror	r12
    2110:	b7 94       	ror	r11
    2112:	a7 94       	ror	r10
    2114:	0a 94       	dec	r0
    2116:	d2 f7       	brpl	.-12     	; 0x210c <__moddi3+0xaf4>
    2118:	a4 01       	movw	r20, r8
    211a:	93 01       	movw	r18, r6
    211c:	e3 96       	adiw	r28, 0x33	; 51
    211e:	0f ac       	ldd	r0, Y+63	; 0x3f
    2120:	e3 97       	sbiw	r28, 0x33	; 51
    2122:	04 c0       	rjmp	.+8      	; 0x212c <__moddi3+0xb14>
    2124:	22 0f       	add	r18, r18
    2126:	33 1f       	adc	r19, r19
    2128:	44 1f       	adc	r20, r20
    212a:	55 1f       	adc	r21, r21
    212c:	0a 94       	dec	r0
    212e:	d2 f7       	brpl	.-12     	; 0x2124 <__moddi3+0xb0c>
    2130:	e8 96       	adiw	r28, 0x38	; 56
    2132:	8c ad       	ldd	r24, Y+60	; 0x3c
    2134:	9d ad       	ldd	r25, Y+61	; 0x3d
    2136:	ae ad       	ldd	r26, Y+62	; 0x3e
    2138:	bf ad       	ldd	r27, Y+63	; 0x3f
    213a:	e8 97       	sbiw	r28, 0x38	; 56
    213c:	04 c0       	rjmp	.+8      	; 0x2146 <__moddi3+0xb2e>
    213e:	b6 95       	lsr	r27
    2140:	a7 95       	ror	r26
    2142:	97 95       	ror	r25
    2144:	87 95       	ror	r24
    2146:	1a 95       	dec	r17
    2148:	d2 f7       	brpl	.-12     	; 0x213e <__moddi3+0xb26>
    214a:	7c 01       	movw	r14, r24
    214c:	8d 01       	movw	r16, r26
    214e:	e2 2a       	or	r14, r18
    2150:	f3 2a       	or	r15, r19
    2152:	04 2b       	or	r16, r20
    2154:	15 2b       	or	r17, r21
    2156:	e9 ae       	std	Y+57, r14	; 0x39
    2158:	fa ae       	std	Y+58, r15	; 0x3a
    215a:	0b af       	std	Y+59, r16	; 0x3b
    215c:	1c af       	std	Y+60, r17	; 0x3c
    215e:	e8 96       	adiw	r28, 0x38	; 56
    2160:	0c ad       	ldd	r16, Y+60	; 0x3c
    2162:	1d ad       	ldd	r17, Y+61	; 0x3d
    2164:	2e ad       	ldd	r18, Y+62	; 0x3e
    2166:	3f ad       	ldd	r19, Y+63	; 0x3f
    2168:	e8 97       	sbiw	r28, 0x38	; 56
    216a:	e3 96       	adiw	r28, 0x33	; 51
    216c:	0f ac       	ldd	r0, Y+63	; 0x3f
    216e:	e3 97       	sbiw	r28, 0x33	; 51
    2170:	04 c0       	rjmp	.+8      	; 0x217a <__moddi3+0xb62>
    2172:	00 0f       	add	r16, r16
    2174:	11 1f       	adc	r17, r17
    2176:	22 1f       	adc	r18, r18
    2178:	33 1f       	adc	r19, r19
    217a:	0a 94       	dec	r0
    217c:	d2 f7       	brpl	.-12     	; 0x2172 <__moddi3+0xb5a>
    217e:	0d ab       	std	Y+53, r16	; 0x35
    2180:	1e ab       	std	Y+54, r17	; 0x36
    2182:	2f ab       	std	Y+55, r18	; 0x37
    2184:	38 af       	std	Y+56, r19	; 0x38
    2186:	25 96       	adiw	r28, 0x05	; 5
    2188:	2c ad       	ldd	r18, Y+60	; 0x3c
    218a:	3d ad       	ldd	r19, Y+61	; 0x3d
    218c:	4e ad       	ldd	r20, Y+62	; 0x3e
    218e:	5f ad       	ldd	r21, Y+63	; 0x3f
    2190:	25 97       	sbiw	r28, 0x05	; 5
    2192:	3a 01       	movw	r6, r20
    2194:	88 24       	eor	r8, r8
    2196:	99 24       	eor	r9, r9
    2198:	40 70       	andi	r20, 0x00	; 0
    219a:	50 70       	andi	r21, 0x00	; 0
    219c:	a5 96       	adiw	r28, 0x25	; 37
    219e:	2c af       	std	Y+60, r18	; 0x3c
    21a0:	3d af       	std	Y+61, r19	; 0x3d
    21a2:	4e af       	std	Y+62, r20	; 0x3e
    21a4:	5f af       	std	Y+63, r21	; 0x3f
    21a6:	a5 97       	sbiw	r28, 0x25	; 37
    21a8:	c6 01       	movw	r24, r12
    21aa:	b5 01       	movw	r22, r10
    21ac:	a4 01       	movw	r20, r8
    21ae:	93 01       	movw	r18, r6
    21b0:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
    21b4:	7b 01       	movw	r14, r22
    21b6:	8c 01       	movw	r16, r24
    21b8:	c6 01       	movw	r24, r12
    21ba:	b5 01       	movw	r22, r10
    21bc:	a4 01       	movw	r20, r8
    21be:	93 01       	movw	r18, r6
    21c0:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
    21c4:	c9 01       	movw	r24, r18
    21c6:	da 01       	movw	r26, r20
    21c8:	1c 01       	movw	r2, r24
    21ca:	2d 01       	movw	r4, r26
    21cc:	c2 01       	movw	r24, r4
    21ce:	b1 01       	movw	r22, r2
    21d0:	a5 96       	adiw	r28, 0x25	; 37
    21d2:	2c ad       	ldd	r18, Y+60	; 0x3c
    21d4:	3d ad       	ldd	r19, Y+61	; 0x3d
    21d6:	4e ad       	ldd	r20, Y+62	; 0x3e
    21d8:	5f ad       	ldd	r21, Y+63	; 0x3f
    21da:	a5 97       	sbiw	r28, 0x25	; 37
    21dc:	0e 94 43 2e 	call	0x5c86	; 0x5c86 <__mulsi3>
    21e0:	9b 01       	movw	r18, r22
    21e2:	ac 01       	movw	r20, r24
    21e4:	87 01       	movw	r16, r14
    21e6:	ff 24       	eor	r15, r15
    21e8:	ee 24       	eor	r14, r14
    21ea:	a9 ac       	ldd	r10, Y+57	; 0x39
    21ec:	ba ac       	ldd	r11, Y+58	; 0x3a
    21ee:	cb ac       	ldd	r12, Y+59	; 0x3b
    21f0:	dc ac       	ldd	r13, Y+60	; 0x3c
    21f2:	c6 01       	movw	r24, r12
    21f4:	aa 27       	eor	r26, r26
    21f6:	bb 27       	eor	r27, r27
    21f8:	57 01       	movw	r10, r14
    21fa:	68 01       	movw	r12, r16
    21fc:	a8 2a       	or	r10, r24
    21fe:	b9 2a       	or	r11, r25
    2200:	ca 2a       	or	r12, r26
    2202:	db 2a       	or	r13, r27
    2204:	a2 16       	cp	r10, r18
    2206:	b3 06       	cpc	r11, r19
    2208:	c4 06       	cpc	r12, r20
    220a:	d5 06       	cpc	r13, r21
    220c:	10 f5       	brcc	.+68     	; 0x2252 <__moddi3+0xc3a>
    220e:	08 94       	sec
    2210:	21 08       	sbc	r2, r1
    2212:	31 08       	sbc	r3, r1
    2214:	41 08       	sbc	r4, r1
    2216:	51 08       	sbc	r5, r1
    2218:	25 96       	adiw	r28, 0x05	; 5
    221a:	ec ac       	ldd	r14, Y+60	; 0x3c
    221c:	fd ac       	ldd	r15, Y+61	; 0x3d
    221e:	0e ad       	ldd	r16, Y+62	; 0x3e
    2220:	1f ad       	ldd	r17, Y+63	; 0x3f
    2222:	25 97       	sbiw	r28, 0x05	; 5
    2224:	ae 0c       	add	r10, r14
    2226:	bf 1c       	adc	r11, r15
    2228:	c0 1e       	adc	r12, r16
    222a:	d1 1e       	adc	r13, r17
    222c:	ae 14       	cp	r10, r14
    222e:	bf 04       	cpc	r11, r15
    2230:	c0 06       	cpc	r12, r16
    2232:	d1 06       	cpc	r13, r17
    2234:	70 f0       	brcs	.+28     	; 0x2252 <__moddi3+0xc3a>
    2236:	a2 16       	cp	r10, r18
    2238:	b3 06       	cpc	r11, r19
    223a:	c4 06       	cpc	r12, r20
    223c:	d5 06       	cpc	r13, r21
    223e:	48 f4       	brcc	.+18     	; 0x2252 <__moddi3+0xc3a>
    2240:	08 94       	sec
    2242:	21 08       	sbc	r2, r1
    2244:	31 08       	sbc	r3, r1
    2246:	41 08       	sbc	r4, r1
    2248:	51 08       	sbc	r5, r1
    224a:	ae 0c       	add	r10, r14
    224c:	bf 1c       	adc	r11, r15
    224e:	c0 1e       	adc	r12, r16
    2250:	d1 1e       	adc	r13, r17
    2252:	a2 1a       	sub	r10, r18
    2254:	b3 0a       	sbc	r11, r19
    2256:	c4 0a       	sbc	r12, r20
    2258:	d5 0a       	sbc	r13, r21
    225a:	c6 01       	movw	r24, r12
    225c:	b5 01       	movw	r22, r10
    225e:	a4 01       	movw	r20, r8
    2260:	93 01       	movw	r18, r6
    2262:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
    2266:	7b 01       	movw	r14, r22
    2268:	8c 01       	movw	r16, r24
    226a:	c6 01       	movw	r24, r12
    226c:	b5 01       	movw	r22, r10
    226e:	a4 01       	movw	r20, r8
    2270:	93 01       	movw	r18, r6
    2272:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__udivmodsi4>
    2276:	c9 01       	movw	r24, r18
    2278:	da 01       	movw	r26, r20
    227a:	3c 01       	movw	r6, r24
    227c:	4d 01       	movw	r8, r26
    227e:	c4 01       	movw	r24, r8
    2280:	b3 01       	movw	r22, r6
    2282:	a5 96       	adiw	r28, 0x25	; 37
    2284:	2c ad       	ldd	r18, Y+60	; 0x3c
    2286:	3d ad       	ldd	r19, Y+61	; 0x3d
    2288:	4e ad       	ldd	r20, Y+62	; 0x3e
    228a:	5f ad       	ldd	r21, Y+63	; 0x3f
    228c:	a5 97       	sbiw	r28, 0x25	; 37
    228e:	0e 94 43 2e 	call	0x5c86	; 0x5c86 <__mulsi3>
    2292:	9b 01       	movw	r18, r22
    2294:	ac 01       	movw	r20, r24
    2296:	87 01       	movw	r16, r14
    2298:	ff 24       	eor	r15, r15
    229a:	ee 24       	eor	r14, r14
    229c:	89 ad       	ldd	r24, Y+57	; 0x39
    229e:	9a ad       	ldd	r25, Y+58	; 0x3a
    22a0:	ab ad       	ldd	r26, Y+59	; 0x3b
    22a2:	bc ad       	ldd	r27, Y+60	; 0x3c
    22a4:	a0 70       	andi	r26, 0x00	; 0
    22a6:	b0 70       	andi	r27, 0x00	; 0
    22a8:	57 01       	movw	r10, r14
    22aa:	68 01       	movw	r12, r16
    22ac:	a8 2a       	or	r10, r24
    22ae:	b9 2a       	or	r11, r25
    22b0:	ca 2a       	or	r12, r26
    22b2:	db 2a       	or	r13, r27
    22b4:	a2 16       	cp	r10, r18
    22b6:	b3 06       	cpc	r11, r19
    22b8:	c4 06       	cpc	r12, r20
    22ba:	d5 06       	cpc	r13, r21
    22bc:	10 f5       	brcc	.+68     	; 0x2302 <__moddi3+0xcea>
    22be:	08 94       	sec
    22c0:	61 08       	sbc	r6, r1
    22c2:	71 08       	sbc	r7, r1
    22c4:	81 08       	sbc	r8, r1
    22c6:	91 08       	sbc	r9, r1
    22c8:	25 96       	adiw	r28, 0x05	; 5
    22ca:	6c ad       	ldd	r22, Y+60	; 0x3c
    22cc:	7d ad       	ldd	r23, Y+61	; 0x3d
    22ce:	8e ad       	ldd	r24, Y+62	; 0x3e
    22d0:	9f ad       	ldd	r25, Y+63	; 0x3f
    22d2:	25 97       	sbiw	r28, 0x05	; 5
    22d4:	a6 0e       	add	r10, r22
    22d6:	b7 1e       	adc	r11, r23
    22d8:	c8 1e       	adc	r12, r24
    22da:	d9 1e       	adc	r13, r25
    22dc:	a6 16       	cp	r10, r22
    22de:	b7 06       	cpc	r11, r23
    22e0:	c8 06       	cpc	r12, r24
    22e2:	d9 06       	cpc	r13, r25
    22e4:	70 f0       	brcs	.+28     	; 0x2302 <__moddi3+0xcea>
    22e6:	a2 16       	cp	r10, r18
    22e8:	b3 06       	cpc	r11, r19
    22ea:	c4 06       	cpc	r12, r20
    22ec:	d5 06       	cpc	r13, r21
    22ee:	48 f4       	brcc	.+18     	; 0x2302 <__moddi3+0xcea>
    22f0:	08 94       	sec
    22f2:	61 08       	sbc	r6, r1
    22f4:	71 08       	sbc	r7, r1
    22f6:	81 08       	sbc	r8, r1
    22f8:	91 08       	sbc	r9, r1
    22fa:	a6 0e       	add	r10, r22
    22fc:	b7 1e       	adc	r11, r23
    22fe:	c8 1e       	adc	r12, r24
    2300:	d9 1e       	adc	r13, r25
    2302:	d6 01       	movw	r26, r12
    2304:	c5 01       	movw	r24, r10
    2306:	82 1b       	sub	r24, r18
    2308:	93 0b       	sbc	r25, r19
    230a:	a4 0b       	sbc	r26, r20
    230c:	b5 0b       	sbc	r27, r21
    230e:	89 ab       	std	Y+49, r24	; 0x31
    2310:	9a ab       	std	Y+50, r25	; 0x32
    2312:	ab ab       	std	Y+51, r26	; 0x33
    2314:	bc ab       	std	Y+52, r27	; 0x34
    2316:	d1 01       	movw	r26, r2
    2318:	99 27       	eor	r25, r25
    231a:	88 27       	eor	r24, r24
    231c:	84 01       	movw	r16, r8
    231e:	73 01       	movw	r14, r6
    2320:	e8 2a       	or	r14, r24
    2322:	f9 2a       	or	r15, r25
    2324:	0a 2b       	or	r16, r26
    2326:	1b 2b       	or	r17, r27
    2328:	8f ef       	ldi	r24, 0xFF	; 255
    232a:	a8 2e       	mov	r10, r24
    232c:	8f ef       	ldi	r24, 0xFF	; 255
    232e:	b8 2e       	mov	r11, r24
    2330:	c1 2c       	mov	r12, r1
    2332:	d1 2c       	mov	r13, r1
    2334:	ae 20       	and	r10, r14
    2336:	bf 20       	and	r11, r15
    2338:	c0 22       	and	r12, r16
    233a:	d1 22       	and	r13, r17
    233c:	78 01       	movw	r14, r16
    233e:	00 27       	eor	r16, r16
    2340:	11 27       	eor	r17, r17
    2342:	21 96       	adiw	r28, 0x01	; 1
    2344:	6c ac       	ldd	r6, Y+60	; 0x3c
    2346:	7d ac       	ldd	r7, Y+61	; 0x3d
    2348:	8e ac       	ldd	r8, Y+62	; 0x3e
    234a:	9f ac       	ldd	r9, Y+63	; 0x3f
    234c:	21 97       	sbiw	r28, 0x01	; 1
    234e:	2f ef       	ldi	r18, 0xFF	; 255
    2350:	3f ef       	ldi	r19, 0xFF	; 255
    2352:	40 e0       	ldi	r20, 0x00	; 0
    2354:	50 e0       	ldi	r21, 0x00	; 0
    2356:	62 22       	and	r6, r18
    2358:	73 22       	and	r7, r19
    235a:	84 22       	and	r8, r20
    235c:	95 22       	and	r9, r21
    235e:	21 96       	adiw	r28, 0x01	; 1
    2360:	6c ad       	ldd	r22, Y+60	; 0x3c
    2362:	7d ad       	ldd	r23, Y+61	; 0x3d
    2364:	8e ad       	ldd	r24, Y+62	; 0x3e
    2366:	9f ad       	ldd	r25, Y+63	; 0x3f
    2368:	21 97       	sbiw	r28, 0x01	; 1
    236a:	ac 01       	movw	r20, r24
    236c:	66 27       	eor	r22, r22
    236e:	77 27       	eor	r23, r23
    2370:	ad 96       	adiw	r28, 0x2d	; 45
    2372:	4c af       	std	Y+60, r20	; 0x3c
    2374:	5d af       	std	Y+61, r21	; 0x3d
    2376:	6e af       	std	Y+62, r22	; 0x3e
    2378:	7f af       	std	Y+63, r23	; 0x3f
    237a:	ad 97       	sbiw	r28, 0x2d	; 45
    237c:	c6 01       	movw	r24, r12
    237e:	b5 01       	movw	r22, r10
    2380:	a4 01       	movw	r20, r8
    2382:	93 01       	movw	r18, r6
    2384:	0e 94 43 2e 	call	0x5c86	; 0x5c86 <__mulsi3>
    2388:	a9 96       	adiw	r28, 0x29	; 41
    238a:	6c af       	std	Y+60, r22	; 0x3c
    238c:	7d af       	std	Y+61, r23	; 0x3d
    238e:	8e af       	std	Y+62, r24	; 0x3e
    2390:	9f af       	std	Y+63, r25	; 0x3f
    2392:	a9 97       	sbiw	r28, 0x29	; 41
    2394:	c6 01       	movw	r24, r12
    2396:	b5 01       	movw	r22, r10
    2398:	ad 96       	adiw	r28, 0x2d	; 45
    239a:	2c ad       	ldd	r18, Y+60	; 0x3c
    239c:	3d ad       	ldd	r19, Y+61	; 0x3d
    239e:	4e ad       	ldd	r20, Y+62	; 0x3e
    23a0:	5f ad       	ldd	r21, Y+63	; 0x3f
    23a2:	ad 97       	sbiw	r28, 0x2d	; 45
    23a4:	0e 94 43 2e 	call	0x5c86	; 0x5c86 <__mulsi3>
    23a8:	1b 01       	movw	r2, r22
    23aa:	2c 01       	movw	r4, r24
    23ac:	c8 01       	movw	r24, r16
    23ae:	b7 01       	movw	r22, r14
    23b0:	a4 01       	movw	r20, r8
    23b2:	93 01       	movw	r18, r6
    23b4:	0e 94 43 2e 	call	0x5c86	; 0x5c86 <__mulsi3>
    23b8:	5b 01       	movw	r10, r22
    23ba:	6c 01       	movw	r12, r24
    23bc:	c8 01       	movw	r24, r16
    23be:	b7 01       	movw	r22, r14
    23c0:	ad 96       	adiw	r28, 0x2d	; 45
    23c2:	2c ad       	ldd	r18, Y+60	; 0x3c
    23c4:	3d ad       	ldd	r19, Y+61	; 0x3d
    23c6:	4e ad       	ldd	r20, Y+62	; 0x3e
    23c8:	5f ad       	ldd	r21, Y+63	; 0x3f
    23ca:	ad 97       	sbiw	r28, 0x2d	; 45
    23cc:	0e 94 43 2e 	call	0x5c86	; 0x5c86 <__mulsi3>
    23d0:	7b 01       	movw	r14, r22
    23d2:	8c 01       	movw	r16, r24
    23d4:	a6 01       	movw	r20, r12
    23d6:	95 01       	movw	r18, r10
    23d8:	22 0d       	add	r18, r2
    23da:	33 1d       	adc	r19, r3
    23dc:	44 1d       	adc	r20, r4
    23de:	55 1d       	adc	r21, r5
    23e0:	a9 96       	adiw	r28, 0x29	; 41
    23e2:	6c ac       	ldd	r6, Y+60	; 0x3c
    23e4:	7d ac       	ldd	r7, Y+61	; 0x3d
    23e6:	8e ac       	ldd	r8, Y+62	; 0x3e
    23e8:	9f ac       	ldd	r9, Y+63	; 0x3f
    23ea:	a9 97       	sbiw	r28, 0x29	; 41
    23ec:	c4 01       	movw	r24, r8
    23ee:	aa 27       	eor	r26, r26
    23f0:	bb 27       	eor	r27, r27
    23f2:	28 0f       	add	r18, r24
    23f4:	39 1f       	adc	r19, r25
    23f6:	4a 1f       	adc	r20, r26
    23f8:	5b 1f       	adc	r21, r27
    23fa:	2a 15       	cp	r18, r10
    23fc:	3b 05       	cpc	r19, r11
    23fe:	4c 05       	cpc	r20, r12
    2400:	5d 05       	cpc	r21, r13
    2402:	48 f4       	brcc	.+18     	; 0x2416 <__moddi3+0xdfe>
    2404:	81 2c       	mov	r8, r1
    2406:	91 2c       	mov	r9, r1
    2408:	e1 e0       	ldi	r30, 0x01	; 1
    240a:	ae 2e       	mov	r10, r30
    240c:	b1 2c       	mov	r11, r1
    240e:	e8 0c       	add	r14, r8
    2410:	f9 1c       	adc	r15, r9
    2412:	0a 1d       	adc	r16, r10
    2414:	1b 1d       	adc	r17, r11
    2416:	ca 01       	movw	r24, r20
    2418:	aa 27       	eor	r26, r26
    241a:	bb 27       	eor	r27, r27
    241c:	57 01       	movw	r10, r14
    241e:	68 01       	movw	r12, r16
    2420:	a8 0e       	add	r10, r24
    2422:	b9 1e       	adc	r11, r25
    2424:	ca 1e       	adc	r12, r26
    2426:	db 1e       	adc	r13, r27
    2428:	a9 01       	movw	r20, r18
    242a:	33 27       	eor	r19, r19
    242c:	22 27       	eor	r18, r18
    242e:	a9 96       	adiw	r28, 0x29	; 41
    2430:	8c ad       	ldd	r24, Y+60	; 0x3c
    2432:	9d ad       	ldd	r25, Y+61	; 0x3d
    2434:	ae ad       	ldd	r26, Y+62	; 0x3e
    2436:	bf ad       	ldd	r27, Y+63	; 0x3f
    2438:	a9 97       	sbiw	r28, 0x29	; 41
    243a:	a0 70       	andi	r26, 0x00	; 0
    243c:	b0 70       	andi	r27, 0x00	; 0
    243e:	28 0f       	add	r18, r24
    2440:	39 1f       	adc	r19, r25
    2442:	4a 1f       	adc	r20, r26
    2444:	5b 1f       	adc	r21, r27
    2446:	e9 a8       	ldd	r14, Y+49	; 0x31
    2448:	fa a8       	ldd	r15, Y+50	; 0x32
    244a:	0b a9       	ldd	r16, Y+51	; 0x33
    244c:	1c a9       	ldd	r17, Y+52	; 0x34
    244e:	ea 14       	cp	r14, r10
    2450:	fb 04       	cpc	r15, r11
    2452:	0c 05       	cpc	r16, r12
    2454:	1d 05       	cpc	r17, r13
    2456:	70 f0       	brcs	.+28     	; 0x2474 <__moddi3+0xe5c>
    2458:	ae 14       	cp	r10, r14
    245a:	bf 04       	cpc	r11, r15
    245c:	c0 06       	cpc	r12, r16
    245e:	d1 06       	cpc	r13, r17
    2460:	89 f5       	brne	.+98     	; 0x24c4 <__moddi3+0xeac>
    2462:	6d a9       	ldd	r22, Y+53	; 0x35
    2464:	7e a9       	ldd	r23, Y+54	; 0x36
    2466:	8f a9       	ldd	r24, Y+55	; 0x37
    2468:	98 ad       	ldd	r25, Y+56	; 0x38
    246a:	62 17       	cp	r22, r18
    246c:	73 07       	cpc	r23, r19
    246e:	84 07       	cpc	r24, r20
    2470:	95 07       	cpc	r25, r21
    2472:	40 f5       	brcc	.+80     	; 0x24c4 <__moddi3+0xeac>
    2474:	da 01       	movw	r26, r20
    2476:	c9 01       	movw	r24, r18
    2478:	21 96       	adiw	r28, 0x01	; 1
    247a:	6c ac       	ldd	r6, Y+60	; 0x3c
    247c:	7d ac       	ldd	r7, Y+61	; 0x3d
    247e:	8e ac       	ldd	r8, Y+62	; 0x3e
    2480:	9f ac       	ldd	r9, Y+63	; 0x3f
    2482:	21 97       	sbiw	r28, 0x01	; 1
    2484:	86 19       	sub	r24, r6
    2486:	97 09       	sbc	r25, r7
    2488:	a8 09       	sbc	r26, r8
    248a:	b9 09       	sbc	r27, r9
    248c:	25 96       	adiw	r28, 0x05	; 5
    248e:	ec ac       	ldd	r14, Y+60	; 0x3c
    2490:	fd ac       	ldd	r15, Y+61	; 0x3d
    2492:	0e ad       	ldd	r16, Y+62	; 0x3e
    2494:	1f ad       	ldd	r17, Y+63	; 0x3f
    2496:	25 97       	sbiw	r28, 0x05	; 5
    2498:	ae 18       	sub	r10, r14
    249a:	bf 08       	sbc	r11, r15
    249c:	c0 0a       	sbc	r12, r16
    249e:	d1 0a       	sbc	r13, r17
    24a0:	ee 24       	eor	r14, r14
    24a2:	ff 24       	eor	r15, r15
    24a4:	87 01       	movw	r16, r14
    24a6:	28 17       	cp	r18, r24
    24a8:	39 07       	cpc	r19, r25
    24aa:	4a 07       	cpc	r20, r26
    24ac:	5b 07       	cpc	r21, r27
    24ae:	28 f4       	brcc	.+10     	; 0x24ba <__moddi3+0xea2>
    24b0:	21 e0       	ldi	r18, 0x01	; 1
    24b2:	e2 2e       	mov	r14, r18
    24b4:	f1 2c       	mov	r15, r1
    24b6:	01 2d       	mov	r16, r1
    24b8:	11 2d       	mov	r17, r1
    24ba:	ae 18       	sub	r10, r14
    24bc:	bf 08       	sbc	r11, r15
    24be:	c0 0a       	sbc	r12, r16
    24c0:	d1 0a       	sbc	r13, r17
    24c2:	02 c0       	rjmp	.+4      	; 0x24c8 <__moddi3+0xeb0>
    24c4:	da 01       	movw	r26, r20
    24c6:	c9 01       	movw	r24, r18
    24c8:	6d a8       	ldd	r6, Y+53	; 0x35
    24ca:	7e a8       	ldd	r7, Y+54	; 0x36
    24cc:	8f a8       	ldd	r8, Y+55	; 0x37
    24ce:	98 ac       	ldd	r9, Y+56	; 0x38
    24d0:	68 1a       	sub	r6, r24
    24d2:	79 0a       	sbc	r7, r25
    24d4:	8a 0a       	sbc	r8, r26
    24d6:	9b 0a       	sbc	r9, r27
    24d8:	09 a9       	ldd	r16, Y+49	; 0x31
    24da:	1a a9       	ldd	r17, Y+50	; 0x32
    24dc:	2b a9       	ldd	r18, Y+51	; 0x33
    24de:	3c a9       	ldd	r19, Y+52	; 0x34
    24e0:	0a 19       	sub	r16, r10
    24e2:	1b 09       	sbc	r17, r11
    24e4:	2c 09       	sbc	r18, r12
    24e6:	3d 09       	sbc	r19, r13
    24e8:	58 01       	movw	r10, r16
    24ea:	69 01       	movw	r12, r18
    24ec:	22 24       	eor	r2, r2
    24ee:	33 24       	eor	r3, r3
    24f0:	21 01       	movw	r4, r2
    24f2:	2d a9       	ldd	r18, Y+53	; 0x35
    24f4:	3e a9       	ldd	r19, Y+54	; 0x36
    24f6:	4f a9       	ldd	r20, Y+55	; 0x37
    24f8:	58 ad       	ldd	r21, Y+56	; 0x38
    24fa:	26 15       	cp	r18, r6
    24fc:	37 05       	cpc	r19, r7
    24fe:	48 05       	cpc	r20, r8
    2500:	59 05       	cpc	r21, r9
    2502:	28 f4       	brcc	.+10     	; 0x250e <__moddi3+0xef6>
    2504:	81 e0       	ldi	r24, 0x01	; 1
    2506:	28 2e       	mov	r2, r24
    2508:	31 2c       	mov	r3, r1
    250a:	41 2c       	mov	r4, r1
    250c:	51 2c       	mov	r5, r1
    250e:	86 01       	movw	r16, r12
    2510:	75 01       	movw	r14, r10
    2512:	e2 18       	sub	r14, r2
    2514:	f3 08       	sbc	r15, r3
    2516:	04 09       	sbc	r16, r4
    2518:	15 09       	sbc	r17, r5
    251a:	a8 01       	movw	r20, r16
    251c:	97 01       	movw	r18, r14
    251e:	e2 96       	adiw	r28, 0x32	; 50
    2520:	0f ac       	ldd	r0, Y+63	; 0x3f
    2522:	e2 97       	sbiw	r28, 0x32	; 50
    2524:	04 c0       	rjmp	.+8      	; 0x252e <__moddi3+0xf16>
    2526:	22 0f       	add	r18, r18
    2528:	33 1f       	adc	r19, r19
    252a:	44 1f       	adc	r20, r20
    252c:	55 1f       	adc	r21, r21
    252e:	0a 94       	dec	r0
    2530:	d2 f7       	brpl	.-12     	; 0x2526 <__moddi3+0xf0e>
    2532:	d4 01       	movw	r26, r8
    2534:	c3 01       	movw	r24, r6
    2536:	e3 96       	adiw	r28, 0x33	; 51
    2538:	0f ac       	ldd	r0, Y+63	; 0x3f
    253a:	e3 97       	sbiw	r28, 0x33	; 51
    253c:	04 c0       	rjmp	.+8      	; 0x2546 <__moddi3+0xf2e>
    253e:	b6 95       	lsr	r27
    2540:	a7 95       	ror	r26
    2542:	97 95       	ror	r25
    2544:	87 95       	ror	r24
    2546:	0a 94       	dec	r0
    2548:	d2 f7       	brpl	.-12     	; 0x253e <__moddi3+0xf26>
    254a:	28 2b       	or	r18, r24
    254c:	39 2b       	or	r19, r25
    254e:	4a 2b       	or	r20, r26
    2550:	5b 2b       	or	r21, r27
    2552:	29 a7       	std	Y+41, r18	; 0x29
    2554:	3a a7       	std	Y+42, r19	; 0x2a
    2556:	4b a7       	std	Y+43, r20	; 0x2b
    2558:	5c a7       	std	Y+44, r21	; 0x2c
    255a:	e3 96       	adiw	r28, 0x33	; 51
    255c:	0f ac       	ldd	r0, Y+63	; 0x3f
    255e:	e3 97       	sbiw	r28, 0x33	; 51
    2560:	04 c0       	rjmp	.+8      	; 0x256a <__moddi3+0xf52>
    2562:	16 95       	lsr	r17
    2564:	07 95       	ror	r16
    2566:	f7 94       	ror	r15
    2568:	e7 94       	ror	r14
    256a:	0a 94       	dec	r0
    256c:	d2 f7       	brpl	.-12     	; 0x2562 <__moddi3+0xf4a>
    256e:	ed a6       	std	Y+45, r14	; 0x2d
    2570:	fe a6       	std	Y+46, r15	; 0x2e
    2572:	0f a7       	std	Y+47, r16	; 0x2f
    2574:	18 ab       	std	Y+48, r17	; 0x30
    2576:	29 8b       	std	Y+17, r18	; 0x11
    2578:	8a a5       	ldd	r24, Y+42	; 0x2a
    257a:	8a 8b       	std	Y+18, r24	; 0x12
    257c:	8b a5       	ldd	r24, Y+43	; 0x2b
    257e:	8b 8b       	std	Y+19, r24	; 0x13
    2580:	8c a5       	ldd	r24, Y+44	; 0x2c
    2582:	8c 8b       	std	Y+20, r24	; 0x14
    2584:	ed 8a       	std	Y+21, r14	; 0x15
    2586:	8e a5       	ldd	r24, Y+46	; 0x2e
    2588:	8e 8b       	std	Y+22, r24	; 0x16
    258a:	8f a5       	ldd	r24, Y+47	; 0x2f
    258c:	8f 8b       	std	Y+23, r24	; 0x17
    258e:	88 a9       	ldd	r24, Y+48	; 0x30
    2590:	88 8f       	std	Y+24, r24	; 0x18
    2592:	e1 96       	adiw	r28, 0x31	; 49
    2594:	4c ad       	ldd	r20, Y+60	; 0x3c
    2596:	5d ad       	ldd	r21, Y+61	; 0x3d
    2598:	6e ad       	ldd	r22, Y+62	; 0x3e
    259a:	7f ad       	ldd	r23, Y+63	; 0x3f
    259c:	e1 97       	sbiw	r28, 0x31	; 49
    259e:	41 15       	cp	r20, r1
    25a0:	51 05       	cpc	r21, r1
    25a2:	61 05       	cpc	r22, r1
    25a4:	71 05       	cpc	r23, r1
    25a6:	09 f4       	brne	.+2      	; 0x25aa <__moddi3+0xf92>
    25a8:	67 c0       	rjmp	.+206    	; 0x2678 <__moddi3+0x1060>
    25aa:	89 89       	ldd	r24, Y+17	; 0x11
    25ac:	2a 89       	ldd	r18, Y+18	; 0x12
    25ae:	3b 89       	ldd	r19, Y+19	; 0x13
    25b0:	4c 89       	ldd	r20, Y+20	; 0x14
    25b2:	5d 89       	ldd	r21, Y+21	; 0x15
    25b4:	ae 89       	ldd	r26, Y+22	; 0x16
    25b6:	bf 89       	ldd	r27, Y+23	; 0x17
    25b8:	18 8d       	ldd	r17, Y+24	; 0x18
    25ba:	f8 2f       	mov	r31, r24
    25bc:	f1 95       	neg	r31
    25be:	91 e0       	ldi	r25, 0x01	; 1
    25c0:	1f 16       	cp	r1, r31
    25c2:	08 f0       	brcs	.+2      	; 0x25c6 <__moddi3+0xfae>
    25c4:	90 e0       	ldi	r25, 0x00	; 0
    25c6:	82 2f       	mov	r24, r18
    25c8:	81 95       	neg	r24
    25ca:	21 e0       	ldi	r18, 0x01	; 1
    25cc:	18 16       	cp	r1, r24
    25ce:	08 f0       	brcs	.+2      	; 0x25d2 <__moddi3+0xfba>
    25d0:	20 e0       	ldi	r18, 0x00	; 0
    25d2:	e8 2f       	mov	r30, r24
    25d4:	e9 1b       	sub	r30, r25
    25d6:	91 e0       	ldi	r25, 0x01	; 1
    25d8:	8e 17       	cp	r24, r30
    25da:	08 f0       	brcs	.+2      	; 0x25de <__moddi3+0xfc6>
    25dc:	90 e0       	ldi	r25, 0x00	; 0
    25de:	29 2b       	or	r18, r25
    25e0:	83 2f       	mov	r24, r19
    25e2:	81 95       	neg	r24
    25e4:	31 e0       	ldi	r19, 0x01	; 1
    25e6:	18 16       	cp	r1, r24
    25e8:	08 f0       	brcs	.+2      	; 0x25ec <__moddi3+0xfd4>
    25ea:	30 e0       	ldi	r19, 0x00	; 0
    25ec:	78 2f       	mov	r23, r24
    25ee:	72 1b       	sub	r23, r18
    25f0:	91 e0       	ldi	r25, 0x01	; 1
    25f2:	87 17       	cp	r24, r23
    25f4:	08 f0       	brcs	.+2      	; 0x25f8 <__moddi3+0xfe0>
    25f6:	90 e0       	ldi	r25, 0x00	; 0
    25f8:	39 2b       	or	r19, r25
    25fa:	84 2f       	mov	r24, r20
    25fc:	81 95       	neg	r24
    25fe:	21 e0       	ldi	r18, 0x01	; 1
    2600:	18 16       	cp	r1, r24
    2602:	08 f0       	brcs	.+2      	; 0x2606 <__moddi3+0xfee>
    2604:	20 e0       	ldi	r18, 0x00	; 0
    2606:	68 2f       	mov	r22, r24
    2608:	63 1b       	sub	r22, r19
    260a:	91 e0       	ldi	r25, 0x01	; 1
    260c:	86 17       	cp	r24, r22
    260e:	08 f0       	brcs	.+2      	; 0x2612 <__moddi3+0xffa>
    2610:	90 e0       	ldi	r25, 0x00	; 0
    2612:	29 2b       	or	r18, r25
    2614:	85 2f       	mov	r24, r21
    2616:	81 95       	neg	r24
    2618:	31 e0       	ldi	r19, 0x01	; 1
    261a:	18 16       	cp	r1, r24
    261c:	08 f0       	brcs	.+2      	; 0x2620 <__moddi3+0x1008>
    261e:	30 e0       	ldi	r19, 0x00	; 0
    2620:	58 2f       	mov	r21, r24
    2622:	52 1b       	sub	r21, r18
    2624:	91 e0       	ldi	r25, 0x01	; 1
    2626:	85 17       	cp	r24, r21
    2628:	08 f0       	brcs	.+2      	; 0x262c <__moddi3+0x1014>
    262a:	90 e0       	ldi	r25, 0x00	; 0
    262c:	39 2b       	or	r19, r25
    262e:	8a 2f       	mov	r24, r26
    2630:	81 95       	neg	r24
    2632:	21 e0       	ldi	r18, 0x01	; 1
    2634:	18 16       	cp	r1, r24
    2636:	08 f0       	brcs	.+2      	; 0x263a <__moddi3+0x1022>
    2638:	20 e0       	ldi	r18, 0x00	; 0
    263a:	48 2f       	mov	r20, r24
    263c:	43 1b       	sub	r20, r19
    263e:	91 e0       	ldi	r25, 0x01	; 1
    2640:	84 17       	cp	r24, r20
    2642:	08 f0       	brcs	.+2      	; 0x2646 <__moddi3+0x102e>
    2644:	90 e0       	ldi	r25, 0x00	; 0
    2646:	29 2b       	or	r18, r25
    2648:	8b 2f       	mov	r24, r27
    264a:	81 95       	neg	r24
    264c:	91 e0       	ldi	r25, 0x01	; 1
    264e:	18 16       	cp	r1, r24
    2650:	08 f0       	brcs	.+2      	; 0x2654 <__moddi3+0x103c>
    2652:	90 e0       	ldi	r25, 0x00	; 0
    2654:	38 2f       	mov	r19, r24
    2656:	32 1b       	sub	r19, r18
    2658:	21 e0       	ldi	r18, 0x01	; 1
    265a:	83 17       	cp	r24, r19
    265c:	08 f0       	brcs	.+2      	; 0x2660 <__moddi3+0x1048>
    265e:	20 e0       	ldi	r18, 0x00	; 0
    2660:	92 2b       	or	r25, r18
    2662:	81 2f       	mov	r24, r17
    2664:	81 95       	neg	r24
    2666:	89 1b       	sub	r24, r25
    2668:	f9 8b       	std	Y+17, r31	; 0x11
    266a:	ea 8b       	std	Y+18, r30	; 0x12
    266c:	7b 8b       	std	Y+19, r23	; 0x13
    266e:	6c 8b       	std	Y+20, r22	; 0x14
    2670:	5d 8b       	std	Y+21, r21	; 0x15
    2672:	4e 8b       	std	Y+22, r20	; 0x16
    2674:	3f 8b       	std	Y+23, r19	; 0x17
    2676:	88 8f       	std	Y+24, r24	; 0x18
    2678:	29 89       	ldd	r18, Y+17	; 0x11
    267a:	3a 89       	ldd	r19, Y+18	; 0x12
    267c:	4b 89       	ldd	r20, Y+19	; 0x13
    267e:	5c 89       	ldd	r21, Y+20	; 0x14
    2680:	6d 89       	ldd	r22, Y+21	; 0x15
    2682:	7e 89       	ldd	r23, Y+22	; 0x16
    2684:	8f 89       	ldd	r24, Y+23	; 0x17
    2686:	98 8d       	ldd	r25, Y+24	; 0x18
    2688:	c9 58       	subi	r28, 0x89	; 137
    268a:	df 4f       	sbci	r29, 0xFF	; 255
    268c:	e2 e1       	ldi	r30, 0x12	; 18
    268e:	0c 94 a0 2e 	jmp	0x5d40	; 0x5d40 <__epilogue_restores__>

00002692 <_fpadd_parts>:
    2692:	a0 e0       	ldi	r26, 0x00	; 0
    2694:	b0 e0       	ldi	r27, 0x00	; 0
    2696:	ef e4       	ldi	r30, 0x4F	; 79
    2698:	f3 e1       	ldi	r31, 0x13	; 19
    269a:	0c 94 84 2e 	jmp	0x5d08	; 0x5d08 <__prologue_saves__>
    269e:	dc 01       	movw	r26, r24
    26a0:	2b 01       	movw	r4, r22
    26a2:	fa 01       	movw	r30, r20
    26a4:	9c 91       	ld	r25, X
    26a6:	92 30       	cpi	r25, 0x02	; 2
    26a8:	08 f4       	brcc	.+2      	; 0x26ac <_fpadd_parts+0x1a>
    26aa:	39 c1       	rjmp	.+626    	; 0x291e <_fpadd_parts+0x28c>
    26ac:	eb 01       	movw	r28, r22
    26ae:	88 81       	ld	r24, Y
    26b0:	82 30       	cpi	r24, 0x02	; 2
    26b2:	08 f4       	brcc	.+2      	; 0x26b6 <_fpadd_parts+0x24>
    26b4:	33 c1       	rjmp	.+614    	; 0x291c <_fpadd_parts+0x28a>
    26b6:	94 30       	cpi	r25, 0x04	; 4
    26b8:	69 f4       	brne	.+26     	; 0x26d4 <_fpadd_parts+0x42>
    26ba:	84 30       	cpi	r24, 0x04	; 4
    26bc:	09 f0       	breq	.+2      	; 0x26c0 <_fpadd_parts+0x2e>
    26be:	2f c1       	rjmp	.+606    	; 0x291e <_fpadd_parts+0x28c>
    26c0:	11 96       	adiw	r26, 0x01	; 1
    26c2:	9c 91       	ld	r25, X
    26c4:	11 97       	sbiw	r26, 0x01	; 1
    26c6:	89 81       	ldd	r24, Y+1	; 0x01
    26c8:	98 17       	cp	r25, r24
    26ca:	09 f4       	brne	.+2      	; 0x26ce <_fpadd_parts+0x3c>
    26cc:	28 c1       	rjmp	.+592    	; 0x291e <_fpadd_parts+0x28c>
    26ce:	a6 e6       	ldi	r26, 0x66	; 102
    26d0:	b0 e0       	ldi	r27, 0x00	; 0
    26d2:	25 c1       	rjmp	.+586    	; 0x291e <_fpadd_parts+0x28c>
    26d4:	84 30       	cpi	r24, 0x04	; 4
    26d6:	09 f4       	brne	.+2      	; 0x26da <_fpadd_parts+0x48>
    26d8:	21 c1       	rjmp	.+578    	; 0x291c <_fpadd_parts+0x28a>
    26da:	82 30       	cpi	r24, 0x02	; 2
    26dc:	a9 f4       	brne	.+42     	; 0x2708 <_fpadd_parts+0x76>
    26de:	92 30       	cpi	r25, 0x02	; 2
    26e0:	09 f0       	breq	.+2      	; 0x26e4 <_fpadd_parts+0x52>
    26e2:	1d c1       	rjmp	.+570    	; 0x291e <_fpadd_parts+0x28c>
    26e4:	9a 01       	movw	r18, r20
    26e6:	ad 01       	movw	r20, r26
    26e8:	88 e0       	ldi	r24, 0x08	; 8
    26ea:	ea 01       	movw	r28, r20
    26ec:	09 90       	ld	r0, Y+
    26ee:	ae 01       	movw	r20, r28
    26f0:	e9 01       	movw	r28, r18
    26f2:	09 92       	st	Y+, r0
    26f4:	9e 01       	movw	r18, r28
    26f6:	81 50       	subi	r24, 0x01	; 1
    26f8:	c1 f7       	brne	.-16     	; 0x26ea <_fpadd_parts+0x58>
    26fa:	e2 01       	movw	r28, r4
    26fc:	89 81       	ldd	r24, Y+1	; 0x01
    26fe:	11 96       	adiw	r26, 0x01	; 1
    2700:	9c 91       	ld	r25, X
    2702:	89 23       	and	r24, r25
    2704:	81 83       	std	Z+1, r24	; 0x01
    2706:	08 c1       	rjmp	.+528    	; 0x2918 <_fpadd_parts+0x286>
    2708:	92 30       	cpi	r25, 0x02	; 2
    270a:	09 f4       	brne	.+2      	; 0x270e <_fpadd_parts+0x7c>
    270c:	07 c1       	rjmp	.+526    	; 0x291c <_fpadd_parts+0x28a>
    270e:	12 96       	adiw	r26, 0x02	; 2
    2710:	2d 90       	ld	r2, X+
    2712:	3c 90       	ld	r3, X
    2714:	13 97       	sbiw	r26, 0x03	; 3
    2716:	eb 01       	movw	r28, r22
    2718:	8a 81       	ldd	r24, Y+2	; 0x02
    271a:	9b 81       	ldd	r25, Y+3	; 0x03
    271c:	14 96       	adiw	r26, 0x04	; 4
    271e:	ad 90       	ld	r10, X+
    2720:	bd 90       	ld	r11, X+
    2722:	cd 90       	ld	r12, X+
    2724:	dc 90       	ld	r13, X
    2726:	17 97       	sbiw	r26, 0x07	; 7
    2728:	ec 80       	ldd	r14, Y+4	; 0x04
    272a:	fd 80       	ldd	r15, Y+5	; 0x05
    272c:	0e 81       	ldd	r16, Y+6	; 0x06
    272e:	1f 81       	ldd	r17, Y+7	; 0x07
    2730:	91 01       	movw	r18, r2
    2732:	28 1b       	sub	r18, r24
    2734:	39 0b       	sbc	r19, r25
    2736:	b9 01       	movw	r22, r18
    2738:	37 ff       	sbrs	r19, 7
    273a:	04 c0       	rjmp	.+8      	; 0x2744 <_fpadd_parts+0xb2>
    273c:	66 27       	eor	r22, r22
    273e:	77 27       	eor	r23, r23
    2740:	62 1b       	sub	r22, r18
    2742:	73 0b       	sbc	r23, r19
    2744:	60 32       	cpi	r22, 0x20	; 32
    2746:	71 05       	cpc	r23, r1
    2748:	0c f0       	brlt	.+2      	; 0x274c <_fpadd_parts+0xba>
    274a:	61 c0       	rjmp	.+194    	; 0x280e <_fpadd_parts+0x17c>
    274c:	12 16       	cp	r1, r18
    274e:	13 06       	cpc	r1, r19
    2750:	6c f5       	brge	.+90     	; 0x27ac <_fpadd_parts+0x11a>
    2752:	37 01       	movw	r6, r14
    2754:	48 01       	movw	r8, r16
    2756:	06 2e       	mov	r0, r22
    2758:	04 c0       	rjmp	.+8      	; 0x2762 <_fpadd_parts+0xd0>
    275a:	96 94       	lsr	r9
    275c:	87 94       	ror	r8
    275e:	77 94       	ror	r7
    2760:	67 94       	ror	r6
    2762:	0a 94       	dec	r0
    2764:	d2 f7       	brpl	.-12     	; 0x275a <_fpadd_parts+0xc8>
    2766:	21 e0       	ldi	r18, 0x01	; 1
    2768:	30 e0       	ldi	r19, 0x00	; 0
    276a:	40 e0       	ldi	r20, 0x00	; 0
    276c:	50 e0       	ldi	r21, 0x00	; 0
    276e:	04 c0       	rjmp	.+8      	; 0x2778 <_fpadd_parts+0xe6>
    2770:	22 0f       	add	r18, r18
    2772:	33 1f       	adc	r19, r19
    2774:	44 1f       	adc	r20, r20
    2776:	55 1f       	adc	r21, r21
    2778:	6a 95       	dec	r22
    277a:	d2 f7       	brpl	.-12     	; 0x2770 <_fpadd_parts+0xde>
    277c:	21 50       	subi	r18, 0x01	; 1
    277e:	30 40       	sbci	r19, 0x00	; 0
    2780:	40 40       	sbci	r20, 0x00	; 0
    2782:	50 40       	sbci	r21, 0x00	; 0
    2784:	2e 21       	and	r18, r14
    2786:	3f 21       	and	r19, r15
    2788:	40 23       	and	r20, r16
    278a:	51 23       	and	r21, r17
    278c:	21 15       	cp	r18, r1
    278e:	31 05       	cpc	r19, r1
    2790:	41 05       	cpc	r20, r1
    2792:	51 05       	cpc	r21, r1
    2794:	21 f0       	breq	.+8      	; 0x279e <_fpadd_parts+0x10c>
    2796:	21 e0       	ldi	r18, 0x01	; 1
    2798:	30 e0       	ldi	r19, 0x00	; 0
    279a:	40 e0       	ldi	r20, 0x00	; 0
    279c:	50 e0       	ldi	r21, 0x00	; 0
    279e:	79 01       	movw	r14, r18
    27a0:	8a 01       	movw	r16, r20
    27a2:	e6 28       	or	r14, r6
    27a4:	f7 28       	or	r15, r7
    27a6:	08 29       	or	r16, r8
    27a8:	19 29       	or	r17, r9
    27aa:	3c c0       	rjmp	.+120    	; 0x2824 <_fpadd_parts+0x192>
    27ac:	23 2b       	or	r18, r19
    27ae:	d1 f1       	breq	.+116    	; 0x2824 <_fpadd_parts+0x192>
    27b0:	26 0e       	add	r2, r22
    27b2:	37 1e       	adc	r3, r23
    27b4:	35 01       	movw	r6, r10
    27b6:	46 01       	movw	r8, r12
    27b8:	06 2e       	mov	r0, r22
    27ba:	04 c0       	rjmp	.+8      	; 0x27c4 <_fpadd_parts+0x132>
    27bc:	96 94       	lsr	r9
    27be:	87 94       	ror	r8
    27c0:	77 94       	ror	r7
    27c2:	67 94       	ror	r6
    27c4:	0a 94       	dec	r0
    27c6:	d2 f7       	brpl	.-12     	; 0x27bc <_fpadd_parts+0x12a>
    27c8:	21 e0       	ldi	r18, 0x01	; 1
    27ca:	30 e0       	ldi	r19, 0x00	; 0
    27cc:	40 e0       	ldi	r20, 0x00	; 0
    27ce:	50 e0       	ldi	r21, 0x00	; 0
    27d0:	04 c0       	rjmp	.+8      	; 0x27da <_fpadd_parts+0x148>
    27d2:	22 0f       	add	r18, r18
    27d4:	33 1f       	adc	r19, r19
    27d6:	44 1f       	adc	r20, r20
    27d8:	55 1f       	adc	r21, r21
    27da:	6a 95       	dec	r22
    27dc:	d2 f7       	brpl	.-12     	; 0x27d2 <_fpadd_parts+0x140>
    27de:	21 50       	subi	r18, 0x01	; 1
    27e0:	30 40       	sbci	r19, 0x00	; 0
    27e2:	40 40       	sbci	r20, 0x00	; 0
    27e4:	50 40       	sbci	r21, 0x00	; 0
    27e6:	2a 21       	and	r18, r10
    27e8:	3b 21       	and	r19, r11
    27ea:	4c 21       	and	r20, r12
    27ec:	5d 21       	and	r21, r13
    27ee:	21 15       	cp	r18, r1
    27f0:	31 05       	cpc	r19, r1
    27f2:	41 05       	cpc	r20, r1
    27f4:	51 05       	cpc	r21, r1
    27f6:	21 f0       	breq	.+8      	; 0x2800 <_fpadd_parts+0x16e>
    27f8:	21 e0       	ldi	r18, 0x01	; 1
    27fa:	30 e0       	ldi	r19, 0x00	; 0
    27fc:	40 e0       	ldi	r20, 0x00	; 0
    27fe:	50 e0       	ldi	r21, 0x00	; 0
    2800:	59 01       	movw	r10, r18
    2802:	6a 01       	movw	r12, r20
    2804:	a6 28       	or	r10, r6
    2806:	b7 28       	or	r11, r7
    2808:	c8 28       	or	r12, r8
    280a:	d9 28       	or	r13, r9
    280c:	0b c0       	rjmp	.+22     	; 0x2824 <_fpadd_parts+0x192>
    280e:	82 15       	cp	r24, r2
    2810:	93 05       	cpc	r25, r3
    2812:	2c f0       	brlt	.+10     	; 0x281e <_fpadd_parts+0x18c>
    2814:	1c 01       	movw	r2, r24
    2816:	aa 24       	eor	r10, r10
    2818:	bb 24       	eor	r11, r11
    281a:	65 01       	movw	r12, r10
    281c:	03 c0       	rjmp	.+6      	; 0x2824 <_fpadd_parts+0x192>
    281e:	ee 24       	eor	r14, r14
    2820:	ff 24       	eor	r15, r15
    2822:	87 01       	movw	r16, r14
    2824:	11 96       	adiw	r26, 0x01	; 1
    2826:	9c 91       	ld	r25, X
    2828:	d2 01       	movw	r26, r4
    282a:	11 96       	adiw	r26, 0x01	; 1
    282c:	8c 91       	ld	r24, X
    282e:	98 17       	cp	r25, r24
    2830:	09 f4       	brne	.+2      	; 0x2834 <_fpadd_parts+0x1a2>
    2832:	45 c0       	rjmp	.+138    	; 0x28be <_fpadd_parts+0x22c>
    2834:	99 23       	and	r25, r25
    2836:	39 f0       	breq	.+14     	; 0x2846 <_fpadd_parts+0x1b4>
    2838:	a8 01       	movw	r20, r16
    283a:	97 01       	movw	r18, r14
    283c:	2a 19       	sub	r18, r10
    283e:	3b 09       	sbc	r19, r11
    2840:	4c 09       	sbc	r20, r12
    2842:	5d 09       	sbc	r21, r13
    2844:	06 c0       	rjmp	.+12     	; 0x2852 <_fpadd_parts+0x1c0>
    2846:	a6 01       	movw	r20, r12
    2848:	95 01       	movw	r18, r10
    284a:	2e 19       	sub	r18, r14
    284c:	3f 09       	sbc	r19, r15
    284e:	40 0b       	sbc	r20, r16
    2850:	51 0b       	sbc	r21, r17
    2852:	57 fd       	sbrc	r21, 7
    2854:	08 c0       	rjmp	.+16     	; 0x2866 <_fpadd_parts+0x1d4>
    2856:	11 82       	std	Z+1, r1	; 0x01
    2858:	33 82       	std	Z+3, r3	; 0x03
    285a:	22 82       	std	Z+2, r2	; 0x02
    285c:	24 83       	std	Z+4, r18	; 0x04
    285e:	35 83       	std	Z+5, r19	; 0x05
    2860:	46 83       	std	Z+6, r20	; 0x06
    2862:	57 83       	std	Z+7, r21	; 0x07
    2864:	1d c0       	rjmp	.+58     	; 0x28a0 <_fpadd_parts+0x20e>
    2866:	81 e0       	ldi	r24, 0x01	; 1
    2868:	81 83       	std	Z+1, r24	; 0x01
    286a:	33 82       	std	Z+3, r3	; 0x03
    286c:	22 82       	std	Z+2, r2	; 0x02
    286e:	88 27       	eor	r24, r24
    2870:	99 27       	eor	r25, r25
    2872:	dc 01       	movw	r26, r24
    2874:	82 1b       	sub	r24, r18
    2876:	93 0b       	sbc	r25, r19
    2878:	a4 0b       	sbc	r26, r20
    287a:	b5 0b       	sbc	r27, r21
    287c:	84 83       	std	Z+4, r24	; 0x04
    287e:	95 83       	std	Z+5, r25	; 0x05
    2880:	a6 83       	std	Z+6, r26	; 0x06
    2882:	b7 83       	std	Z+7, r27	; 0x07
    2884:	0d c0       	rjmp	.+26     	; 0x28a0 <_fpadd_parts+0x20e>
    2886:	22 0f       	add	r18, r18
    2888:	33 1f       	adc	r19, r19
    288a:	44 1f       	adc	r20, r20
    288c:	55 1f       	adc	r21, r21
    288e:	24 83       	std	Z+4, r18	; 0x04
    2890:	35 83       	std	Z+5, r19	; 0x05
    2892:	46 83       	std	Z+6, r20	; 0x06
    2894:	57 83       	std	Z+7, r21	; 0x07
    2896:	82 81       	ldd	r24, Z+2	; 0x02
    2898:	93 81       	ldd	r25, Z+3	; 0x03
    289a:	01 97       	sbiw	r24, 0x01	; 1
    289c:	93 83       	std	Z+3, r25	; 0x03
    289e:	82 83       	std	Z+2, r24	; 0x02
    28a0:	24 81       	ldd	r18, Z+4	; 0x04
    28a2:	35 81       	ldd	r19, Z+5	; 0x05
    28a4:	46 81       	ldd	r20, Z+6	; 0x06
    28a6:	57 81       	ldd	r21, Z+7	; 0x07
    28a8:	da 01       	movw	r26, r20
    28aa:	c9 01       	movw	r24, r18
    28ac:	01 97       	sbiw	r24, 0x01	; 1
    28ae:	a1 09       	sbc	r26, r1
    28b0:	b1 09       	sbc	r27, r1
    28b2:	8f 5f       	subi	r24, 0xFF	; 255
    28b4:	9f 4f       	sbci	r25, 0xFF	; 255
    28b6:	af 4f       	sbci	r26, 0xFF	; 255
    28b8:	bf 43       	sbci	r27, 0x3F	; 63
    28ba:	28 f3       	brcs	.-54     	; 0x2886 <_fpadd_parts+0x1f4>
    28bc:	0b c0       	rjmp	.+22     	; 0x28d4 <_fpadd_parts+0x242>
    28be:	91 83       	std	Z+1, r25	; 0x01
    28c0:	33 82       	std	Z+3, r3	; 0x03
    28c2:	22 82       	std	Z+2, r2	; 0x02
    28c4:	ea 0c       	add	r14, r10
    28c6:	fb 1c       	adc	r15, r11
    28c8:	0c 1d       	adc	r16, r12
    28ca:	1d 1d       	adc	r17, r13
    28cc:	e4 82       	std	Z+4, r14	; 0x04
    28ce:	f5 82       	std	Z+5, r15	; 0x05
    28d0:	06 83       	std	Z+6, r16	; 0x06
    28d2:	17 83       	std	Z+7, r17	; 0x07
    28d4:	83 e0       	ldi	r24, 0x03	; 3
    28d6:	80 83       	st	Z, r24
    28d8:	24 81       	ldd	r18, Z+4	; 0x04
    28da:	35 81       	ldd	r19, Z+5	; 0x05
    28dc:	46 81       	ldd	r20, Z+6	; 0x06
    28de:	57 81       	ldd	r21, Z+7	; 0x07
    28e0:	57 ff       	sbrs	r21, 7
    28e2:	1a c0       	rjmp	.+52     	; 0x2918 <_fpadd_parts+0x286>
    28e4:	c9 01       	movw	r24, r18
    28e6:	aa 27       	eor	r26, r26
    28e8:	97 fd       	sbrc	r25, 7
    28ea:	a0 95       	com	r26
    28ec:	ba 2f       	mov	r27, r26
    28ee:	81 70       	andi	r24, 0x01	; 1
    28f0:	90 70       	andi	r25, 0x00	; 0
    28f2:	a0 70       	andi	r26, 0x00	; 0
    28f4:	b0 70       	andi	r27, 0x00	; 0
    28f6:	56 95       	lsr	r21
    28f8:	47 95       	ror	r20
    28fa:	37 95       	ror	r19
    28fc:	27 95       	ror	r18
    28fe:	82 2b       	or	r24, r18
    2900:	93 2b       	or	r25, r19
    2902:	a4 2b       	or	r26, r20
    2904:	b5 2b       	or	r27, r21
    2906:	84 83       	std	Z+4, r24	; 0x04
    2908:	95 83       	std	Z+5, r25	; 0x05
    290a:	a6 83       	std	Z+6, r26	; 0x06
    290c:	b7 83       	std	Z+7, r27	; 0x07
    290e:	82 81       	ldd	r24, Z+2	; 0x02
    2910:	93 81       	ldd	r25, Z+3	; 0x03
    2912:	01 96       	adiw	r24, 0x01	; 1
    2914:	93 83       	std	Z+3, r25	; 0x03
    2916:	82 83       	std	Z+2, r24	; 0x02
    2918:	df 01       	movw	r26, r30
    291a:	01 c0       	rjmp	.+2      	; 0x291e <_fpadd_parts+0x28c>
    291c:	d2 01       	movw	r26, r4
    291e:	cd 01       	movw	r24, r26
    2920:	cd b7       	in	r28, 0x3d	; 61
    2922:	de b7       	in	r29, 0x3e	; 62
    2924:	e2 e1       	ldi	r30, 0x12	; 18
    2926:	0c 94 a0 2e 	jmp	0x5d40	; 0x5d40 <__epilogue_restores__>

0000292a <__subsf3>:
    292a:	a0 e2       	ldi	r26, 0x20	; 32
    292c:	b0 e0       	ldi	r27, 0x00	; 0
    292e:	eb e9       	ldi	r30, 0x9B	; 155
    2930:	f4 e1       	ldi	r31, 0x14	; 20
    2932:	0c 94 90 2e 	jmp	0x5d20	; 0x5d20 <__prologue_saves__+0x18>
    2936:	69 83       	std	Y+1, r22	; 0x01
    2938:	7a 83       	std	Y+2, r23	; 0x02
    293a:	8b 83       	std	Y+3, r24	; 0x03
    293c:	9c 83       	std	Y+4, r25	; 0x04
    293e:	2d 83       	std	Y+5, r18	; 0x05
    2940:	3e 83       	std	Y+6, r19	; 0x06
    2942:	4f 83       	std	Y+7, r20	; 0x07
    2944:	58 87       	std	Y+8, r21	; 0x08
    2946:	e9 e0       	ldi	r30, 0x09	; 9
    2948:	ee 2e       	mov	r14, r30
    294a:	f1 2c       	mov	r15, r1
    294c:	ec 0e       	add	r14, r28
    294e:	fd 1e       	adc	r15, r29
    2950:	ce 01       	movw	r24, r28
    2952:	01 96       	adiw	r24, 0x01	; 1
    2954:	b7 01       	movw	r22, r14
    2956:	0e 94 f7 19 	call	0x33ee	; 0x33ee <__unpack_f>
    295a:	8e 01       	movw	r16, r28
    295c:	0f 5e       	subi	r16, 0xEF	; 239
    295e:	1f 4f       	sbci	r17, 0xFF	; 255
    2960:	ce 01       	movw	r24, r28
    2962:	05 96       	adiw	r24, 0x05	; 5
    2964:	b8 01       	movw	r22, r16
    2966:	0e 94 f7 19 	call	0x33ee	; 0x33ee <__unpack_f>
    296a:	8a 89       	ldd	r24, Y+18	; 0x12
    296c:	91 e0       	ldi	r25, 0x01	; 1
    296e:	89 27       	eor	r24, r25
    2970:	8a 8b       	std	Y+18, r24	; 0x12
    2972:	c7 01       	movw	r24, r14
    2974:	b8 01       	movw	r22, r16
    2976:	ae 01       	movw	r20, r28
    2978:	47 5e       	subi	r20, 0xE7	; 231
    297a:	5f 4f       	sbci	r21, 0xFF	; 255
    297c:	0e 94 49 13 	call	0x2692	; 0x2692 <_fpadd_parts>
    2980:	0e 94 22 19 	call	0x3244	; 0x3244 <__pack_f>
    2984:	a0 96       	adiw	r28, 0x20	; 32
    2986:	e6 e0       	ldi	r30, 0x06	; 6
    2988:	0c 94 ac 2e 	jmp	0x5d58	; 0x5d58 <__epilogue_restores__+0x18>

0000298c <__addsf3>:
    298c:	a0 e2       	ldi	r26, 0x20	; 32
    298e:	b0 e0       	ldi	r27, 0x00	; 0
    2990:	ec ec       	ldi	r30, 0xCC	; 204
    2992:	f4 e1       	ldi	r31, 0x14	; 20
    2994:	0c 94 90 2e 	jmp	0x5d20	; 0x5d20 <__prologue_saves__+0x18>
    2998:	69 83       	std	Y+1, r22	; 0x01
    299a:	7a 83       	std	Y+2, r23	; 0x02
    299c:	8b 83       	std	Y+3, r24	; 0x03
    299e:	9c 83       	std	Y+4, r25	; 0x04
    29a0:	2d 83       	std	Y+5, r18	; 0x05
    29a2:	3e 83       	std	Y+6, r19	; 0x06
    29a4:	4f 83       	std	Y+7, r20	; 0x07
    29a6:	58 87       	std	Y+8, r21	; 0x08
    29a8:	f9 e0       	ldi	r31, 0x09	; 9
    29aa:	ef 2e       	mov	r14, r31
    29ac:	f1 2c       	mov	r15, r1
    29ae:	ec 0e       	add	r14, r28
    29b0:	fd 1e       	adc	r15, r29
    29b2:	ce 01       	movw	r24, r28
    29b4:	01 96       	adiw	r24, 0x01	; 1
    29b6:	b7 01       	movw	r22, r14
    29b8:	0e 94 f7 19 	call	0x33ee	; 0x33ee <__unpack_f>
    29bc:	8e 01       	movw	r16, r28
    29be:	0f 5e       	subi	r16, 0xEF	; 239
    29c0:	1f 4f       	sbci	r17, 0xFF	; 255
    29c2:	ce 01       	movw	r24, r28
    29c4:	05 96       	adiw	r24, 0x05	; 5
    29c6:	b8 01       	movw	r22, r16
    29c8:	0e 94 f7 19 	call	0x33ee	; 0x33ee <__unpack_f>
    29cc:	c7 01       	movw	r24, r14
    29ce:	b8 01       	movw	r22, r16
    29d0:	ae 01       	movw	r20, r28
    29d2:	47 5e       	subi	r20, 0xE7	; 231
    29d4:	5f 4f       	sbci	r21, 0xFF	; 255
    29d6:	0e 94 49 13 	call	0x2692	; 0x2692 <_fpadd_parts>
    29da:	0e 94 22 19 	call	0x3244	; 0x3244 <__pack_f>
    29de:	a0 96       	adiw	r28, 0x20	; 32
    29e0:	e6 e0       	ldi	r30, 0x06	; 6
    29e2:	0c 94 ac 2e 	jmp	0x5d58	; 0x5d58 <__epilogue_restores__+0x18>

000029e6 <__mulsf3>:
    29e6:	a0 e2       	ldi	r26, 0x20	; 32
    29e8:	b0 e0       	ldi	r27, 0x00	; 0
    29ea:	e9 ef       	ldi	r30, 0xF9	; 249
    29ec:	f4 e1       	ldi	r31, 0x14	; 20
    29ee:	0c 94 84 2e 	jmp	0x5d08	; 0x5d08 <__prologue_saves__>
    29f2:	69 83       	std	Y+1, r22	; 0x01
    29f4:	7a 83       	std	Y+2, r23	; 0x02
    29f6:	8b 83       	std	Y+3, r24	; 0x03
    29f8:	9c 83       	std	Y+4, r25	; 0x04
    29fa:	2d 83       	std	Y+5, r18	; 0x05
    29fc:	3e 83       	std	Y+6, r19	; 0x06
    29fe:	4f 83       	std	Y+7, r20	; 0x07
    2a00:	58 87       	std	Y+8, r21	; 0x08
    2a02:	ce 01       	movw	r24, r28
    2a04:	01 96       	adiw	r24, 0x01	; 1
    2a06:	be 01       	movw	r22, r28
    2a08:	67 5f       	subi	r22, 0xF7	; 247
    2a0a:	7f 4f       	sbci	r23, 0xFF	; 255
    2a0c:	0e 94 f7 19 	call	0x33ee	; 0x33ee <__unpack_f>
    2a10:	ce 01       	movw	r24, r28
    2a12:	05 96       	adiw	r24, 0x05	; 5
    2a14:	be 01       	movw	r22, r28
    2a16:	6f 5e       	subi	r22, 0xEF	; 239
    2a18:	7f 4f       	sbci	r23, 0xFF	; 255
    2a1a:	0e 94 f7 19 	call	0x33ee	; 0x33ee <__unpack_f>
    2a1e:	99 85       	ldd	r25, Y+9	; 0x09
    2a20:	92 30       	cpi	r25, 0x02	; 2
    2a22:	88 f0       	brcs	.+34     	; 0x2a46 <__mulsf3+0x60>
    2a24:	89 89       	ldd	r24, Y+17	; 0x11
    2a26:	82 30       	cpi	r24, 0x02	; 2
    2a28:	c8 f0       	brcs	.+50     	; 0x2a5c <__mulsf3+0x76>
    2a2a:	94 30       	cpi	r25, 0x04	; 4
    2a2c:	19 f4       	brne	.+6      	; 0x2a34 <__mulsf3+0x4e>
    2a2e:	82 30       	cpi	r24, 0x02	; 2
    2a30:	51 f4       	brne	.+20     	; 0x2a46 <__mulsf3+0x60>
    2a32:	04 c0       	rjmp	.+8      	; 0x2a3c <__mulsf3+0x56>
    2a34:	84 30       	cpi	r24, 0x04	; 4
    2a36:	29 f4       	brne	.+10     	; 0x2a42 <__mulsf3+0x5c>
    2a38:	92 30       	cpi	r25, 0x02	; 2
    2a3a:	81 f4       	brne	.+32     	; 0x2a5c <__mulsf3+0x76>
    2a3c:	86 e6       	ldi	r24, 0x66	; 102
    2a3e:	90 e0       	ldi	r25, 0x00	; 0
    2a40:	c6 c0       	rjmp	.+396    	; 0x2bce <__mulsf3+0x1e8>
    2a42:	92 30       	cpi	r25, 0x02	; 2
    2a44:	49 f4       	brne	.+18     	; 0x2a58 <__mulsf3+0x72>
    2a46:	20 e0       	ldi	r18, 0x00	; 0
    2a48:	9a 85       	ldd	r25, Y+10	; 0x0a
    2a4a:	8a 89       	ldd	r24, Y+18	; 0x12
    2a4c:	98 13       	cpse	r25, r24
    2a4e:	21 e0       	ldi	r18, 0x01	; 1
    2a50:	2a 87       	std	Y+10, r18	; 0x0a
    2a52:	ce 01       	movw	r24, r28
    2a54:	09 96       	adiw	r24, 0x09	; 9
    2a56:	bb c0       	rjmp	.+374    	; 0x2bce <__mulsf3+0x1e8>
    2a58:	82 30       	cpi	r24, 0x02	; 2
    2a5a:	49 f4       	brne	.+18     	; 0x2a6e <__mulsf3+0x88>
    2a5c:	20 e0       	ldi	r18, 0x00	; 0
    2a5e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2a60:	8a 89       	ldd	r24, Y+18	; 0x12
    2a62:	98 13       	cpse	r25, r24
    2a64:	21 e0       	ldi	r18, 0x01	; 1
    2a66:	2a 8b       	std	Y+18, r18	; 0x12
    2a68:	ce 01       	movw	r24, r28
    2a6a:	41 96       	adiw	r24, 0x11	; 17
    2a6c:	b0 c0       	rjmp	.+352    	; 0x2bce <__mulsf3+0x1e8>
    2a6e:	2d 84       	ldd	r2, Y+13	; 0x0d
    2a70:	3e 84       	ldd	r3, Y+14	; 0x0e
    2a72:	4f 84       	ldd	r4, Y+15	; 0x0f
    2a74:	58 88       	ldd	r5, Y+16	; 0x10
    2a76:	6d 88       	ldd	r6, Y+21	; 0x15
    2a78:	7e 88       	ldd	r7, Y+22	; 0x16
    2a7a:	8f 88       	ldd	r8, Y+23	; 0x17
    2a7c:	98 8c       	ldd	r9, Y+24	; 0x18
    2a7e:	ee 24       	eor	r14, r14
    2a80:	ff 24       	eor	r15, r15
    2a82:	87 01       	movw	r16, r14
    2a84:	aa 24       	eor	r10, r10
    2a86:	bb 24       	eor	r11, r11
    2a88:	65 01       	movw	r12, r10
    2a8a:	40 e0       	ldi	r20, 0x00	; 0
    2a8c:	50 e0       	ldi	r21, 0x00	; 0
    2a8e:	60 e0       	ldi	r22, 0x00	; 0
    2a90:	70 e0       	ldi	r23, 0x00	; 0
    2a92:	e0 e0       	ldi	r30, 0x00	; 0
    2a94:	f0 e0       	ldi	r31, 0x00	; 0
    2a96:	c1 01       	movw	r24, r2
    2a98:	81 70       	andi	r24, 0x01	; 1
    2a9a:	90 70       	andi	r25, 0x00	; 0
    2a9c:	89 2b       	or	r24, r25
    2a9e:	e9 f0       	breq	.+58     	; 0x2ada <__mulsf3+0xf4>
    2aa0:	e6 0c       	add	r14, r6
    2aa2:	f7 1c       	adc	r15, r7
    2aa4:	08 1d       	adc	r16, r8
    2aa6:	19 1d       	adc	r17, r9
    2aa8:	9a 01       	movw	r18, r20
    2aaa:	ab 01       	movw	r20, r22
    2aac:	2a 0d       	add	r18, r10
    2aae:	3b 1d       	adc	r19, r11
    2ab0:	4c 1d       	adc	r20, r12
    2ab2:	5d 1d       	adc	r21, r13
    2ab4:	80 e0       	ldi	r24, 0x00	; 0
    2ab6:	90 e0       	ldi	r25, 0x00	; 0
    2ab8:	a0 e0       	ldi	r26, 0x00	; 0
    2aba:	b0 e0       	ldi	r27, 0x00	; 0
    2abc:	e6 14       	cp	r14, r6
    2abe:	f7 04       	cpc	r15, r7
    2ac0:	08 05       	cpc	r16, r8
    2ac2:	19 05       	cpc	r17, r9
    2ac4:	20 f4       	brcc	.+8      	; 0x2ace <__mulsf3+0xe8>
    2ac6:	81 e0       	ldi	r24, 0x01	; 1
    2ac8:	90 e0       	ldi	r25, 0x00	; 0
    2aca:	a0 e0       	ldi	r26, 0x00	; 0
    2acc:	b0 e0       	ldi	r27, 0x00	; 0
    2ace:	ba 01       	movw	r22, r20
    2ad0:	a9 01       	movw	r20, r18
    2ad2:	48 0f       	add	r20, r24
    2ad4:	59 1f       	adc	r21, r25
    2ad6:	6a 1f       	adc	r22, r26
    2ad8:	7b 1f       	adc	r23, r27
    2ada:	aa 0c       	add	r10, r10
    2adc:	bb 1c       	adc	r11, r11
    2ade:	cc 1c       	adc	r12, r12
    2ae0:	dd 1c       	adc	r13, r13
    2ae2:	97 fe       	sbrs	r9, 7
    2ae4:	08 c0       	rjmp	.+16     	; 0x2af6 <__mulsf3+0x110>
    2ae6:	81 e0       	ldi	r24, 0x01	; 1
    2ae8:	90 e0       	ldi	r25, 0x00	; 0
    2aea:	a0 e0       	ldi	r26, 0x00	; 0
    2aec:	b0 e0       	ldi	r27, 0x00	; 0
    2aee:	a8 2a       	or	r10, r24
    2af0:	b9 2a       	or	r11, r25
    2af2:	ca 2a       	or	r12, r26
    2af4:	db 2a       	or	r13, r27
    2af6:	31 96       	adiw	r30, 0x01	; 1
    2af8:	e0 32       	cpi	r30, 0x20	; 32
    2afa:	f1 05       	cpc	r31, r1
    2afc:	49 f0       	breq	.+18     	; 0x2b10 <__mulsf3+0x12a>
    2afe:	66 0c       	add	r6, r6
    2b00:	77 1c       	adc	r7, r7
    2b02:	88 1c       	adc	r8, r8
    2b04:	99 1c       	adc	r9, r9
    2b06:	56 94       	lsr	r5
    2b08:	47 94       	ror	r4
    2b0a:	37 94       	ror	r3
    2b0c:	27 94       	ror	r2
    2b0e:	c3 cf       	rjmp	.-122    	; 0x2a96 <__mulsf3+0xb0>
    2b10:	fa 85       	ldd	r31, Y+10	; 0x0a
    2b12:	ea 89       	ldd	r30, Y+18	; 0x12
    2b14:	2b 89       	ldd	r18, Y+19	; 0x13
    2b16:	3c 89       	ldd	r19, Y+20	; 0x14
    2b18:	8b 85       	ldd	r24, Y+11	; 0x0b
    2b1a:	9c 85       	ldd	r25, Y+12	; 0x0c
    2b1c:	28 0f       	add	r18, r24
    2b1e:	39 1f       	adc	r19, r25
    2b20:	2e 5f       	subi	r18, 0xFE	; 254
    2b22:	3f 4f       	sbci	r19, 0xFF	; 255
    2b24:	17 c0       	rjmp	.+46     	; 0x2b54 <__mulsf3+0x16e>
    2b26:	ca 01       	movw	r24, r20
    2b28:	81 70       	andi	r24, 0x01	; 1
    2b2a:	90 70       	andi	r25, 0x00	; 0
    2b2c:	89 2b       	or	r24, r25
    2b2e:	61 f0       	breq	.+24     	; 0x2b48 <__mulsf3+0x162>
    2b30:	16 95       	lsr	r17
    2b32:	07 95       	ror	r16
    2b34:	f7 94       	ror	r15
    2b36:	e7 94       	ror	r14
    2b38:	80 e0       	ldi	r24, 0x00	; 0
    2b3a:	90 e0       	ldi	r25, 0x00	; 0
    2b3c:	a0 e0       	ldi	r26, 0x00	; 0
    2b3e:	b0 e8       	ldi	r27, 0x80	; 128
    2b40:	e8 2a       	or	r14, r24
    2b42:	f9 2a       	or	r15, r25
    2b44:	0a 2b       	or	r16, r26
    2b46:	1b 2b       	or	r17, r27
    2b48:	76 95       	lsr	r23
    2b4a:	67 95       	ror	r22
    2b4c:	57 95       	ror	r21
    2b4e:	47 95       	ror	r20
    2b50:	2f 5f       	subi	r18, 0xFF	; 255
    2b52:	3f 4f       	sbci	r19, 0xFF	; 255
    2b54:	77 fd       	sbrc	r23, 7
    2b56:	e7 cf       	rjmp	.-50     	; 0x2b26 <__mulsf3+0x140>
    2b58:	0c c0       	rjmp	.+24     	; 0x2b72 <__mulsf3+0x18c>
    2b5a:	44 0f       	add	r20, r20
    2b5c:	55 1f       	adc	r21, r21
    2b5e:	66 1f       	adc	r22, r22
    2b60:	77 1f       	adc	r23, r23
    2b62:	17 fd       	sbrc	r17, 7
    2b64:	41 60       	ori	r20, 0x01	; 1
    2b66:	ee 0c       	add	r14, r14
    2b68:	ff 1c       	adc	r15, r15
    2b6a:	00 1f       	adc	r16, r16
    2b6c:	11 1f       	adc	r17, r17
    2b6e:	21 50       	subi	r18, 0x01	; 1
    2b70:	30 40       	sbci	r19, 0x00	; 0
    2b72:	40 30       	cpi	r20, 0x00	; 0
    2b74:	90 e0       	ldi	r25, 0x00	; 0
    2b76:	59 07       	cpc	r21, r25
    2b78:	90 e0       	ldi	r25, 0x00	; 0
    2b7a:	69 07       	cpc	r22, r25
    2b7c:	90 e4       	ldi	r25, 0x40	; 64
    2b7e:	79 07       	cpc	r23, r25
    2b80:	60 f3       	brcs	.-40     	; 0x2b5a <__mulsf3+0x174>
    2b82:	2b 8f       	std	Y+27, r18	; 0x1b
    2b84:	3c 8f       	std	Y+28, r19	; 0x1c
    2b86:	db 01       	movw	r26, r22
    2b88:	ca 01       	movw	r24, r20
    2b8a:	8f 77       	andi	r24, 0x7F	; 127
    2b8c:	90 70       	andi	r25, 0x00	; 0
    2b8e:	a0 70       	andi	r26, 0x00	; 0
    2b90:	b0 70       	andi	r27, 0x00	; 0
    2b92:	80 34       	cpi	r24, 0x40	; 64
    2b94:	91 05       	cpc	r25, r1
    2b96:	a1 05       	cpc	r26, r1
    2b98:	b1 05       	cpc	r27, r1
    2b9a:	61 f4       	brne	.+24     	; 0x2bb4 <__mulsf3+0x1ce>
    2b9c:	47 fd       	sbrc	r20, 7
    2b9e:	0a c0       	rjmp	.+20     	; 0x2bb4 <__mulsf3+0x1ce>
    2ba0:	e1 14       	cp	r14, r1
    2ba2:	f1 04       	cpc	r15, r1
    2ba4:	01 05       	cpc	r16, r1
    2ba6:	11 05       	cpc	r17, r1
    2ba8:	29 f0       	breq	.+10     	; 0x2bb4 <__mulsf3+0x1ce>
    2baa:	40 5c       	subi	r20, 0xC0	; 192
    2bac:	5f 4f       	sbci	r21, 0xFF	; 255
    2bae:	6f 4f       	sbci	r22, 0xFF	; 255
    2bb0:	7f 4f       	sbci	r23, 0xFF	; 255
    2bb2:	40 78       	andi	r20, 0x80	; 128
    2bb4:	1a 8e       	std	Y+26, r1	; 0x1a
    2bb6:	fe 17       	cp	r31, r30
    2bb8:	11 f0       	breq	.+4      	; 0x2bbe <__mulsf3+0x1d8>
    2bba:	81 e0       	ldi	r24, 0x01	; 1
    2bbc:	8a 8f       	std	Y+26, r24	; 0x1a
    2bbe:	4d 8f       	std	Y+29, r20	; 0x1d
    2bc0:	5e 8f       	std	Y+30, r21	; 0x1e
    2bc2:	6f 8f       	std	Y+31, r22	; 0x1f
    2bc4:	78 a3       	std	Y+32, r23	; 0x20
    2bc6:	83 e0       	ldi	r24, 0x03	; 3
    2bc8:	89 8f       	std	Y+25, r24	; 0x19
    2bca:	ce 01       	movw	r24, r28
    2bcc:	49 96       	adiw	r24, 0x19	; 25
    2bce:	0e 94 22 19 	call	0x3244	; 0x3244 <__pack_f>
    2bd2:	a0 96       	adiw	r28, 0x20	; 32
    2bd4:	e2 e1       	ldi	r30, 0x12	; 18
    2bd6:	0c 94 a0 2e 	jmp	0x5d40	; 0x5d40 <__epilogue_restores__>

00002bda <__divsf3>:
    2bda:	a8 e1       	ldi	r26, 0x18	; 24
    2bdc:	b0 e0       	ldi	r27, 0x00	; 0
    2bde:	e3 ef       	ldi	r30, 0xF3	; 243
    2be0:	f5 e1       	ldi	r31, 0x15	; 21
    2be2:	0c 94 8c 2e 	jmp	0x5d18	; 0x5d18 <__prologue_saves__+0x10>
    2be6:	69 83       	std	Y+1, r22	; 0x01
    2be8:	7a 83       	std	Y+2, r23	; 0x02
    2bea:	8b 83       	std	Y+3, r24	; 0x03
    2bec:	9c 83       	std	Y+4, r25	; 0x04
    2bee:	2d 83       	std	Y+5, r18	; 0x05
    2bf0:	3e 83       	std	Y+6, r19	; 0x06
    2bf2:	4f 83       	std	Y+7, r20	; 0x07
    2bf4:	58 87       	std	Y+8, r21	; 0x08
    2bf6:	b9 e0       	ldi	r27, 0x09	; 9
    2bf8:	eb 2e       	mov	r14, r27
    2bfa:	f1 2c       	mov	r15, r1
    2bfc:	ec 0e       	add	r14, r28
    2bfe:	fd 1e       	adc	r15, r29
    2c00:	ce 01       	movw	r24, r28
    2c02:	01 96       	adiw	r24, 0x01	; 1
    2c04:	b7 01       	movw	r22, r14
    2c06:	0e 94 f7 19 	call	0x33ee	; 0x33ee <__unpack_f>
    2c0a:	8e 01       	movw	r16, r28
    2c0c:	0f 5e       	subi	r16, 0xEF	; 239
    2c0e:	1f 4f       	sbci	r17, 0xFF	; 255
    2c10:	ce 01       	movw	r24, r28
    2c12:	05 96       	adiw	r24, 0x05	; 5
    2c14:	b8 01       	movw	r22, r16
    2c16:	0e 94 f7 19 	call	0x33ee	; 0x33ee <__unpack_f>
    2c1a:	29 85       	ldd	r18, Y+9	; 0x09
    2c1c:	22 30       	cpi	r18, 0x02	; 2
    2c1e:	08 f4       	brcc	.+2      	; 0x2c22 <__divsf3+0x48>
    2c20:	7e c0       	rjmp	.+252    	; 0x2d1e <__divsf3+0x144>
    2c22:	39 89       	ldd	r19, Y+17	; 0x11
    2c24:	32 30       	cpi	r19, 0x02	; 2
    2c26:	10 f4       	brcc	.+4      	; 0x2c2c <__divsf3+0x52>
    2c28:	b8 01       	movw	r22, r16
    2c2a:	7c c0       	rjmp	.+248    	; 0x2d24 <__divsf3+0x14a>
    2c2c:	8a 85       	ldd	r24, Y+10	; 0x0a
    2c2e:	9a 89       	ldd	r25, Y+18	; 0x12
    2c30:	89 27       	eor	r24, r25
    2c32:	8a 87       	std	Y+10, r24	; 0x0a
    2c34:	24 30       	cpi	r18, 0x04	; 4
    2c36:	11 f0       	breq	.+4      	; 0x2c3c <__divsf3+0x62>
    2c38:	22 30       	cpi	r18, 0x02	; 2
    2c3a:	31 f4       	brne	.+12     	; 0x2c48 <__divsf3+0x6e>
    2c3c:	23 17       	cp	r18, r19
    2c3e:	09 f0       	breq	.+2      	; 0x2c42 <__divsf3+0x68>
    2c40:	6e c0       	rjmp	.+220    	; 0x2d1e <__divsf3+0x144>
    2c42:	66 e6       	ldi	r22, 0x66	; 102
    2c44:	70 e0       	ldi	r23, 0x00	; 0
    2c46:	6e c0       	rjmp	.+220    	; 0x2d24 <__divsf3+0x14a>
    2c48:	34 30       	cpi	r19, 0x04	; 4
    2c4a:	39 f4       	brne	.+14     	; 0x2c5a <__divsf3+0x80>
    2c4c:	1d 86       	std	Y+13, r1	; 0x0d
    2c4e:	1e 86       	std	Y+14, r1	; 0x0e
    2c50:	1f 86       	std	Y+15, r1	; 0x0f
    2c52:	18 8a       	std	Y+16, r1	; 0x10
    2c54:	1c 86       	std	Y+12, r1	; 0x0c
    2c56:	1b 86       	std	Y+11, r1	; 0x0b
    2c58:	04 c0       	rjmp	.+8      	; 0x2c62 <__divsf3+0x88>
    2c5a:	32 30       	cpi	r19, 0x02	; 2
    2c5c:	21 f4       	brne	.+8      	; 0x2c66 <__divsf3+0x8c>
    2c5e:	84 e0       	ldi	r24, 0x04	; 4
    2c60:	89 87       	std	Y+9, r24	; 0x09
    2c62:	b7 01       	movw	r22, r14
    2c64:	5f c0       	rjmp	.+190    	; 0x2d24 <__divsf3+0x14a>
    2c66:	2b 85       	ldd	r18, Y+11	; 0x0b
    2c68:	3c 85       	ldd	r19, Y+12	; 0x0c
    2c6a:	8b 89       	ldd	r24, Y+19	; 0x13
    2c6c:	9c 89       	ldd	r25, Y+20	; 0x14
    2c6e:	28 1b       	sub	r18, r24
    2c70:	39 0b       	sbc	r19, r25
    2c72:	3c 87       	std	Y+12, r19	; 0x0c
    2c74:	2b 87       	std	Y+11, r18	; 0x0b
    2c76:	ed 84       	ldd	r14, Y+13	; 0x0d
    2c78:	fe 84       	ldd	r15, Y+14	; 0x0e
    2c7a:	0f 85       	ldd	r16, Y+15	; 0x0f
    2c7c:	18 89       	ldd	r17, Y+16	; 0x10
    2c7e:	ad 88       	ldd	r10, Y+21	; 0x15
    2c80:	be 88       	ldd	r11, Y+22	; 0x16
    2c82:	cf 88       	ldd	r12, Y+23	; 0x17
    2c84:	d8 8c       	ldd	r13, Y+24	; 0x18
    2c86:	ea 14       	cp	r14, r10
    2c88:	fb 04       	cpc	r15, r11
    2c8a:	0c 05       	cpc	r16, r12
    2c8c:	1d 05       	cpc	r17, r13
    2c8e:	40 f4       	brcc	.+16     	; 0x2ca0 <__divsf3+0xc6>
    2c90:	ee 0c       	add	r14, r14
    2c92:	ff 1c       	adc	r15, r15
    2c94:	00 1f       	adc	r16, r16
    2c96:	11 1f       	adc	r17, r17
    2c98:	21 50       	subi	r18, 0x01	; 1
    2c9a:	30 40       	sbci	r19, 0x00	; 0
    2c9c:	3c 87       	std	Y+12, r19	; 0x0c
    2c9e:	2b 87       	std	Y+11, r18	; 0x0b
    2ca0:	20 e0       	ldi	r18, 0x00	; 0
    2ca2:	30 e0       	ldi	r19, 0x00	; 0
    2ca4:	40 e0       	ldi	r20, 0x00	; 0
    2ca6:	50 e0       	ldi	r21, 0x00	; 0
    2ca8:	80 e0       	ldi	r24, 0x00	; 0
    2caa:	90 e0       	ldi	r25, 0x00	; 0
    2cac:	a0 e0       	ldi	r26, 0x00	; 0
    2cae:	b0 e4       	ldi	r27, 0x40	; 64
    2cb0:	60 e0       	ldi	r22, 0x00	; 0
    2cb2:	70 e0       	ldi	r23, 0x00	; 0
    2cb4:	ea 14       	cp	r14, r10
    2cb6:	fb 04       	cpc	r15, r11
    2cb8:	0c 05       	cpc	r16, r12
    2cba:	1d 05       	cpc	r17, r13
    2cbc:	40 f0       	brcs	.+16     	; 0x2cce <__divsf3+0xf4>
    2cbe:	28 2b       	or	r18, r24
    2cc0:	39 2b       	or	r19, r25
    2cc2:	4a 2b       	or	r20, r26
    2cc4:	5b 2b       	or	r21, r27
    2cc6:	ea 18       	sub	r14, r10
    2cc8:	fb 08       	sbc	r15, r11
    2cca:	0c 09       	sbc	r16, r12
    2ccc:	1d 09       	sbc	r17, r13
    2cce:	b6 95       	lsr	r27
    2cd0:	a7 95       	ror	r26
    2cd2:	97 95       	ror	r25
    2cd4:	87 95       	ror	r24
    2cd6:	ee 0c       	add	r14, r14
    2cd8:	ff 1c       	adc	r15, r15
    2cda:	00 1f       	adc	r16, r16
    2cdc:	11 1f       	adc	r17, r17
    2cde:	6f 5f       	subi	r22, 0xFF	; 255
    2ce0:	7f 4f       	sbci	r23, 0xFF	; 255
    2ce2:	6f 31       	cpi	r22, 0x1F	; 31
    2ce4:	71 05       	cpc	r23, r1
    2ce6:	31 f7       	brne	.-52     	; 0x2cb4 <__divsf3+0xda>
    2ce8:	da 01       	movw	r26, r20
    2cea:	c9 01       	movw	r24, r18
    2cec:	8f 77       	andi	r24, 0x7F	; 127
    2cee:	90 70       	andi	r25, 0x00	; 0
    2cf0:	a0 70       	andi	r26, 0x00	; 0
    2cf2:	b0 70       	andi	r27, 0x00	; 0
    2cf4:	80 34       	cpi	r24, 0x40	; 64
    2cf6:	91 05       	cpc	r25, r1
    2cf8:	a1 05       	cpc	r26, r1
    2cfa:	b1 05       	cpc	r27, r1
    2cfc:	61 f4       	brne	.+24     	; 0x2d16 <__divsf3+0x13c>
    2cfe:	27 fd       	sbrc	r18, 7
    2d00:	0a c0       	rjmp	.+20     	; 0x2d16 <__divsf3+0x13c>
    2d02:	e1 14       	cp	r14, r1
    2d04:	f1 04       	cpc	r15, r1
    2d06:	01 05       	cpc	r16, r1
    2d08:	11 05       	cpc	r17, r1
    2d0a:	29 f0       	breq	.+10     	; 0x2d16 <__divsf3+0x13c>
    2d0c:	20 5c       	subi	r18, 0xC0	; 192
    2d0e:	3f 4f       	sbci	r19, 0xFF	; 255
    2d10:	4f 4f       	sbci	r20, 0xFF	; 255
    2d12:	5f 4f       	sbci	r21, 0xFF	; 255
    2d14:	20 78       	andi	r18, 0x80	; 128
    2d16:	2d 87       	std	Y+13, r18	; 0x0d
    2d18:	3e 87       	std	Y+14, r19	; 0x0e
    2d1a:	4f 87       	std	Y+15, r20	; 0x0f
    2d1c:	58 8b       	std	Y+16, r21	; 0x10
    2d1e:	be 01       	movw	r22, r28
    2d20:	67 5f       	subi	r22, 0xF7	; 247
    2d22:	7f 4f       	sbci	r23, 0xFF	; 255
    2d24:	cb 01       	movw	r24, r22
    2d26:	0e 94 22 19 	call	0x3244	; 0x3244 <__pack_f>
    2d2a:	68 96       	adiw	r28, 0x18	; 24
    2d2c:	ea e0       	ldi	r30, 0x0A	; 10
    2d2e:	0c 94 a8 2e 	jmp	0x5d50	; 0x5d50 <__epilogue_restores__+0x10>

00002d32 <__gtsf2>:
    2d32:	a8 e1       	ldi	r26, 0x18	; 24
    2d34:	b0 e0       	ldi	r27, 0x00	; 0
    2d36:	ef e9       	ldi	r30, 0x9F	; 159
    2d38:	f6 e1       	ldi	r31, 0x16	; 22
    2d3a:	0c 94 90 2e 	jmp	0x5d20	; 0x5d20 <__prologue_saves__+0x18>
    2d3e:	69 83       	std	Y+1, r22	; 0x01
    2d40:	7a 83       	std	Y+2, r23	; 0x02
    2d42:	8b 83       	std	Y+3, r24	; 0x03
    2d44:	9c 83       	std	Y+4, r25	; 0x04
    2d46:	2d 83       	std	Y+5, r18	; 0x05
    2d48:	3e 83       	std	Y+6, r19	; 0x06
    2d4a:	4f 83       	std	Y+7, r20	; 0x07
    2d4c:	58 87       	std	Y+8, r21	; 0x08
    2d4e:	89 e0       	ldi	r24, 0x09	; 9
    2d50:	e8 2e       	mov	r14, r24
    2d52:	f1 2c       	mov	r15, r1
    2d54:	ec 0e       	add	r14, r28
    2d56:	fd 1e       	adc	r15, r29
    2d58:	ce 01       	movw	r24, r28
    2d5a:	01 96       	adiw	r24, 0x01	; 1
    2d5c:	b7 01       	movw	r22, r14
    2d5e:	0e 94 f7 19 	call	0x33ee	; 0x33ee <__unpack_f>
    2d62:	8e 01       	movw	r16, r28
    2d64:	0f 5e       	subi	r16, 0xEF	; 239
    2d66:	1f 4f       	sbci	r17, 0xFF	; 255
    2d68:	ce 01       	movw	r24, r28
    2d6a:	05 96       	adiw	r24, 0x05	; 5
    2d6c:	b8 01       	movw	r22, r16
    2d6e:	0e 94 f7 19 	call	0x33ee	; 0x33ee <__unpack_f>
    2d72:	89 85       	ldd	r24, Y+9	; 0x09
    2d74:	82 30       	cpi	r24, 0x02	; 2
    2d76:	40 f0       	brcs	.+16     	; 0x2d88 <__gtsf2+0x56>
    2d78:	89 89       	ldd	r24, Y+17	; 0x11
    2d7a:	82 30       	cpi	r24, 0x02	; 2
    2d7c:	28 f0       	brcs	.+10     	; 0x2d88 <__gtsf2+0x56>
    2d7e:	c7 01       	movw	r24, r14
    2d80:	b8 01       	movw	r22, r16
    2d82:	0e 94 6f 1a 	call	0x34de	; 0x34de <__fpcmp_parts_f>
    2d86:	01 c0       	rjmp	.+2      	; 0x2d8a <__gtsf2+0x58>
    2d88:	8f ef       	ldi	r24, 0xFF	; 255
    2d8a:	68 96       	adiw	r28, 0x18	; 24
    2d8c:	e6 e0       	ldi	r30, 0x06	; 6
    2d8e:	0c 94 ac 2e 	jmp	0x5d58	; 0x5d58 <__epilogue_restores__+0x18>

00002d92 <__gesf2>:
    2d92:	a8 e1       	ldi	r26, 0x18	; 24
    2d94:	b0 e0       	ldi	r27, 0x00	; 0
    2d96:	ef ec       	ldi	r30, 0xCF	; 207
    2d98:	f6 e1       	ldi	r31, 0x16	; 22
    2d9a:	0c 94 90 2e 	jmp	0x5d20	; 0x5d20 <__prologue_saves__+0x18>
    2d9e:	69 83       	std	Y+1, r22	; 0x01
    2da0:	7a 83       	std	Y+2, r23	; 0x02
    2da2:	8b 83       	std	Y+3, r24	; 0x03
    2da4:	9c 83       	std	Y+4, r25	; 0x04
    2da6:	2d 83       	std	Y+5, r18	; 0x05
    2da8:	3e 83       	std	Y+6, r19	; 0x06
    2daa:	4f 83       	std	Y+7, r20	; 0x07
    2dac:	58 87       	std	Y+8, r21	; 0x08
    2dae:	89 e0       	ldi	r24, 0x09	; 9
    2db0:	e8 2e       	mov	r14, r24
    2db2:	f1 2c       	mov	r15, r1
    2db4:	ec 0e       	add	r14, r28
    2db6:	fd 1e       	adc	r15, r29
    2db8:	ce 01       	movw	r24, r28
    2dba:	01 96       	adiw	r24, 0x01	; 1
    2dbc:	b7 01       	movw	r22, r14
    2dbe:	0e 94 f7 19 	call	0x33ee	; 0x33ee <__unpack_f>
    2dc2:	8e 01       	movw	r16, r28
    2dc4:	0f 5e       	subi	r16, 0xEF	; 239
    2dc6:	1f 4f       	sbci	r17, 0xFF	; 255
    2dc8:	ce 01       	movw	r24, r28
    2dca:	05 96       	adiw	r24, 0x05	; 5
    2dcc:	b8 01       	movw	r22, r16
    2dce:	0e 94 f7 19 	call	0x33ee	; 0x33ee <__unpack_f>
    2dd2:	89 85       	ldd	r24, Y+9	; 0x09
    2dd4:	82 30       	cpi	r24, 0x02	; 2
    2dd6:	40 f0       	brcs	.+16     	; 0x2de8 <__gesf2+0x56>
    2dd8:	89 89       	ldd	r24, Y+17	; 0x11
    2dda:	82 30       	cpi	r24, 0x02	; 2
    2ddc:	28 f0       	brcs	.+10     	; 0x2de8 <__gesf2+0x56>
    2dde:	c7 01       	movw	r24, r14
    2de0:	b8 01       	movw	r22, r16
    2de2:	0e 94 6f 1a 	call	0x34de	; 0x34de <__fpcmp_parts_f>
    2de6:	01 c0       	rjmp	.+2      	; 0x2dea <__gesf2+0x58>
    2de8:	8f ef       	ldi	r24, 0xFF	; 255
    2dea:	68 96       	adiw	r28, 0x18	; 24
    2dec:	e6 e0       	ldi	r30, 0x06	; 6
    2dee:	0c 94 ac 2e 	jmp	0x5d58	; 0x5d58 <__epilogue_restores__+0x18>

00002df2 <__ltsf2>:
    2df2:	a8 e1       	ldi	r26, 0x18	; 24
    2df4:	b0 e0       	ldi	r27, 0x00	; 0
    2df6:	ef ef       	ldi	r30, 0xFF	; 255
    2df8:	f6 e1       	ldi	r31, 0x16	; 22
    2dfa:	0c 94 90 2e 	jmp	0x5d20	; 0x5d20 <__prologue_saves__+0x18>
    2dfe:	69 83       	std	Y+1, r22	; 0x01
    2e00:	7a 83       	std	Y+2, r23	; 0x02
    2e02:	8b 83       	std	Y+3, r24	; 0x03
    2e04:	9c 83       	std	Y+4, r25	; 0x04
    2e06:	2d 83       	std	Y+5, r18	; 0x05
    2e08:	3e 83       	std	Y+6, r19	; 0x06
    2e0a:	4f 83       	std	Y+7, r20	; 0x07
    2e0c:	58 87       	std	Y+8, r21	; 0x08
    2e0e:	89 e0       	ldi	r24, 0x09	; 9
    2e10:	e8 2e       	mov	r14, r24
    2e12:	f1 2c       	mov	r15, r1
    2e14:	ec 0e       	add	r14, r28
    2e16:	fd 1e       	adc	r15, r29
    2e18:	ce 01       	movw	r24, r28
    2e1a:	01 96       	adiw	r24, 0x01	; 1
    2e1c:	b7 01       	movw	r22, r14
    2e1e:	0e 94 f7 19 	call	0x33ee	; 0x33ee <__unpack_f>
    2e22:	8e 01       	movw	r16, r28
    2e24:	0f 5e       	subi	r16, 0xEF	; 239
    2e26:	1f 4f       	sbci	r17, 0xFF	; 255
    2e28:	ce 01       	movw	r24, r28
    2e2a:	05 96       	adiw	r24, 0x05	; 5
    2e2c:	b8 01       	movw	r22, r16
    2e2e:	0e 94 f7 19 	call	0x33ee	; 0x33ee <__unpack_f>
    2e32:	89 85       	ldd	r24, Y+9	; 0x09
    2e34:	82 30       	cpi	r24, 0x02	; 2
    2e36:	40 f0       	brcs	.+16     	; 0x2e48 <__ltsf2+0x56>
    2e38:	89 89       	ldd	r24, Y+17	; 0x11
    2e3a:	82 30       	cpi	r24, 0x02	; 2
    2e3c:	28 f0       	brcs	.+10     	; 0x2e48 <__ltsf2+0x56>
    2e3e:	c7 01       	movw	r24, r14
    2e40:	b8 01       	movw	r22, r16
    2e42:	0e 94 6f 1a 	call	0x34de	; 0x34de <__fpcmp_parts_f>
    2e46:	01 c0       	rjmp	.+2      	; 0x2e4a <__ltsf2+0x58>
    2e48:	81 e0       	ldi	r24, 0x01	; 1
    2e4a:	68 96       	adiw	r28, 0x18	; 24
    2e4c:	e6 e0       	ldi	r30, 0x06	; 6
    2e4e:	0c 94 ac 2e 	jmp	0x5d58	; 0x5d58 <__epilogue_restores__+0x18>

00002e52 <__floatsisf>:
    2e52:	a8 e0       	ldi	r26, 0x08	; 8
    2e54:	b0 e0       	ldi	r27, 0x00	; 0
    2e56:	ef e2       	ldi	r30, 0x2F	; 47
    2e58:	f7 e1       	ldi	r31, 0x17	; 23
    2e5a:	0c 94 8d 2e 	jmp	0x5d1a	; 0x5d1a <__prologue_saves__+0x12>
    2e5e:	9b 01       	movw	r18, r22
    2e60:	ac 01       	movw	r20, r24
    2e62:	83 e0       	ldi	r24, 0x03	; 3
    2e64:	89 83       	std	Y+1, r24	; 0x01
    2e66:	da 01       	movw	r26, r20
    2e68:	c9 01       	movw	r24, r18
    2e6a:	88 27       	eor	r24, r24
    2e6c:	b7 fd       	sbrc	r27, 7
    2e6e:	83 95       	inc	r24
    2e70:	99 27       	eor	r25, r25
    2e72:	aa 27       	eor	r26, r26
    2e74:	bb 27       	eor	r27, r27
    2e76:	b8 2e       	mov	r11, r24
    2e78:	21 15       	cp	r18, r1
    2e7a:	31 05       	cpc	r19, r1
    2e7c:	41 05       	cpc	r20, r1
    2e7e:	51 05       	cpc	r21, r1
    2e80:	19 f4       	brne	.+6      	; 0x2e88 <__floatsisf+0x36>
    2e82:	82 e0       	ldi	r24, 0x02	; 2
    2e84:	89 83       	std	Y+1, r24	; 0x01
    2e86:	3a c0       	rjmp	.+116    	; 0x2efc <__floatsisf+0xaa>
    2e88:	88 23       	and	r24, r24
    2e8a:	a9 f0       	breq	.+42     	; 0x2eb6 <__floatsisf+0x64>
    2e8c:	20 30       	cpi	r18, 0x00	; 0
    2e8e:	80 e0       	ldi	r24, 0x00	; 0
    2e90:	38 07       	cpc	r19, r24
    2e92:	80 e0       	ldi	r24, 0x00	; 0
    2e94:	48 07       	cpc	r20, r24
    2e96:	80 e8       	ldi	r24, 0x80	; 128
    2e98:	58 07       	cpc	r21, r24
    2e9a:	29 f4       	brne	.+10     	; 0x2ea6 <__floatsisf+0x54>
    2e9c:	60 e0       	ldi	r22, 0x00	; 0
    2e9e:	70 e0       	ldi	r23, 0x00	; 0
    2ea0:	80 e0       	ldi	r24, 0x00	; 0
    2ea2:	9f ec       	ldi	r25, 0xCF	; 207
    2ea4:	30 c0       	rjmp	.+96     	; 0x2f06 <__floatsisf+0xb4>
    2ea6:	ee 24       	eor	r14, r14
    2ea8:	ff 24       	eor	r15, r15
    2eaa:	87 01       	movw	r16, r14
    2eac:	e2 1a       	sub	r14, r18
    2eae:	f3 0a       	sbc	r15, r19
    2eb0:	04 0b       	sbc	r16, r20
    2eb2:	15 0b       	sbc	r17, r21
    2eb4:	02 c0       	rjmp	.+4      	; 0x2eba <__floatsisf+0x68>
    2eb6:	79 01       	movw	r14, r18
    2eb8:	8a 01       	movw	r16, r20
    2eba:	8e e1       	ldi	r24, 0x1E	; 30
    2ebc:	c8 2e       	mov	r12, r24
    2ebe:	d1 2c       	mov	r13, r1
    2ec0:	dc 82       	std	Y+4, r13	; 0x04
    2ec2:	cb 82       	std	Y+3, r12	; 0x03
    2ec4:	ed 82       	std	Y+5, r14	; 0x05
    2ec6:	fe 82       	std	Y+6, r15	; 0x06
    2ec8:	0f 83       	std	Y+7, r16	; 0x07
    2eca:	18 87       	std	Y+8, r17	; 0x08
    2ecc:	c8 01       	movw	r24, r16
    2ece:	b7 01       	movw	r22, r14
    2ed0:	0e 94 d3 18 	call	0x31a6	; 0x31a6 <__clzsi2>
    2ed4:	01 97       	sbiw	r24, 0x01	; 1
    2ed6:	18 16       	cp	r1, r24
    2ed8:	19 06       	cpc	r1, r25
    2eda:	84 f4       	brge	.+32     	; 0x2efc <__floatsisf+0xaa>
    2edc:	08 2e       	mov	r0, r24
    2ede:	04 c0       	rjmp	.+8      	; 0x2ee8 <__floatsisf+0x96>
    2ee0:	ee 0c       	add	r14, r14
    2ee2:	ff 1c       	adc	r15, r15
    2ee4:	00 1f       	adc	r16, r16
    2ee6:	11 1f       	adc	r17, r17
    2ee8:	0a 94       	dec	r0
    2eea:	d2 f7       	brpl	.-12     	; 0x2ee0 <__floatsisf+0x8e>
    2eec:	ed 82       	std	Y+5, r14	; 0x05
    2eee:	fe 82       	std	Y+6, r15	; 0x06
    2ef0:	0f 83       	std	Y+7, r16	; 0x07
    2ef2:	18 87       	std	Y+8, r17	; 0x08
    2ef4:	c8 1a       	sub	r12, r24
    2ef6:	d9 0a       	sbc	r13, r25
    2ef8:	dc 82       	std	Y+4, r13	; 0x04
    2efa:	cb 82       	std	Y+3, r12	; 0x03
    2efc:	ba 82       	std	Y+2, r11	; 0x02
    2efe:	ce 01       	movw	r24, r28
    2f00:	01 96       	adiw	r24, 0x01	; 1
    2f02:	0e 94 22 19 	call	0x3244	; 0x3244 <__pack_f>
    2f06:	28 96       	adiw	r28, 0x08	; 8
    2f08:	e9 e0       	ldi	r30, 0x09	; 9
    2f0a:	0c 94 a9 2e 	jmp	0x5d52	; 0x5d52 <__epilogue_restores__+0x12>

00002f0e <__fixsfsi>:
    2f0e:	ac e0       	ldi	r26, 0x0C	; 12
    2f10:	b0 e0       	ldi	r27, 0x00	; 0
    2f12:	ed e8       	ldi	r30, 0x8D	; 141
    2f14:	f7 e1       	ldi	r31, 0x17	; 23
    2f16:	0c 94 94 2e 	jmp	0x5d28	; 0x5d28 <__prologue_saves__+0x20>
    2f1a:	69 83       	std	Y+1, r22	; 0x01
    2f1c:	7a 83       	std	Y+2, r23	; 0x02
    2f1e:	8b 83       	std	Y+3, r24	; 0x03
    2f20:	9c 83       	std	Y+4, r25	; 0x04
    2f22:	ce 01       	movw	r24, r28
    2f24:	01 96       	adiw	r24, 0x01	; 1
    2f26:	be 01       	movw	r22, r28
    2f28:	6b 5f       	subi	r22, 0xFB	; 251
    2f2a:	7f 4f       	sbci	r23, 0xFF	; 255
    2f2c:	0e 94 f7 19 	call	0x33ee	; 0x33ee <__unpack_f>
    2f30:	8d 81       	ldd	r24, Y+5	; 0x05
    2f32:	82 30       	cpi	r24, 0x02	; 2
    2f34:	61 f1       	breq	.+88     	; 0x2f8e <__fixsfsi+0x80>
    2f36:	82 30       	cpi	r24, 0x02	; 2
    2f38:	50 f1       	brcs	.+84     	; 0x2f8e <__fixsfsi+0x80>
    2f3a:	84 30       	cpi	r24, 0x04	; 4
    2f3c:	21 f4       	brne	.+8      	; 0x2f46 <__fixsfsi+0x38>
    2f3e:	8e 81       	ldd	r24, Y+6	; 0x06
    2f40:	88 23       	and	r24, r24
    2f42:	51 f1       	breq	.+84     	; 0x2f98 <__fixsfsi+0x8a>
    2f44:	2e c0       	rjmp	.+92     	; 0x2fa2 <__fixsfsi+0x94>
    2f46:	2f 81       	ldd	r18, Y+7	; 0x07
    2f48:	38 85       	ldd	r19, Y+8	; 0x08
    2f4a:	37 fd       	sbrc	r19, 7
    2f4c:	20 c0       	rjmp	.+64     	; 0x2f8e <__fixsfsi+0x80>
    2f4e:	6e 81       	ldd	r22, Y+6	; 0x06
    2f50:	2f 31       	cpi	r18, 0x1F	; 31
    2f52:	31 05       	cpc	r19, r1
    2f54:	1c f0       	brlt	.+6      	; 0x2f5c <__fixsfsi+0x4e>
    2f56:	66 23       	and	r22, r22
    2f58:	f9 f0       	breq	.+62     	; 0x2f98 <__fixsfsi+0x8a>
    2f5a:	23 c0       	rjmp	.+70     	; 0x2fa2 <__fixsfsi+0x94>
    2f5c:	8e e1       	ldi	r24, 0x1E	; 30
    2f5e:	90 e0       	ldi	r25, 0x00	; 0
    2f60:	82 1b       	sub	r24, r18
    2f62:	93 0b       	sbc	r25, r19
    2f64:	29 85       	ldd	r18, Y+9	; 0x09
    2f66:	3a 85       	ldd	r19, Y+10	; 0x0a
    2f68:	4b 85       	ldd	r20, Y+11	; 0x0b
    2f6a:	5c 85       	ldd	r21, Y+12	; 0x0c
    2f6c:	04 c0       	rjmp	.+8      	; 0x2f76 <__fixsfsi+0x68>
    2f6e:	56 95       	lsr	r21
    2f70:	47 95       	ror	r20
    2f72:	37 95       	ror	r19
    2f74:	27 95       	ror	r18
    2f76:	8a 95       	dec	r24
    2f78:	d2 f7       	brpl	.-12     	; 0x2f6e <__fixsfsi+0x60>
    2f7a:	66 23       	and	r22, r22
    2f7c:	b1 f0       	breq	.+44     	; 0x2faa <__fixsfsi+0x9c>
    2f7e:	50 95       	com	r21
    2f80:	40 95       	com	r20
    2f82:	30 95       	com	r19
    2f84:	21 95       	neg	r18
    2f86:	3f 4f       	sbci	r19, 0xFF	; 255
    2f88:	4f 4f       	sbci	r20, 0xFF	; 255
    2f8a:	5f 4f       	sbci	r21, 0xFF	; 255
    2f8c:	0e c0       	rjmp	.+28     	; 0x2faa <__fixsfsi+0x9c>
    2f8e:	20 e0       	ldi	r18, 0x00	; 0
    2f90:	30 e0       	ldi	r19, 0x00	; 0
    2f92:	40 e0       	ldi	r20, 0x00	; 0
    2f94:	50 e0       	ldi	r21, 0x00	; 0
    2f96:	09 c0       	rjmp	.+18     	; 0x2faa <__fixsfsi+0x9c>
    2f98:	2f ef       	ldi	r18, 0xFF	; 255
    2f9a:	3f ef       	ldi	r19, 0xFF	; 255
    2f9c:	4f ef       	ldi	r20, 0xFF	; 255
    2f9e:	5f e7       	ldi	r21, 0x7F	; 127
    2fa0:	04 c0       	rjmp	.+8      	; 0x2faa <__fixsfsi+0x9c>
    2fa2:	20 e0       	ldi	r18, 0x00	; 0
    2fa4:	30 e0       	ldi	r19, 0x00	; 0
    2fa6:	40 e0       	ldi	r20, 0x00	; 0
    2fa8:	50 e8       	ldi	r21, 0x80	; 128
    2faa:	b9 01       	movw	r22, r18
    2fac:	ca 01       	movw	r24, r20
    2fae:	2c 96       	adiw	r28, 0x0c	; 12
    2fb0:	e2 e0       	ldi	r30, 0x02	; 2
    2fb2:	0c 94 b0 2e 	jmp	0x5d60	; 0x5d60 <__epilogue_restores__+0x20>

00002fb6 <__floatunsisf>:
    2fb6:	a8 e0       	ldi	r26, 0x08	; 8
    2fb8:	b0 e0       	ldi	r27, 0x00	; 0
    2fba:	e1 ee       	ldi	r30, 0xE1	; 225
    2fbc:	f7 e1       	ldi	r31, 0x17	; 23
    2fbe:	0c 94 8c 2e 	jmp	0x5d18	; 0x5d18 <__prologue_saves__+0x10>
    2fc2:	7b 01       	movw	r14, r22
    2fc4:	8c 01       	movw	r16, r24
    2fc6:	61 15       	cp	r22, r1
    2fc8:	71 05       	cpc	r23, r1
    2fca:	81 05       	cpc	r24, r1
    2fcc:	91 05       	cpc	r25, r1
    2fce:	19 f4       	brne	.+6      	; 0x2fd6 <__floatunsisf+0x20>
    2fd0:	82 e0       	ldi	r24, 0x02	; 2
    2fd2:	89 83       	std	Y+1, r24	; 0x01
    2fd4:	60 c0       	rjmp	.+192    	; 0x3096 <__floatunsisf+0xe0>
    2fd6:	83 e0       	ldi	r24, 0x03	; 3
    2fd8:	89 83       	std	Y+1, r24	; 0x01
    2fda:	8e e1       	ldi	r24, 0x1E	; 30
    2fdc:	c8 2e       	mov	r12, r24
    2fde:	d1 2c       	mov	r13, r1
    2fe0:	dc 82       	std	Y+4, r13	; 0x04
    2fe2:	cb 82       	std	Y+3, r12	; 0x03
    2fe4:	ed 82       	std	Y+5, r14	; 0x05
    2fe6:	fe 82       	std	Y+6, r15	; 0x06
    2fe8:	0f 83       	std	Y+7, r16	; 0x07
    2fea:	18 87       	std	Y+8, r17	; 0x08
    2fec:	c8 01       	movw	r24, r16
    2fee:	b7 01       	movw	r22, r14
    2ff0:	0e 94 d3 18 	call	0x31a6	; 0x31a6 <__clzsi2>
    2ff4:	fc 01       	movw	r30, r24
    2ff6:	31 97       	sbiw	r30, 0x01	; 1
    2ff8:	f7 ff       	sbrs	r31, 7
    2ffa:	3b c0       	rjmp	.+118    	; 0x3072 <__floatunsisf+0xbc>
    2ffc:	22 27       	eor	r18, r18
    2ffe:	33 27       	eor	r19, r19
    3000:	2e 1b       	sub	r18, r30
    3002:	3f 0b       	sbc	r19, r31
    3004:	57 01       	movw	r10, r14
    3006:	68 01       	movw	r12, r16
    3008:	02 2e       	mov	r0, r18
    300a:	04 c0       	rjmp	.+8      	; 0x3014 <__floatunsisf+0x5e>
    300c:	d6 94       	lsr	r13
    300e:	c7 94       	ror	r12
    3010:	b7 94       	ror	r11
    3012:	a7 94       	ror	r10
    3014:	0a 94       	dec	r0
    3016:	d2 f7       	brpl	.-12     	; 0x300c <__floatunsisf+0x56>
    3018:	40 e0       	ldi	r20, 0x00	; 0
    301a:	50 e0       	ldi	r21, 0x00	; 0
    301c:	60 e0       	ldi	r22, 0x00	; 0
    301e:	70 e0       	ldi	r23, 0x00	; 0
    3020:	81 e0       	ldi	r24, 0x01	; 1
    3022:	90 e0       	ldi	r25, 0x00	; 0
    3024:	a0 e0       	ldi	r26, 0x00	; 0
    3026:	b0 e0       	ldi	r27, 0x00	; 0
    3028:	04 c0       	rjmp	.+8      	; 0x3032 <__floatunsisf+0x7c>
    302a:	88 0f       	add	r24, r24
    302c:	99 1f       	adc	r25, r25
    302e:	aa 1f       	adc	r26, r26
    3030:	bb 1f       	adc	r27, r27
    3032:	2a 95       	dec	r18
    3034:	d2 f7       	brpl	.-12     	; 0x302a <__floatunsisf+0x74>
    3036:	01 97       	sbiw	r24, 0x01	; 1
    3038:	a1 09       	sbc	r26, r1
    303a:	b1 09       	sbc	r27, r1
    303c:	8e 21       	and	r24, r14
    303e:	9f 21       	and	r25, r15
    3040:	a0 23       	and	r26, r16
    3042:	b1 23       	and	r27, r17
    3044:	00 97       	sbiw	r24, 0x00	; 0
    3046:	a1 05       	cpc	r26, r1
    3048:	b1 05       	cpc	r27, r1
    304a:	21 f0       	breq	.+8      	; 0x3054 <__floatunsisf+0x9e>
    304c:	41 e0       	ldi	r20, 0x01	; 1
    304e:	50 e0       	ldi	r21, 0x00	; 0
    3050:	60 e0       	ldi	r22, 0x00	; 0
    3052:	70 e0       	ldi	r23, 0x00	; 0
    3054:	4a 29       	or	r20, r10
    3056:	5b 29       	or	r21, r11
    3058:	6c 29       	or	r22, r12
    305a:	7d 29       	or	r23, r13
    305c:	4d 83       	std	Y+5, r20	; 0x05
    305e:	5e 83       	std	Y+6, r21	; 0x06
    3060:	6f 83       	std	Y+7, r22	; 0x07
    3062:	78 87       	std	Y+8, r23	; 0x08
    3064:	8e e1       	ldi	r24, 0x1E	; 30
    3066:	90 e0       	ldi	r25, 0x00	; 0
    3068:	8e 1b       	sub	r24, r30
    306a:	9f 0b       	sbc	r25, r31
    306c:	9c 83       	std	Y+4, r25	; 0x04
    306e:	8b 83       	std	Y+3, r24	; 0x03
    3070:	12 c0       	rjmp	.+36     	; 0x3096 <__floatunsisf+0xe0>
    3072:	30 97       	sbiw	r30, 0x00	; 0
    3074:	81 f0       	breq	.+32     	; 0x3096 <__floatunsisf+0xe0>
    3076:	0e 2e       	mov	r0, r30
    3078:	04 c0       	rjmp	.+8      	; 0x3082 <__floatunsisf+0xcc>
    307a:	ee 0c       	add	r14, r14
    307c:	ff 1c       	adc	r15, r15
    307e:	00 1f       	adc	r16, r16
    3080:	11 1f       	adc	r17, r17
    3082:	0a 94       	dec	r0
    3084:	d2 f7       	brpl	.-12     	; 0x307a <__floatunsisf+0xc4>
    3086:	ed 82       	std	Y+5, r14	; 0x05
    3088:	fe 82       	std	Y+6, r15	; 0x06
    308a:	0f 83       	std	Y+7, r16	; 0x07
    308c:	18 87       	std	Y+8, r17	; 0x08
    308e:	ce 1a       	sub	r12, r30
    3090:	df 0a       	sbc	r13, r31
    3092:	dc 82       	std	Y+4, r13	; 0x04
    3094:	cb 82       	std	Y+3, r12	; 0x03
    3096:	1a 82       	std	Y+2, r1	; 0x02
    3098:	ce 01       	movw	r24, r28
    309a:	01 96       	adiw	r24, 0x01	; 1
    309c:	0e 94 22 19 	call	0x3244	; 0x3244 <__pack_f>
    30a0:	28 96       	adiw	r28, 0x08	; 8
    30a2:	ea e0       	ldi	r30, 0x0A	; 10
    30a4:	0c 94 a8 2e 	jmp	0x5d50	; 0x5d50 <__epilogue_restores__+0x10>

000030a8 <__lshrdi3>:
    30a8:	ef 92       	push	r14
    30aa:	ff 92       	push	r15
    30ac:	0f 93       	push	r16
    30ae:	df 93       	push	r29
    30b0:	cf 93       	push	r28
    30b2:	cd b7       	in	r28, 0x3d	; 61
    30b4:	de b7       	in	r29, 0x3e	; 62
    30b6:	60 97       	sbiw	r28, 0x10	; 16
    30b8:	0f b6       	in	r0, 0x3f	; 63
    30ba:	f8 94       	cli
    30bc:	de bf       	out	0x3e, r29	; 62
    30be:	0f be       	out	0x3f, r0	; 63
    30c0:	cd bf       	out	0x3d, r28	; 61
    30c2:	a8 2f       	mov	r26, r24
    30c4:	00 23       	and	r16, r16
    30c6:	09 f4       	brne	.+2      	; 0x30ca <__lshrdi3+0x22>
    30c8:	61 c0       	rjmp	.+194    	; 0x318c <__lshrdi3+0xe4>
    30ca:	7e 01       	movw	r14, r28
    30cc:	08 94       	sec
    30ce:	e1 1c       	adc	r14, r1
    30d0:	f1 1c       	adc	r15, r1
    30d2:	88 e0       	ldi	r24, 0x08	; 8
    30d4:	f7 01       	movw	r30, r14
    30d6:	11 92       	st	Z+, r1
    30d8:	8a 95       	dec	r24
    30da:	e9 f7       	brne	.-6      	; 0x30d6 <__lshrdi3+0x2e>
    30dc:	29 83       	std	Y+1, r18	; 0x01
    30de:	3a 83       	std	Y+2, r19	; 0x02
    30e0:	4b 83       	std	Y+3, r20	; 0x03
    30e2:	5c 83       	std	Y+4, r21	; 0x04
    30e4:	6d 83       	std	Y+5, r22	; 0x05
    30e6:	7e 83       	std	Y+6, r23	; 0x06
    30e8:	af 83       	std	Y+7, r26	; 0x07
    30ea:	98 87       	std	Y+8, r25	; 0x08
    30ec:	80 e2       	ldi	r24, 0x20	; 32
    30ee:	80 1b       	sub	r24, r16
    30f0:	e8 2f       	mov	r30, r24
    30f2:	ff 27       	eor	r31, r31
    30f4:	e7 fd       	sbrc	r30, 7
    30f6:	f0 95       	com	r31
    30f8:	4d 81       	ldd	r20, Y+5	; 0x05
    30fa:	5e 81       	ldd	r21, Y+6	; 0x06
    30fc:	6f 81       	ldd	r22, Y+7	; 0x07
    30fe:	78 85       	ldd	r23, Y+8	; 0x08
    3100:	18 16       	cp	r1, r24
    3102:	84 f0       	brlt	.+32     	; 0x3124 <__lshrdi3+0x7c>
    3104:	1d 86       	std	Y+13, r1	; 0x0d
    3106:	1e 86       	std	Y+14, r1	; 0x0e
    3108:	1f 86       	std	Y+15, r1	; 0x0f
    310a:	18 8a       	std	Y+16, r1	; 0x10
    310c:	88 27       	eor	r24, r24
    310e:	99 27       	eor	r25, r25
    3110:	8e 1b       	sub	r24, r30
    3112:	9f 0b       	sbc	r25, r31
    3114:	04 c0       	rjmp	.+8      	; 0x311e <__lshrdi3+0x76>
    3116:	76 95       	lsr	r23
    3118:	67 95       	ror	r22
    311a:	57 95       	ror	r21
    311c:	47 95       	ror	r20
    311e:	8a 95       	dec	r24
    3120:	d2 f7       	brpl	.-12     	; 0x3116 <__lshrdi3+0x6e>
    3122:	28 c0       	rjmp	.+80     	; 0x3174 <__lshrdi3+0xcc>
    3124:	20 2f       	mov	r18, r16
    3126:	33 27       	eor	r19, r19
    3128:	27 fd       	sbrc	r18, 7
    312a:	30 95       	com	r19
    312c:	db 01       	movw	r26, r22
    312e:	ca 01       	movw	r24, r20
    3130:	02 2e       	mov	r0, r18
    3132:	04 c0       	rjmp	.+8      	; 0x313c <__lshrdi3+0x94>
    3134:	b6 95       	lsr	r27
    3136:	a7 95       	ror	r26
    3138:	97 95       	ror	r25
    313a:	87 95       	ror	r24
    313c:	0a 94       	dec	r0
    313e:	d2 f7       	brpl	.-12     	; 0x3134 <__lshrdi3+0x8c>
    3140:	8d 87       	std	Y+13, r24	; 0x0d
    3142:	9e 87       	std	Y+14, r25	; 0x0e
    3144:	af 87       	std	Y+15, r26	; 0x0f
    3146:	b8 8b       	std	Y+16, r27	; 0x10
    3148:	04 c0       	rjmp	.+8      	; 0x3152 <__lshrdi3+0xaa>
    314a:	44 0f       	add	r20, r20
    314c:	55 1f       	adc	r21, r21
    314e:	66 1f       	adc	r22, r22
    3150:	77 1f       	adc	r23, r23
    3152:	ea 95       	dec	r30
    3154:	d2 f7       	brpl	.-12     	; 0x314a <__lshrdi3+0xa2>
    3156:	89 81       	ldd	r24, Y+1	; 0x01
    3158:	9a 81       	ldd	r25, Y+2	; 0x02
    315a:	ab 81       	ldd	r26, Y+3	; 0x03
    315c:	bc 81       	ldd	r27, Y+4	; 0x04
    315e:	04 c0       	rjmp	.+8      	; 0x3168 <__lshrdi3+0xc0>
    3160:	b6 95       	lsr	r27
    3162:	a7 95       	ror	r26
    3164:	97 95       	ror	r25
    3166:	87 95       	ror	r24
    3168:	2a 95       	dec	r18
    316a:	d2 f7       	brpl	.-12     	; 0x3160 <__lshrdi3+0xb8>
    316c:	48 2b       	or	r20, r24
    316e:	59 2b       	or	r21, r25
    3170:	6a 2b       	or	r22, r26
    3172:	7b 2b       	or	r23, r27
    3174:	49 87       	std	Y+9, r20	; 0x09
    3176:	5a 87       	std	Y+10, r21	; 0x0a
    3178:	6b 87       	std	Y+11, r22	; 0x0b
    317a:	7c 87       	std	Y+12, r23	; 0x0c
    317c:	29 85       	ldd	r18, Y+9	; 0x09
    317e:	3a 85       	ldd	r19, Y+10	; 0x0a
    3180:	4b 85       	ldd	r20, Y+11	; 0x0b
    3182:	5c 85       	ldd	r21, Y+12	; 0x0c
    3184:	6d 85       	ldd	r22, Y+13	; 0x0d
    3186:	7e 85       	ldd	r23, Y+14	; 0x0e
    3188:	af 85       	ldd	r26, Y+15	; 0x0f
    318a:	98 89       	ldd	r25, Y+16	; 0x10
    318c:	8a 2f       	mov	r24, r26
    318e:	60 96       	adiw	r28, 0x10	; 16
    3190:	0f b6       	in	r0, 0x3f	; 63
    3192:	f8 94       	cli
    3194:	de bf       	out	0x3e, r29	; 62
    3196:	0f be       	out	0x3f, r0	; 63
    3198:	cd bf       	out	0x3d, r28	; 61
    319a:	cf 91       	pop	r28
    319c:	df 91       	pop	r29
    319e:	0f 91       	pop	r16
    31a0:	ff 90       	pop	r15
    31a2:	ef 90       	pop	r14
    31a4:	08 95       	ret

000031a6 <__clzsi2>:
    31a6:	ef 92       	push	r14
    31a8:	ff 92       	push	r15
    31aa:	0f 93       	push	r16
    31ac:	1f 93       	push	r17
    31ae:	7b 01       	movw	r14, r22
    31b0:	8c 01       	movw	r16, r24
    31b2:	80 e0       	ldi	r24, 0x00	; 0
    31b4:	e8 16       	cp	r14, r24
    31b6:	80 e0       	ldi	r24, 0x00	; 0
    31b8:	f8 06       	cpc	r15, r24
    31ba:	81 e0       	ldi	r24, 0x01	; 1
    31bc:	08 07       	cpc	r16, r24
    31be:	80 e0       	ldi	r24, 0x00	; 0
    31c0:	18 07       	cpc	r17, r24
    31c2:	88 f4       	brcc	.+34     	; 0x31e6 <__clzsi2+0x40>
    31c4:	8f ef       	ldi	r24, 0xFF	; 255
    31c6:	e8 16       	cp	r14, r24
    31c8:	f1 04       	cpc	r15, r1
    31ca:	01 05       	cpc	r16, r1
    31cc:	11 05       	cpc	r17, r1
    31ce:	31 f0       	breq	.+12     	; 0x31dc <__clzsi2+0x36>
    31d0:	28 f0       	brcs	.+10     	; 0x31dc <__clzsi2+0x36>
    31d2:	88 e0       	ldi	r24, 0x08	; 8
    31d4:	90 e0       	ldi	r25, 0x00	; 0
    31d6:	a0 e0       	ldi	r26, 0x00	; 0
    31d8:	b0 e0       	ldi	r27, 0x00	; 0
    31da:	17 c0       	rjmp	.+46     	; 0x320a <__clzsi2+0x64>
    31dc:	80 e0       	ldi	r24, 0x00	; 0
    31de:	90 e0       	ldi	r25, 0x00	; 0
    31e0:	a0 e0       	ldi	r26, 0x00	; 0
    31e2:	b0 e0       	ldi	r27, 0x00	; 0
    31e4:	12 c0       	rjmp	.+36     	; 0x320a <__clzsi2+0x64>
    31e6:	80 e0       	ldi	r24, 0x00	; 0
    31e8:	e8 16       	cp	r14, r24
    31ea:	80 e0       	ldi	r24, 0x00	; 0
    31ec:	f8 06       	cpc	r15, r24
    31ee:	80 e0       	ldi	r24, 0x00	; 0
    31f0:	08 07       	cpc	r16, r24
    31f2:	81 e0       	ldi	r24, 0x01	; 1
    31f4:	18 07       	cpc	r17, r24
    31f6:	28 f0       	brcs	.+10     	; 0x3202 <__clzsi2+0x5c>
    31f8:	88 e1       	ldi	r24, 0x18	; 24
    31fa:	90 e0       	ldi	r25, 0x00	; 0
    31fc:	a0 e0       	ldi	r26, 0x00	; 0
    31fe:	b0 e0       	ldi	r27, 0x00	; 0
    3200:	04 c0       	rjmp	.+8      	; 0x320a <__clzsi2+0x64>
    3202:	80 e1       	ldi	r24, 0x10	; 16
    3204:	90 e0       	ldi	r25, 0x00	; 0
    3206:	a0 e0       	ldi	r26, 0x00	; 0
    3208:	b0 e0       	ldi	r27, 0x00	; 0
    320a:	20 e2       	ldi	r18, 0x20	; 32
    320c:	30 e0       	ldi	r19, 0x00	; 0
    320e:	40 e0       	ldi	r20, 0x00	; 0
    3210:	50 e0       	ldi	r21, 0x00	; 0
    3212:	28 1b       	sub	r18, r24
    3214:	39 0b       	sbc	r19, r25
    3216:	4a 0b       	sbc	r20, r26
    3218:	5b 0b       	sbc	r21, r27
    321a:	04 c0       	rjmp	.+8      	; 0x3224 <__clzsi2+0x7e>
    321c:	16 95       	lsr	r17
    321e:	07 95       	ror	r16
    3220:	f7 94       	ror	r15
    3222:	e7 94       	ror	r14
    3224:	8a 95       	dec	r24
    3226:	d2 f7       	brpl	.-12     	; 0x321c <__clzsi2+0x76>
    3228:	f7 01       	movw	r30, r14
    322a:	e2 59       	subi	r30, 0x92	; 146
    322c:	ff 4f       	sbci	r31, 0xFF	; 255
    322e:	80 81       	ld	r24, Z
    3230:	28 1b       	sub	r18, r24
    3232:	31 09       	sbc	r19, r1
    3234:	41 09       	sbc	r20, r1
    3236:	51 09       	sbc	r21, r1
    3238:	c9 01       	movw	r24, r18
    323a:	1f 91       	pop	r17
    323c:	0f 91       	pop	r16
    323e:	ff 90       	pop	r15
    3240:	ef 90       	pop	r14
    3242:	08 95       	ret

00003244 <__pack_f>:
    3244:	df 92       	push	r13
    3246:	ef 92       	push	r14
    3248:	ff 92       	push	r15
    324a:	0f 93       	push	r16
    324c:	1f 93       	push	r17
    324e:	fc 01       	movw	r30, r24
    3250:	e4 80       	ldd	r14, Z+4	; 0x04
    3252:	f5 80       	ldd	r15, Z+5	; 0x05
    3254:	06 81       	ldd	r16, Z+6	; 0x06
    3256:	17 81       	ldd	r17, Z+7	; 0x07
    3258:	d1 80       	ldd	r13, Z+1	; 0x01
    325a:	80 81       	ld	r24, Z
    325c:	82 30       	cpi	r24, 0x02	; 2
    325e:	48 f4       	brcc	.+18     	; 0x3272 <__pack_f+0x2e>
    3260:	80 e0       	ldi	r24, 0x00	; 0
    3262:	90 e0       	ldi	r25, 0x00	; 0
    3264:	a0 e1       	ldi	r26, 0x10	; 16
    3266:	b0 e0       	ldi	r27, 0x00	; 0
    3268:	e8 2a       	or	r14, r24
    326a:	f9 2a       	or	r15, r25
    326c:	0a 2b       	or	r16, r26
    326e:	1b 2b       	or	r17, r27
    3270:	a5 c0       	rjmp	.+330    	; 0x33bc <__pack_f+0x178>
    3272:	84 30       	cpi	r24, 0x04	; 4
    3274:	09 f4       	brne	.+2      	; 0x3278 <__pack_f+0x34>
    3276:	9f c0       	rjmp	.+318    	; 0x33b6 <__pack_f+0x172>
    3278:	82 30       	cpi	r24, 0x02	; 2
    327a:	21 f4       	brne	.+8      	; 0x3284 <__pack_f+0x40>
    327c:	ee 24       	eor	r14, r14
    327e:	ff 24       	eor	r15, r15
    3280:	87 01       	movw	r16, r14
    3282:	05 c0       	rjmp	.+10     	; 0x328e <__pack_f+0x4a>
    3284:	e1 14       	cp	r14, r1
    3286:	f1 04       	cpc	r15, r1
    3288:	01 05       	cpc	r16, r1
    328a:	11 05       	cpc	r17, r1
    328c:	19 f4       	brne	.+6      	; 0x3294 <__pack_f+0x50>
    328e:	e0 e0       	ldi	r30, 0x00	; 0
    3290:	f0 e0       	ldi	r31, 0x00	; 0
    3292:	96 c0       	rjmp	.+300    	; 0x33c0 <__pack_f+0x17c>
    3294:	62 81       	ldd	r22, Z+2	; 0x02
    3296:	73 81       	ldd	r23, Z+3	; 0x03
    3298:	9f ef       	ldi	r25, 0xFF	; 255
    329a:	62 38       	cpi	r22, 0x82	; 130
    329c:	79 07       	cpc	r23, r25
    329e:	0c f0       	brlt	.+2      	; 0x32a2 <__pack_f+0x5e>
    32a0:	5b c0       	rjmp	.+182    	; 0x3358 <__pack_f+0x114>
    32a2:	22 e8       	ldi	r18, 0x82	; 130
    32a4:	3f ef       	ldi	r19, 0xFF	; 255
    32a6:	26 1b       	sub	r18, r22
    32a8:	37 0b       	sbc	r19, r23
    32aa:	2a 31       	cpi	r18, 0x1A	; 26
    32ac:	31 05       	cpc	r19, r1
    32ae:	2c f0       	brlt	.+10     	; 0x32ba <__pack_f+0x76>
    32b0:	20 e0       	ldi	r18, 0x00	; 0
    32b2:	30 e0       	ldi	r19, 0x00	; 0
    32b4:	40 e0       	ldi	r20, 0x00	; 0
    32b6:	50 e0       	ldi	r21, 0x00	; 0
    32b8:	2a c0       	rjmp	.+84     	; 0x330e <__pack_f+0xca>
    32ba:	b8 01       	movw	r22, r16
    32bc:	a7 01       	movw	r20, r14
    32be:	02 2e       	mov	r0, r18
    32c0:	04 c0       	rjmp	.+8      	; 0x32ca <__pack_f+0x86>
    32c2:	76 95       	lsr	r23
    32c4:	67 95       	ror	r22
    32c6:	57 95       	ror	r21
    32c8:	47 95       	ror	r20
    32ca:	0a 94       	dec	r0
    32cc:	d2 f7       	brpl	.-12     	; 0x32c2 <__pack_f+0x7e>
    32ce:	81 e0       	ldi	r24, 0x01	; 1
    32d0:	90 e0       	ldi	r25, 0x00	; 0
    32d2:	a0 e0       	ldi	r26, 0x00	; 0
    32d4:	b0 e0       	ldi	r27, 0x00	; 0
    32d6:	04 c0       	rjmp	.+8      	; 0x32e0 <__pack_f+0x9c>
    32d8:	88 0f       	add	r24, r24
    32da:	99 1f       	adc	r25, r25
    32dc:	aa 1f       	adc	r26, r26
    32de:	bb 1f       	adc	r27, r27
    32e0:	2a 95       	dec	r18
    32e2:	d2 f7       	brpl	.-12     	; 0x32d8 <__pack_f+0x94>
    32e4:	01 97       	sbiw	r24, 0x01	; 1
    32e6:	a1 09       	sbc	r26, r1
    32e8:	b1 09       	sbc	r27, r1
    32ea:	8e 21       	and	r24, r14
    32ec:	9f 21       	and	r25, r15
    32ee:	a0 23       	and	r26, r16
    32f0:	b1 23       	and	r27, r17
    32f2:	00 97       	sbiw	r24, 0x00	; 0
    32f4:	a1 05       	cpc	r26, r1
    32f6:	b1 05       	cpc	r27, r1
    32f8:	21 f0       	breq	.+8      	; 0x3302 <__pack_f+0xbe>
    32fa:	81 e0       	ldi	r24, 0x01	; 1
    32fc:	90 e0       	ldi	r25, 0x00	; 0
    32fe:	a0 e0       	ldi	r26, 0x00	; 0
    3300:	b0 e0       	ldi	r27, 0x00	; 0
    3302:	9a 01       	movw	r18, r20
    3304:	ab 01       	movw	r20, r22
    3306:	28 2b       	or	r18, r24
    3308:	39 2b       	or	r19, r25
    330a:	4a 2b       	or	r20, r26
    330c:	5b 2b       	or	r21, r27
    330e:	da 01       	movw	r26, r20
    3310:	c9 01       	movw	r24, r18
    3312:	8f 77       	andi	r24, 0x7F	; 127
    3314:	90 70       	andi	r25, 0x00	; 0
    3316:	a0 70       	andi	r26, 0x00	; 0
    3318:	b0 70       	andi	r27, 0x00	; 0
    331a:	80 34       	cpi	r24, 0x40	; 64
    331c:	91 05       	cpc	r25, r1
    331e:	a1 05       	cpc	r26, r1
    3320:	b1 05       	cpc	r27, r1
    3322:	39 f4       	brne	.+14     	; 0x3332 <__pack_f+0xee>
    3324:	27 ff       	sbrs	r18, 7
    3326:	09 c0       	rjmp	.+18     	; 0x333a <__pack_f+0xf6>
    3328:	20 5c       	subi	r18, 0xC0	; 192
    332a:	3f 4f       	sbci	r19, 0xFF	; 255
    332c:	4f 4f       	sbci	r20, 0xFF	; 255
    332e:	5f 4f       	sbci	r21, 0xFF	; 255
    3330:	04 c0       	rjmp	.+8      	; 0x333a <__pack_f+0xf6>
    3332:	21 5c       	subi	r18, 0xC1	; 193
    3334:	3f 4f       	sbci	r19, 0xFF	; 255
    3336:	4f 4f       	sbci	r20, 0xFF	; 255
    3338:	5f 4f       	sbci	r21, 0xFF	; 255
    333a:	e0 e0       	ldi	r30, 0x00	; 0
    333c:	f0 e0       	ldi	r31, 0x00	; 0
    333e:	20 30       	cpi	r18, 0x00	; 0
    3340:	a0 e0       	ldi	r26, 0x00	; 0
    3342:	3a 07       	cpc	r19, r26
    3344:	a0 e0       	ldi	r26, 0x00	; 0
    3346:	4a 07       	cpc	r20, r26
    3348:	a0 e4       	ldi	r26, 0x40	; 64
    334a:	5a 07       	cpc	r21, r26
    334c:	10 f0       	brcs	.+4      	; 0x3352 <__pack_f+0x10e>
    334e:	e1 e0       	ldi	r30, 0x01	; 1
    3350:	f0 e0       	ldi	r31, 0x00	; 0
    3352:	79 01       	movw	r14, r18
    3354:	8a 01       	movw	r16, r20
    3356:	27 c0       	rjmp	.+78     	; 0x33a6 <__pack_f+0x162>
    3358:	60 38       	cpi	r22, 0x80	; 128
    335a:	71 05       	cpc	r23, r1
    335c:	64 f5       	brge	.+88     	; 0x33b6 <__pack_f+0x172>
    335e:	fb 01       	movw	r30, r22
    3360:	e1 58       	subi	r30, 0x81	; 129
    3362:	ff 4f       	sbci	r31, 0xFF	; 255
    3364:	d8 01       	movw	r26, r16
    3366:	c7 01       	movw	r24, r14
    3368:	8f 77       	andi	r24, 0x7F	; 127
    336a:	90 70       	andi	r25, 0x00	; 0
    336c:	a0 70       	andi	r26, 0x00	; 0
    336e:	b0 70       	andi	r27, 0x00	; 0
    3370:	80 34       	cpi	r24, 0x40	; 64
    3372:	91 05       	cpc	r25, r1
    3374:	a1 05       	cpc	r26, r1
    3376:	b1 05       	cpc	r27, r1
    3378:	39 f4       	brne	.+14     	; 0x3388 <__pack_f+0x144>
    337a:	e7 fe       	sbrs	r14, 7
    337c:	0d c0       	rjmp	.+26     	; 0x3398 <__pack_f+0x154>
    337e:	80 e4       	ldi	r24, 0x40	; 64
    3380:	90 e0       	ldi	r25, 0x00	; 0
    3382:	a0 e0       	ldi	r26, 0x00	; 0
    3384:	b0 e0       	ldi	r27, 0x00	; 0
    3386:	04 c0       	rjmp	.+8      	; 0x3390 <__pack_f+0x14c>
    3388:	8f e3       	ldi	r24, 0x3F	; 63
    338a:	90 e0       	ldi	r25, 0x00	; 0
    338c:	a0 e0       	ldi	r26, 0x00	; 0
    338e:	b0 e0       	ldi	r27, 0x00	; 0
    3390:	e8 0e       	add	r14, r24
    3392:	f9 1e       	adc	r15, r25
    3394:	0a 1f       	adc	r16, r26
    3396:	1b 1f       	adc	r17, r27
    3398:	17 ff       	sbrs	r17, 7
    339a:	05 c0       	rjmp	.+10     	; 0x33a6 <__pack_f+0x162>
    339c:	16 95       	lsr	r17
    339e:	07 95       	ror	r16
    33a0:	f7 94       	ror	r15
    33a2:	e7 94       	ror	r14
    33a4:	31 96       	adiw	r30, 0x01	; 1
    33a6:	87 e0       	ldi	r24, 0x07	; 7
    33a8:	16 95       	lsr	r17
    33aa:	07 95       	ror	r16
    33ac:	f7 94       	ror	r15
    33ae:	e7 94       	ror	r14
    33b0:	8a 95       	dec	r24
    33b2:	d1 f7       	brne	.-12     	; 0x33a8 <__pack_f+0x164>
    33b4:	05 c0       	rjmp	.+10     	; 0x33c0 <__pack_f+0x17c>
    33b6:	ee 24       	eor	r14, r14
    33b8:	ff 24       	eor	r15, r15
    33ba:	87 01       	movw	r16, r14
    33bc:	ef ef       	ldi	r30, 0xFF	; 255
    33be:	f0 e0       	ldi	r31, 0x00	; 0
    33c0:	6e 2f       	mov	r22, r30
    33c2:	67 95       	ror	r22
    33c4:	66 27       	eor	r22, r22
    33c6:	67 95       	ror	r22
    33c8:	90 2f       	mov	r25, r16
    33ca:	9f 77       	andi	r25, 0x7F	; 127
    33cc:	d7 94       	ror	r13
    33ce:	dd 24       	eor	r13, r13
    33d0:	d7 94       	ror	r13
    33d2:	8e 2f       	mov	r24, r30
    33d4:	86 95       	lsr	r24
    33d6:	49 2f       	mov	r20, r25
    33d8:	46 2b       	or	r20, r22
    33da:	58 2f       	mov	r21, r24
    33dc:	5d 29       	or	r21, r13
    33de:	b7 01       	movw	r22, r14
    33e0:	ca 01       	movw	r24, r20
    33e2:	1f 91       	pop	r17
    33e4:	0f 91       	pop	r16
    33e6:	ff 90       	pop	r15
    33e8:	ef 90       	pop	r14
    33ea:	df 90       	pop	r13
    33ec:	08 95       	ret

000033ee <__unpack_f>:
    33ee:	fc 01       	movw	r30, r24
    33f0:	db 01       	movw	r26, r22
    33f2:	40 81       	ld	r20, Z
    33f4:	51 81       	ldd	r21, Z+1	; 0x01
    33f6:	22 81       	ldd	r18, Z+2	; 0x02
    33f8:	62 2f       	mov	r22, r18
    33fa:	6f 77       	andi	r22, 0x7F	; 127
    33fc:	70 e0       	ldi	r23, 0x00	; 0
    33fe:	22 1f       	adc	r18, r18
    3400:	22 27       	eor	r18, r18
    3402:	22 1f       	adc	r18, r18
    3404:	93 81       	ldd	r25, Z+3	; 0x03
    3406:	89 2f       	mov	r24, r25
    3408:	88 0f       	add	r24, r24
    340a:	82 2b       	or	r24, r18
    340c:	28 2f       	mov	r18, r24
    340e:	30 e0       	ldi	r19, 0x00	; 0
    3410:	99 1f       	adc	r25, r25
    3412:	99 27       	eor	r25, r25
    3414:	99 1f       	adc	r25, r25
    3416:	11 96       	adiw	r26, 0x01	; 1
    3418:	9c 93       	st	X, r25
    341a:	11 97       	sbiw	r26, 0x01	; 1
    341c:	21 15       	cp	r18, r1
    341e:	31 05       	cpc	r19, r1
    3420:	a9 f5       	brne	.+106    	; 0x348c <__unpack_f+0x9e>
    3422:	41 15       	cp	r20, r1
    3424:	51 05       	cpc	r21, r1
    3426:	61 05       	cpc	r22, r1
    3428:	71 05       	cpc	r23, r1
    342a:	11 f4       	brne	.+4      	; 0x3430 <__unpack_f+0x42>
    342c:	82 e0       	ldi	r24, 0x02	; 2
    342e:	37 c0       	rjmp	.+110    	; 0x349e <__unpack_f+0xb0>
    3430:	82 e8       	ldi	r24, 0x82	; 130
    3432:	9f ef       	ldi	r25, 0xFF	; 255
    3434:	13 96       	adiw	r26, 0x03	; 3
    3436:	9c 93       	st	X, r25
    3438:	8e 93       	st	-X, r24
    343a:	12 97       	sbiw	r26, 0x02	; 2
    343c:	9a 01       	movw	r18, r20
    343e:	ab 01       	movw	r20, r22
    3440:	67 e0       	ldi	r22, 0x07	; 7
    3442:	22 0f       	add	r18, r18
    3444:	33 1f       	adc	r19, r19
    3446:	44 1f       	adc	r20, r20
    3448:	55 1f       	adc	r21, r21
    344a:	6a 95       	dec	r22
    344c:	d1 f7       	brne	.-12     	; 0x3442 <__unpack_f+0x54>
    344e:	83 e0       	ldi	r24, 0x03	; 3
    3450:	8c 93       	st	X, r24
    3452:	0d c0       	rjmp	.+26     	; 0x346e <__unpack_f+0x80>
    3454:	22 0f       	add	r18, r18
    3456:	33 1f       	adc	r19, r19
    3458:	44 1f       	adc	r20, r20
    345a:	55 1f       	adc	r21, r21
    345c:	12 96       	adiw	r26, 0x02	; 2
    345e:	8d 91       	ld	r24, X+
    3460:	9c 91       	ld	r25, X
    3462:	13 97       	sbiw	r26, 0x03	; 3
    3464:	01 97       	sbiw	r24, 0x01	; 1
    3466:	13 96       	adiw	r26, 0x03	; 3
    3468:	9c 93       	st	X, r25
    346a:	8e 93       	st	-X, r24
    346c:	12 97       	sbiw	r26, 0x02	; 2
    346e:	20 30       	cpi	r18, 0x00	; 0
    3470:	80 e0       	ldi	r24, 0x00	; 0
    3472:	38 07       	cpc	r19, r24
    3474:	80 e0       	ldi	r24, 0x00	; 0
    3476:	48 07       	cpc	r20, r24
    3478:	80 e4       	ldi	r24, 0x40	; 64
    347a:	58 07       	cpc	r21, r24
    347c:	58 f3       	brcs	.-42     	; 0x3454 <__unpack_f+0x66>
    347e:	14 96       	adiw	r26, 0x04	; 4
    3480:	2d 93       	st	X+, r18
    3482:	3d 93       	st	X+, r19
    3484:	4d 93       	st	X+, r20
    3486:	5c 93       	st	X, r21
    3488:	17 97       	sbiw	r26, 0x07	; 7
    348a:	08 95       	ret
    348c:	2f 3f       	cpi	r18, 0xFF	; 255
    348e:	31 05       	cpc	r19, r1
    3490:	79 f4       	brne	.+30     	; 0x34b0 <__unpack_f+0xc2>
    3492:	41 15       	cp	r20, r1
    3494:	51 05       	cpc	r21, r1
    3496:	61 05       	cpc	r22, r1
    3498:	71 05       	cpc	r23, r1
    349a:	19 f4       	brne	.+6      	; 0x34a2 <__unpack_f+0xb4>
    349c:	84 e0       	ldi	r24, 0x04	; 4
    349e:	8c 93       	st	X, r24
    34a0:	08 95       	ret
    34a2:	64 ff       	sbrs	r22, 4
    34a4:	03 c0       	rjmp	.+6      	; 0x34ac <__unpack_f+0xbe>
    34a6:	81 e0       	ldi	r24, 0x01	; 1
    34a8:	8c 93       	st	X, r24
    34aa:	12 c0       	rjmp	.+36     	; 0x34d0 <__unpack_f+0xe2>
    34ac:	1c 92       	st	X, r1
    34ae:	10 c0       	rjmp	.+32     	; 0x34d0 <__unpack_f+0xe2>
    34b0:	2f 57       	subi	r18, 0x7F	; 127
    34b2:	30 40       	sbci	r19, 0x00	; 0
    34b4:	13 96       	adiw	r26, 0x03	; 3
    34b6:	3c 93       	st	X, r19
    34b8:	2e 93       	st	-X, r18
    34ba:	12 97       	sbiw	r26, 0x02	; 2
    34bc:	83 e0       	ldi	r24, 0x03	; 3
    34be:	8c 93       	st	X, r24
    34c0:	87 e0       	ldi	r24, 0x07	; 7
    34c2:	44 0f       	add	r20, r20
    34c4:	55 1f       	adc	r21, r21
    34c6:	66 1f       	adc	r22, r22
    34c8:	77 1f       	adc	r23, r23
    34ca:	8a 95       	dec	r24
    34cc:	d1 f7       	brne	.-12     	; 0x34c2 <__unpack_f+0xd4>
    34ce:	70 64       	ori	r23, 0x40	; 64
    34d0:	14 96       	adiw	r26, 0x04	; 4
    34d2:	4d 93       	st	X+, r20
    34d4:	5d 93       	st	X+, r21
    34d6:	6d 93       	st	X+, r22
    34d8:	7c 93       	st	X, r23
    34da:	17 97       	sbiw	r26, 0x07	; 7
    34dc:	08 95       	ret

000034de <__fpcmp_parts_f>:
    34de:	1f 93       	push	r17
    34e0:	dc 01       	movw	r26, r24
    34e2:	fb 01       	movw	r30, r22
    34e4:	9c 91       	ld	r25, X
    34e6:	92 30       	cpi	r25, 0x02	; 2
    34e8:	08 f4       	brcc	.+2      	; 0x34ec <__fpcmp_parts_f+0xe>
    34ea:	47 c0       	rjmp	.+142    	; 0x357a <__fpcmp_parts_f+0x9c>
    34ec:	80 81       	ld	r24, Z
    34ee:	82 30       	cpi	r24, 0x02	; 2
    34f0:	08 f4       	brcc	.+2      	; 0x34f4 <__fpcmp_parts_f+0x16>
    34f2:	43 c0       	rjmp	.+134    	; 0x357a <__fpcmp_parts_f+0x9c>
    34f4:	94 30       	cpi	r25, 0x04	; 4
    34f6:	51 f4       	brne	.+20     	; 0x350c <__fpcmp_parts_f+0x2e>
    34f8:	11 96       	adiw	r26, 0x01	; 1
    34fa:	1c 91       	ld	r17, X
    34fc:	84 30       	cpi	r24, 0x04	; 4
    34fe:	99 f5       	brne	.+102    	; 0x3566 <__fpcmp_parts_f+0x88>
    3500:	81 81       	ldd	r24, Z+1	; 0x01
    3502:	68 2f       	mov	r22, r24
    3504:	70 e0       	ldi	r23, 0x00	; 0
    3506:	61 1b       	sub	r22, r17
    3508:	71 09       	sbc	r23, r1
    350a:	3f c0       	rjmp	.+126    	; 0x358a <__fpcmp_parts_f+0xac>
    350c:	84 30       	cpi	r24, 0x04	; 4
    350e:	21 f0       	breq	.+8      	; 0x3518 <__fpcmp_parts_f+0x3a>
    3510:	92 30       	cpi	r25, 0x02	; 2
    3512:	31 f4       	brne	.+12     	; 0x3520 <__fpcmp_parts_f+0x42>
    3514:	82 30       	cpi	r24, 0x02	; 2
    3516:	b9 f1       	breq	.+110    	; 0x3586 <__fpcmp_parts_f+0xa8>
    3518:	81 81       	ldd	r24, Z+1	; 0x01
    351a:	88 23       	and	r24, r24
    351c:	89 f1       	breq	.+98     	; 0x3580 <__fpcmp_parts_f+0xa2>
    351e:	2d c0       	rjmp	.+90     	; 0x357a <__fpcmp_parts_f+0x9c>
    3520:	11 96       	adiw	r26, 0x01	; 1
    3522:	1c 91       	ld	r17, X
    3524:	11 97       	sbiw	r26, 0x01	; 1
    3526:	82 30       	cpi	r24, 0x02	; 2
    3528:	f1 f0       	breq	.+60     	; 0x3566 <__fpcmp_parts_f+0x88>
    352a:	81 81       	ldd	r24, Z+1	; 0x01
    352c:	18 17       	cp	r17, r24
    352e:	d9 f4       	brne	.+54     	; 0x3566 <__fpcmp_parts_f+0x88>
    3530:	12 96       	adiw	r26, 0x02	; 2
    3532:	2d 91       	ld	r18, X+
    3534:	3c 91       	ld	r19, X
    3536:	13 97       	sbiw	r26, 0x03	; 3
    3538:	82 81       	ldd	r24, Z+2	; 0x02
    353a:	93 81       	ldd	r25, Z+3	; 0x03
    353c:	82 17       	cp	r24, r18
    353e:	93 07       	cpc	r25, r19
    3540:	94 f0       	brlt	.+36     	; 0x3566 <__fpcmp_parts_f+0x88>
    3542:	28 17       	cp	r18, r24
    3544:	39 07       	cpc	r19, r25
    3546:	bc f0       	brlt	.+46     	; 0x3576 <__fpcmp_parts_f+0x98>
    3548:	14 96       	adiw	r26, 0x04	; 4
    354a:	8d 91       	ld	r24, X+
    354c:	9d 91       	ld	r25, X+
    354e:	0d 90       	ld	r0, X+
    3550:	bc 91       	ld	r27, X
    3552:	a0 2d       	mov	r26, r0
    3554:	24 81       	ldd	r18, Z+4	; 0x04
    3556:	35 81       	ldd	r19, Z+5	; 0x05
    3558:	46 81       	ldd	r20, Z+6	; 0x06
    355a:	57 81       	ldd	r21, Z+7	; 0x07
    355c:	28 17       	cp	r18, r24
    355e:	39 07       	cpc	r19, r25
    3560:	4a 07       	cpc	r20, r26
    3562:	5b 07       	cpc	r21, r27
    3564:	18 f4       	brcc	.+6      	; 0x356c <__fpcmp_parts_f+0x8e>
    3566:	11 23       	and	r17, r17
    3568:	41 f0       	breq	.+16     	; 0x357a <__fpcmp_parts_f+0x9c>
    356a:	0a c0       	rjmp	.+20     	; 0x3580 <__fpcmp_parts_f+0xa2>
    356c:	82 17       	cp	r24, r18
    356e:	93 07       	cpc	r25, r19
    3570:	a4 07       	cpc	r26, r20
    3572:	b5 07       	cpc	r27, r21
    3574:	40 f4       	brcc	.+16     	; 0x3586 <__fpcmp_parts_f+0xa8>
    3576:	11 23       	and	r17, r17
    3578:	19 f0       	breq	.+6      	; 0x3580 <__fpcmp_parts_f+0xa2>
    357a:	61 e0       	ldi	r22, 0x01	; 1
    357c:	70 e0       	ldi	r23, 0x00	; 0
    357e:	05 c0       	rjmp	.+10     	; 0x358a <__fpcmp_parts_f+0xac>
    3580:	6f ef       	ldi	r22, 0xFF	; 255
    3582:	7f ef       	ldi	r23, 0xFF	; 255
    3584:	02 c0       	rjmp	.+4      	; 0x358a <__fpcmp_parts_f+0xac>
    3586:	60 e0       	ldi	r22, 0x00	; 0
    3588:	70 e0       	ldi	r23, 0x00	; 0
    358a:	cb 01       	movw	r24, r22
    358c:	1f 91       	pop	r17
    358e:	08 95       	ret

00003590 <DIO_enuInit>:
#include "DIO_config.h"
#include "DIO_priv.h"



ES_t DIO_enuInit(void){
    3590:	df 93       	push	r29
    3592:	cf 93       	push	r28
    3594:	0f 92       	push	r0
    3596:	cd b7       	in	r28, 0x3d	; 61
    3598:	de b7       	in	r29, 0x3e	; 62
	ES_t Local_enuErrorState = ES_NOK;
    359a:	81 e0       	ldi	r24, 0x01	; 1
    359c:	89 83       	std	Y+1, r24	; 0x01

	DDRA = CONC(DIO_PA_PIN0_DIR, DIO_PA_PIN1_DIR, DIO_PA_PIN2_DIR, DIO_PA_PIN3_DIR, DIO_PA_PIN4_DIR, DIO_PA_PIN5_DIR, DIO_PA_PIN6_DIR, DIO_PA_PIN7_DIR);
    359e:	ea e3       	ldi	r30, 0x3A	; 58
    35a0:	f0 e0       	ldi	r31, 0x00	; 0
    35a2:	89 ed       	ldi	r24, 0xD9	; 217
    35a4:	80 83       	st	Z, r24
	DDRB = CONC(DIO_PB_PIN0_DIR, DIO_PB_PIN1_DIR, DIO_PB_PIN2_DIR, DIO_PB_PIN3_DIR, DIO_PB_PIN4_DIR, DIO_PB_PIN5_DIR, DIO_PB_PIN6_DIR, DIO_PB_PIN7_DIR);
    35a6:	e7 e3       	ldi	r30, 0x37	; 55
    35a8:	f0 e0       	ldi	r31, 0x00	; 0
    35aa:	89 ed       	ldi	r24, 0xD9	; 217
    35ac:	80 83       	st	Z, r24
	DDRC = CONC(DIO_PC_PIN0_DIR, DIO_PC_PIN1_DIR, DIO_PC_PIN2_DIR, DIO_PC_PIN3_DIR, DIO_PC_PIN4_DIR, DIO_PC_PIN5_DIR, DIO_PC_PIN6_DIR, DIO_PC_PIN7_DIR);
    35ae:	e4 e3       	ldi	r30, 0x34	; 52
    35b0:	f0 e0       	ldi	r31, 0x00	; 0
    35b2:	89 ed       	ldi	r24, 0xD9	; 217
    35b4:	80 83       	st	Z, r24
	DDRD = CONC(DIO_PD_PIN0_DIR, DIO_PD_PIN1_DIR, DIO_PD_PIN2_DIR, DIO_PD_PIN3_DIR, DIO_PD_PIN4_DIR, DIO_PD_PIN5_DIR, DIO_PD_PIN6_DIR, DIO_PD_PIN7_DIR);
    35b6:	e1 e3       	ldi	r30, 0x31	; 49
    35b8:	f0 e0       	ldi	r31, 0x00	; 0
    35ba:	89 ed       	ldi	r24, 0xD9	; 217
    35bc:	80 83       	st	Z, r24

	PORTA = CONC(DIO_PA_PIN0_VAL, DIO_PA_PIN1_VAL, DIO_PA_PIN2_VAL, DIO_PA_PIN3_VAL, DIO_PA_PIN4_VAL, DIO_PA_PIN5_VAL, DIO_PA_PIN6_VAL, DIO_PA_PIN7_VAL);
    35be:	eb e3       	ldi	r30, 0x3B	; 59
    35c0:	f0 e0       	ldi	r31, 0x00	; 0
    35c2:	8f e4       	ldi	r24, 0x4F	; 79
    35c4:	80 83       	st	Z, r24
	PORTB = CONC(DIO_PB_PIN0_VAL, DIO_PB_PIN1_VAL, DIO_PB_PIN2_VAL, DIO_PB_PIN3_VAL, DIO_PB_PIN4_VAL, DIO_PB_PIN5_VAL, DIO_PB_PIN6_VAL, DIO_PB_PIN7_VAL);
    35c6:	e8 e3       	ldi	r30, 0x38	; 56
    35c8:	f0 e0       	ldi	r31, 0x00	; 0
    35ca:	8f e9       	ldi	r24, 0x9F	; 159
    35cc:	80 83       	st	Z, r24
	PORTC = CONC(DIO_PC_PIN0_VAL, DIO_PC_PIN1_VAL, DIO_PC_PIN2_VAL, DIO_PC_PIN3_VAL, DIO_PC_PIN4_VAL, DIO_PC_PIN5_VAL, DIO_PC_PIN6_VAL, DIO_PC_PIN7_VAL);
    35ce:	e5 e3       	ldi	r30, 0x35	; 53
    35d0:	f0 e0       	ldi	r31, 0x00	; 0
    35d2:	8f e9       	ldi	r24, 0x9F	; 159
    35d4:	80 83       	st	Z, r24
	PORTD = CONC(DIO_PD_PIN0_VAL, DIO_PD_PIN1_VAL, DIO_PD_PIN2_VAL, DIO_PD_PIN3_VAL, DIO_PD_PIN4_VAL, DIO_PD_PIN5_VAL, DIO_PD_PIN6_VAL, DIO_PD_PIN7_VAL);
    35d6:	e2 e3       	ldi	r30, 0x32	; 50
    35d8:	f0 e0       	ldi	r31, 0x00	; 0
    35da:	8f e9       	ldi	r24, 0x9F	; 159
    35dc:	80 83       	st	Z, r24

	return Local_enuErrorState = ES_OK;
    35de:	19 82       	std	Y+1, r1	; 0x01
    35e0:	89 81       	ldd	r24, Y+1	; 0x01
}
    35e2:	0f 90       	pop	r0
    35e4:	cf 91       	pop	r28
    35e6:	df 91       	pop	r29
    35e8:	08 95       	ret

000035ea <DIO_enuSetPortDir>:

ES_t DIO_enuSetPortDir(uint_8 Copy_uint8PortID, uint_8 Copy_uint8Value){
    35ea:	df 93       	push	r29
    35ec:	cf 93       	push	r28
    35ee:	00 d0       	rcall	.+0      	; 0x35f0 <DIO_enuSetPortDir+0x6>
    35f0:	00 d0       	rcall	.+0      	; 0x35f2 <DIO_enuSetPortDir+0x8>
    35f2:	0f 92       	push	r0
    35f4:	cd b7       	in	r28, 0x3d	; 61
    35f6:	de b7       	in	r29, 0x3e	; 62
    35f8:	8a 83       	std	Y+2, r24	; 0x02
    35fa:	6b 83       	std	Y+3, r22	; 0x03
	ES_t Local_enuErrorState = ES_NOK;
    35fc:	81 e0       	ldi	r24, 0x01	; 1
    35fe:	89 83       	std	Y+1, r24	; 0x01

	if(Copy_uint8PortID <= DIO_PORTD){
    3600:	8a 81       	ldd	r24, Y+2	; 0x02
    3602:	84 30       	cpi	r24, 0x04	; 4
    3604:	a0 f5       	brcc	.+104    	; 0x366e <DIO_enuSetPortDir+0x84>

		switch(Copy_uint8PortID){
    3606:	8a 81       	ldd	r24, Y+2	; 0x02
    3608:	28 2f       	mov	r18, r24
    360a:	30 e0       	ldi	r19, 0x00	; 0
    360c:	3d 83       	std	Y+5, r19	; 0x05
    360e:	2c 83       	std	Y+4, r18	; 0x04
    3610:	8c 81       	ldd	r24, Y+4	; 0x04
    3612:	9d 81       	ldd	r25, Y+5	; 0x05
    3614:	81 30       	cpi	r24, 0x01	; 1
    3616:	91 05       	cpc	r25, r1
    3618:	d1 f0       	breq	.+52     	; 0x364e <DIO_enuSetPortDir+0x64>
    361a:	2c 81       	ldd	r18, Y+4	; 0x04
    361c:	3d 81       	ldd	r19, Y+5	; 0x05
    361e:	22 30       	cpi	r18, 0x02	; 2
    3620:	31 05       	cpc	r19, r1
    3622:	2c f4       	brge	.+10     	; 0x362e <DIO_enuSetPortDir+0x44>
    3624:	8c 81       	ldd	r24, Y+4	; 0x04
    3626:	9d 81       	ldd	r25, Y+5	; 0x05
    3628:	00 97       	sbiw	r24, 0x00	; 0
    362a:	61 f0       	breq	.+24     	; 0x3644 <DIO_enuSetPortDir+0x5a>
    362c:	1e c0       	rjmp	.+60     	; 0x366a <DIO_enuSetPortDir+0x80>
    362e:	2c 81       	ldd	r18, Y+4	; 0x04
    3630:	3d 81       	ldd	r19, Y+5	; 0x05
    3632:	22 30       	cpi	r18, 0x02	; 2
    3634:	31 05       	cpc	r19, r1
    3636:	81 f0       	breq	.+32     	; 0x3658 <DIO_enuSetPortDir+0x6e>
    3638:	8c 81       	ldd	r24, Y+4	; 0x04
    363a:	9d 81       	ldd	r25, Y+5	; 0x05
    363c:	83 30       	cpi	r24, 0x03	; 3
    363e:	91 05       	cpc	r25, r1
    3640:	81 f0       	breq	.+32     	; 0x3662 <DIO_enuSetPortDir+0x78>
    3642:	13 c0       	rjmp	.+38     	; 0x366a <DIO_enuSetPortDir+0x80>
			case DIO_PORTA:
				DDRA =  Copy_uint8Value;
    3644:	ea e3       	ldi	r30, 0x3A	; 58
    3646:	f0 e0       	ldi	r31, 0x00	; 0
    3648:	8b 81       	ldd	r24, Y+3	; 0x03
    364a:	80 83       	st	Z, r24
    364c:	0e c0       	rjmp	.+28     	; 0x366a <DIO_enuSetPortDir+0x80>
				break;
			case DIO_PORTB:
				DDRB =  Copy_uint8Value;
    364e:	e7 e3       	ldi	r30, 0x37	; 55
    3650:	f0 e0       	ldi	r31, 0x00	; 0
    3652:	8b 81       	ldd	r24, Y+3	; 0x03
    3654:	80 83       	st	Z, r24
    3656:	09 c0       	rjmp	.+18     	; 0x366a <DIO_enuSetPortDir+0x80>
				break;
			case DIO_PORTC:
				DDRC =  Copy_uint8Value;
    3658:	e4 e3       	ldi	r30, 0x34	; 52
    365a:	f0 e0       	ldi	r31, 0x00	; 0
    365c:	8b 81       	ldd	r24, Y+3	; 0x03
    365e:	80 83       	st	Z, r24
    3660:	04 c0       	rjmp	.+8      	; 0x366a <DIO_enuSetPortDir+0x80>
				break;
			case DIO_PORTD:
				DDRD =  Copy_uint8Value;
    3662:	e1 e3       	ldi	r30, 0x31	; 49
    3664:	f0 e0       	ldi	r31, 0x00	; 0
    3666:	8b 81       	ldd	r24, Y+3	; 0x03
    3668:	80 83       	st	Z, r24
				break;
		}

		Local_enuErrorState = ES_OK;
    366a:	19 82       	std	Y+1, r1	; 0x01
    366c:	02 c0       	rjmp	.+4      	; 0x3672 <DIO_enuSetPortDir+0x88>
	}
	else{
		Local_enuErrorState = ES_PORT_OUT_OF_RANGE;
    366e:	83 e0       	ldi	r24, 0x03	; 3
    3670:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
    3672:	89 81       	ldd	r24, Y+1	; 0x01
}
    3674:	0f 90       	pop	r0
    3676:	0f 90       	pop	r0
    3678:	0f 90       	pop	r0
    367a:	0f 90       	pop	r0
    367c:	0f 90       	pop	r0
    367e:	cf 91       	pop	r28
    3680:	df 91       	pop	r29
    3682:	08 95       	ret

00003684 <DIO_enuSetPortValue>:

ES_t DIO_enuSetPortValue(uint_8 Copy_uint8PortID, uint_8 Copy_uint8Value){
    3684:	df 93       	push	r29
    3686:	cf 93       	push	r28
    3688:	00 d0       	rcall	.+0      	; 0x368a <DIO_enuSetPortValue+0x6>
    368a:	00 d0       	rcall	.+0      	; 0x368c <DIO_enuSetPortValue+0x8>
    368c:	0f 92       	push	r0
    368e:	cd b7       	in	r28, 0x3d	; 61
    3690:	de b7       	in	r29, 0x3e	; 62
    3692:	8a 83       	std	Y+2, r24	; 0x02
    3694:	6b 83       	std	Y+3, r22	; 0x03
	ES_t Local_enuErrorState = ES_NOK;
    3696:	81 e0       	ldi	r24, 0x01	; 1
    3698:	89 83       	std	Y+1, r24	; 0x01

	if(Copy_uint8PortID <= DIO_PORTD){
    369a:	8a 81       	ldd	r24, Y+2	; 0x02
    369c:	84 30       	cpi	r24, 0x04	; 4
    369e:	a0 f5       	brcc	.+104    	; 0x3708 <DIO_enuSetPortValue+0x84>

		switch(Copy_uint8PortID){
    36a0:	8a 81       	ldd	r24, Y+2	; 0x02
    36a2:	28 2f       	mov	r18, r24
    36a4:	30 e0       	ldi	r19, 0x00	; 0
    36a6:	3d 83       	std	Y+5, r19	; 0x05
    36a8:	2c 83       	std	Y+4, r18	; 0x04
    36aa:	8c 81       	ldd	r24, Y+4	; 0x04
    36ac:	9d 81       	ldd	r25, Y+5	; 0x05
    36ae:	81 30       	cpi	r24, 0x01	; 1
    36b0:	91 05       	cpc	r25, r1
    36b2:	d1 f0       	breq	.+52     	; 0x36e8 <DIO_enuSetPortValue+0x64>
    36b4:	2c 81       	ldd	r18, Y+4	; 0x04
    36b6:	3d 81       	ldd	r19, Y+5	; 0x05
    36b8:	22 30       	cpi	r18, 0x02	; 2
    36ba:	31 05       	cpc	r19, r1
    36bc:	2c f4       	brge	.+10     	; 0x36c8 <DIO_enuSetPortValue+0x44>
    36be:	8c 81       	ldd	r24, Y+4	; 0x04
    36c0:	9d 81       	ldd	r25, Y+5	; 0x05
    36c2:	00 97       	sbiw	r24, 0x00	; 0
    36c4:	61 f0       	breq	.+24     	; 0x36de <DIO_enuSetPortValue+0x5a>
    36c6:	1e c0       	rjmp	.+60     	; 0x3704 <DIO_enuSetPortValue+0x80>
    36c8:	2c 81       	ldd	r18, Y+4	; 0x04
    36ca:	3d 81       	ldd	r19, Y+5	; 0x05
    36cc:	22 30       	cpi	r18, 0x02	; 2
    36ce:	31 05       	cpc	r19, r1
    36d0:	81 f0       	breq	.+32     	; 0x36f2 <DIO_enuSetPortValue+0x6e>
    36d2:	8c 81       	ldd	r24, Y+4	; 0x04
    36d4:	9d 81       	ldd	r25, Y+5	; 0x05
    36d6:	83 30       	cpi	r24, 0x03	; 3
    36d8:	91 05       	cpc	r25, r1
    36da:	81 f0       	breq	.+32     	; 0x36fc <DIO_enuSetPortValue+0x78>
    36dc:	13 c0       	rjmp	.+38     	; 0x3704 <DIO_enuSetPortValue+0x80>
			case DIO_PORTA:
				PORTA =  Copy_uint8Value;
    36de:	eb e3       	ldi	r30, 0x3B	; 59
    36e0:	f0 e0       	ldi	r31, 0x00	; 0
    36e2:	8b 81       	ldd	r24, Y+3	; 0x03
    36e4:	80 83       	st	Z, r24
    36e6:	0e c0       	rjmp	.+28     	; 0x3704 <DIO_enuSetPortValue+0x80>
				break;
			case DIO_PORTB:
				PORTB =  Copy_uint8Value;
    36e8:	e8 e3       	ldi	r30, 0x38	; 56
    36ea:	f0 e0       	ldi	r31, 0x00	; 0
    36ec:	8b 81       	ldd	r24, Y+3	; 0x03
    36ee:	80 83       	st	Z, r24
    36f0:	09 c0       	rjmp	.+18     	; 0x3704 <DIO_enuSetPortValue+0x80>
				break;
			case DIO_PORTC:
				PORTC =  Copy_uint8Value;
    36f2:	e5 e3       	ldi	r30, 0x35	; 53
    36f4:	f0 e0       	ldi	r31, 0x00	; 0
    36f6:	8b 81       	ldd	r24, Y+3	; 0x03
    36f8:	80 83       	st	Z, r24
    36fa:	04 c0       	rjmp	.+8      	; 0x3704 <DIO_enuSetPortValue+0x80>
				break;
			case DIO_PORTD:
				PORTD =  Copy_uint8Value;
    36fc:	e2 e3       	ldi	r30, 0x32	; 50
    36fe:	f0 e0       	ldi	r31, 0x00	; 0
    3700:	8b 81       	ldd	r24, Y+3	; 0x03
    3702:	80 83       	st	Z, r24
				break;
		}

		Local_enuErrorState = ES_OK;
    3704:	19 82       	std	Y+1, r1	; 0x01
    3706:	02 c0       	rjmp	.+4      	; 0x370c <DIO_enuSetPortValue+0x88>
	}
	else{
		Local_enuErrorState = ES_PORT_OUT_OF_RANGE;
    3708:	83 e0       	ldi	r24, 0x03	; 3
    370a:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
    370c:	89 81       	ldd	r24, Y+1	; 0x01
}
    370e:	0f 90       	pop	r0
    3710:	0f 90       	pop	r0
    3712:	0f 90       	pop	r0
    3714:	0f 90       	pop	r0
    3716:	0f 90       	pop	r0
    3718:	cf 91       	pop	r28
    371a:	df 91       	pop	r29
    371c:	08 95       	ret

0000371e <DIO_enuTogPortValue>:

ES_t DIO_enuTogPortValue(uint_8 Copy_uint8PortID){
    371e:	df 93       	push	r29
    3720:	cf 93       	push	r28
    3722:	00 d0       	rcall	.+0      	; 0x3724 <DIO_enuTogPortValue+0x6>
    3724:	00 d0       	rcall	.+0      	; 0x3726 <DIO_enuTogPortValue+0x8>
    3726:	cd b7       	in	r28, 0x3d	; 61
    3728:	de b7       	in	r29, 0x3e	; 62
    372a:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState = ES_NOK;
    372c:	81 e0       	ldi	r24, 0x01	; 1
    372e:	89 83       	std	Y+1, r24	; 0x01

	if(Copy_uint8PortID <= DIO_PORTD){
    3730:	8a 81       	ldd	r24, Y+2	; 0x02
    3732:	84 30       	cpi	r24, 0x04	; 4
    3734:	08 f0       	brcs	.+2      	; 0x3738 <DIO_enuTogPortValue+0x1a>
    3736:	40 c0       	rjmp	.+128    	; 0x37b8 <DIO_enuTogPortValue+0x9a>

		switch(Copy_uint8PortID){
    3738:	8a 81       	ldd	r24, Y+2	; 0x02
    373a:	28 2f       	mov	r18, r24
    373c:	30 e0       	ldi	r19, 0x00	; 0
    373e:	3c 83       	std	Y+4, r19	; 0x04
    3740:	2b 83       	std	Y+3, r18	; 0x03
    3742:	8b 81       	ldd	r24, Y+3	; 0x03
    3744:	9c 81       	ldd	r25, Y+4	; 0x04
    3746:	81 30       	cpi	r24, 0x01	; 1
    3748:	91 05       	cpc	r25, r1
    374a:	e9 f0       	breq	.+58     	; 0x3786 <DIO_enuTogPortValue+0x68>
    374c:	2b 81       	ldd	r18, Y+3	; 0x03
    374e:	3c 81       	ldd	r19, Y+4	; 0x04
    3750:	22 30       	cpi	r18, 0x02	; 2
    3752:	31 05       	cpc	r19, r1
    3754:	2c f4       	brge	.+10     	; 0x3760 <DIO_enuTogPortValue+0x42>
    3756:	8b 81       	ldd	r24, Y+3	; 0x03
    3758:	9c 81       	ldd	r25, Y+4	; 0x04
    375a:	00 97       	sbiw	r24, 0x00	; 0
    375c:	61 f0       	breq	.+24     	; 0x3776 <DIO_enuTogPortValue+0x58>
    375e:	2a c0       	rjmp	.+84     	; 0x37b4 <DIO_enuTogPortValue+0x96>
    3760:	2b 81       	ldd	r18, Y+3	; 0x03
    3762:	3c 81       	ldd	r19, Y+4	; 0x04
    3764:	22 30       	cpi	r18, 0x02	; 2
    3766:	31 05       	cpc	r19, r1
    3768:	b1 f0       	breq	.+44     	; 0x3796 <DIO_enuTogPortValue+0x78>
    376a:	8b 81       	ldd	r24, Y+3	; 0x03
    376c:	9c 81       	ldd	r25, Y+4	; 0x04
    376e:	83 30       	cpi	r24, 0x03	; 3
    3770:	91 05       	cpc	r25, r1
    3772:	c9 f0       	breq	.+50     	; 0x37a6 <DIO_enuTogPortValue+0x88>
    3774:	1f c0       	rjmp	.+62     	; 0x37b4 <DIO_enuTogPortValue+0x96>
			case DIO_PORTA:
				PORTA = ~PORTA ;
    3776:	ab e3       	ldi	r26, 0x3B	; 59
    3778:	b0 e0       	ldi	r27, 0x00	; 0
    377a:	eb e3       	ldi	r30, 0x3B	; 59
    377c:	f0 e0       	ldi	r31, 0x00	; 0
    377e:	80 81       	ld	r24, Z
    3780:	80 95       	com	r24
    3782:	8c 93       	st	X, r24
    3784:	17 c0       	rjmp	.+46     	; 0x37b4 <DIO_enuTogPortValue+0x96>
				break;
			case DIO_PORTB:
				PORTB =  ~PORTB;
    3786:	a8 e3       	ldi	r26, 0x38	; 56
    3788:	b0 e0       	ldi	r27, 0x00	; 0
    378a:	e8 e3       	ldi	r30, 0x38	; 56
    378c:	f0 e0       	ldi	r31, 0x00	; 0
    378e:	80 81       	ld	r24, Z
    3790:	80 95       	com	r24
    3792:	8c 93       	st	X, r24
    3794:	0f c0       	rjmp	.+30     	; 0x37b4 <DIO_enuTogPortValue+0x96>
				break;
			case DIO_PORTC:
				PORTC =  ~PORTC;
    3796:	a5 e3       	ldi	r26, 0x35	; 53
    3798:	b0 e0       	ldi	r27, 0x00	; 0
    379a:	e5 e3       	ldi	r30, 0x35	; 53
    379c:	f0 e0       	ldi	r31, 0x00	; 0
    379e:	80 81       	ld	r24, Z
    37a0:	80 95       	com	r24
    37a2:	8c 93       	st	X, r24
    37a4:	07 c0       	rjmp	.+14     	; 0x37b4 <DIO_enuTogPortValue+0x96>
				break;
			case DIO_PORTD:
				PORTD =  ~PORTD;
    37a6:	a2 e3       	ldi	r26, 0x32	; 50
    37a8:	b0 e0       	ldi	r27, 0x00	; 0
    37aa:	e2 e3       	ldi	r30, 0x32	; 50
    37ac:	f0 e0       	ldi	r31, 0x00	; 0
    37ae:	80 81       	ld	r24, Z
    37b0:	80 95       	com	r24
    37b2:	8c 93       	st	X, r24
				break;
		}

		Local_enuErrorState = ES_OK;
    37b4:	19 82       	std	Y+1, r1	; 0x01
    37b6:	02 c0       	rjmp	.+4      	; 0x37bc <DIO_enuTogPortValue+0x9e>
	}
	else{
		Local_enuErrorState = ES_PORT_OUT_OF_RANGE;
    37b8:	83 e0       	ldi	r24, 0x03	; 3
    37ba:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
    37bc:	89 81       	ldd	r24, Y+1	; 0x01
}
    37be:	0f 90       	pop	r0
    37c0:	0f 90       	pop	r0
    37c2:	0f 90       	pop	r0
    37c4:	0f 90       	pop	r0
    37c6:	cf 91       	pop	r28
    37c8:	df 91       	pop	r29
    37ca:	08 95       	ret

000037cc <DIO_enuGetPortValue>:

ES_t DIO_enuGetPortValue(uint_8 Copy_uint8PortID, uint_8 *Copy_uint8Value){
    37cc:	df 93       	push	r29
    37ce:	cf 93       	push	r28
    37d0:	00 d0       	rcall	.+0      	; 0x37d2 <DIO_enuGetPortValue+0x6>
    37d2:	00 d0       	rcall	.+0      	; 0x37d4 <DIO_enuGetPortValue+0x8>
    37d4:	00 d0       	rcall	.+0      	; 0x37d6 <DIO_enuGetPortValue+0xa>
    37d6:	cd b7       	in	r28, 0x3d	; 61
    37d8:	de b7       	in	r29, 0x3e	; 62
    37da:	8a 83       	std	Y+2, r24	; 0x02
    37dc:	7c 83       	std	Y+4, r23	; 0x04
    37de:	6b 83       	std	Y+3, r22	; 0x03
	ES_t Local_enuErrorState = ES_NOK;
    37e0:	81 e0       	ldi	r24, 0x01	; 1
    37e2:	89 83       	std	Y+1, r24	; 0x01

	if(Copy_uint8PortID <= DIO_PORTD){
    37e4:	8a 81       	ldd	r24, Y+2	; 0x02
    37e6:	84 30       	cpi	r24, 0x04	; 4
    37e8:	e0 f5       	brcc	.+120    	; 0x3862 <DIO_enuGetPortValue+0x96>

		switch(Copy_uint8PortID){
    37ea:	8a 81       	ldd	r24, Y+2	; 0x02
    37ec:	28 2f       	mov	r18, r24
    37ee:	30 e0       	ldi	r19, 0x00	; 0
    37f0:	3e 83       	std	Y+6, r19	; 0x06
    37f2:	2d 83       	std	Y+5, r18	; 0x05
    37f4:	8d 81       	ldd	r24, Y+5	; 0x05
    37f6:	9e 81       	ldd	r25, Y+6	; 0x06
    37f8:	81 30       	cpi	r24, 0x01	; 1
    37fa:	91 05       	cpc	r25, r1
    37fc:	e1 f0       	breq	.+56     	; 0x3836 <DIO_enuGetPortValue+0x6a>
    37fe:	2d 81       	ldd	r18, Y+5	; 0x05
    3800:	3e 81       	ldd	r19, Y+6	; 0x06
    3802:	22 30       	cpi	r18, 0x02	; 2
    3804:	31 05       	cpc	r19, r1
    3806:	2c f4       	brge	.+10     	; 0x3812 <DIO_enuGetPortValue+0x46>
    3808:	8d 81       	ldd	r24, Y+5	; 0x05
    380a:	9e 81       	ldd	r25, Y+6	; 0x06
    380c:	00 97       	sbiw	r24, 0x00	; 0
    380e:	61 f0       	breq	.+24     	; 0x3828 <DIO_enuGetPortValue+0x5c>
    3810:	26 c0       	rjmp	.+76     	; 0x385e <DIO_enuGetPortValue+0x92>
    3812:	2d 81       	ldd	r18, Y+5	; 0x05
    3814:	3e 81       	ldd	r19, Y+6	; 0x06
    3816:	22 30       	cpi	r18, 0x02	; 2
    3818:	31 05       	cpc	r19, r1
    381a:	a1 f0       	breq	.+40     	; 0x3844 <DIO_enuGetPortValue+0x78>
    381c:	8d 81       	ldd	r24, Y+5	; 0x05
    381e:	9e 81       	ldd	r25, Y+6	; 0x06
    3820:	83 30       	cpi	r24, 0x03	; 3
    3822:	91 05       	cpc	r25, r1
    3824:	b1 f0       	breq	.+44     	; 0x3852 <DIO_enuGetPortValue+0x86>
    3826:	1b c0       	rjmp	.+54     	; 0x385e <DIO_enuGetPortValue+0x92>
			case DIO_PORTA:
				*Copy_uint8Value = PINA;
    3828:	e9 e3       	ldi	r30, 0x39	; 57
    382a:	f0 e0       	ldi	r31, 0x00	; 0
    382c:	80 81       	ld	r24, Z
    382e:	eb 81       	ldd	r30, Y+3	; 0x03
    3830:	fc 81       	ldd	r31, Y+4	; 0x04
    3832:	80 83       	st	Z, r24
    3834:	14 c0       	rjmp	.+40     	; 0x385e <DIO_enuGetPortValue+0x92>
				break;
			case DIO_PORTB:
				*Copy_uint8Value = PINB;
    3836:	e6 e3       	ldi	r30, 0x36	; 54
    3838:	f0 e0       	ldi	r31, 0x00	; 0
    383a:	80 81       	ld	r24, Z
    383c:	eb 81       	ldd	r30, Y+3	; 0x03
    383e:	fc 81       	ldd	r31, Y+4	; 0x04
    3840:	80 83       	st	Z, r24
    3842:	0d c0       	rjmp	.+26     	; 0x385e <DIO_enuGetPortValue+0x92>
				break;
			case DIO_PORTC:
				*Copy_uint8Value = PINC;
    3844:	e3 e3       	ldi	r30, 0x33	; 51
    3846:	f0 e0       	ldi	r31, 0x00	; 0
    3848:	80 81       	ld	r24, Z
    384a:	eb 81       	ldd	r30, Y+3	; 0x03
    384c:	fc 81       	ldd	r31, Y+4	; 0x04
    384e:	80 83       	st	Z, r24
    3850:	06 c0       	rjmp	.+12     	; 0x385e <DIO_enuGetPortValue+0x92>
				break;
			case DIO_PORTD:
				*Copy_uint8Value = PIND;
    3852:	e0 e3       	ldi	r30, 0x30	; 48
    3854:	f0 e0       	ldi	r31, 0x00	; 0
    3856:	80 81       	ld	r24, Z
    3858:	eb 81       	ldd	r30, Y+3	; 0x03
    385a:	fc 81       	ldd	r31, Y+4	; 0x04
    385c:	80 83       	st	Z, r24
				break;
		}

		Local_enuErrorState = ES_OK;
    385e:	19 82       	std	Y+1, r1	; 0x01
    3860:	02 c0       	rjmp	.+4      	; 0x3866 <DIO_enuGetPortValue+0x9a>
	}
	else{
		Local_enuErrorState = ES_PORT_OUT_OF_RANGE;
    3862:	83 e0       	ldi	r24, 0x03	; 3
    3864:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
    3866:	89 81       	ldd	r24, Y+1	; 0x01
}
    3868:	26 96       	adiw	r28, 0x06	; 6
    386a:	0f b6       	in	r0, 0x3f	; 63
    386c:	f8 94       	cli
    386e:	de bf       	out	0x3e, r29	; 62
    3870:	0f be       	out	0x3f, r0	; 63
    3872:	cd bf       	out	0x3d, r28	; 61
    3874:	cf 91       	pop	r28
    3876:	df 91       	pop	r29
    3878:	08 95       	ret

0000387a <DIO_enuSetPinDir>:

ES_t DIO_enuSetPinDir(uint_8 Copy_uint8PortID, uint_8 Copy_uint8PinID, uint_8 Copy_uint8Value){
    387a:	df 93       	push	r29
    387c:	cf 93       	push	r28
    387e:	00 d0       	rcall	.+0      	; 0x3880 <DIO_enuSetPinDir+0x6>
    3880:	00 d0       	rcall	.+0      	; 0x3882 <DIO_enuSetPinDir+0x8>
    3882:	00 d0       	rcall	.+0      	; 0x3884 <DIO_enuSetPinDir+0xa>
    3884:	cd b7       	in	r28, 0x3d	; 61
    3886:	de b7       	in	r29, 0x3e	; 62
    3888:	8a 83       	std	Y+2, r24	; 0x02
    388a:	6b 83       	std	Y+3, r22	; 0x03
    388c:	4c 83       	std	Y+4, r20	; 0x04
	ES_t Local_enuErrorState = ES_NOK;
    388e:	81 e0       	ldi	r24, 0x01	; 1
    3890:	89 83       	std	Y+1, r24	; 0x01

	if(Copy_uint8PortID <= DIO_PORTD){
    3892:	8a 81       	ldd	r24, Y+2	; 0x02
    3894:	84 30       	cpi	r24, 0x04	; 4
    3896:	08 f0       	brcs	.+2      	; 0x389a <DIO_enuSetPinDir+0x20>
    3898:	cf c0       	rjmp	.+414    	; 0x3a38 <DIO_enuSetPinDir+0x1be>
		if(Copy_uint8PinID <= DIO_PIN7){
    389a:	8b 81       	ldd	r24, Y+3	; 0x03
    389c:	88 30       	cpi	r24, 0x08	; 8
    389e:	08 f0       	brcs	.+2      	; 0x38a2 <DIO_enuSetPinDir+0x28>
    38a0:	c8 c0       	rjmp	.+400    	; 0x3a32 <DIO_enuSetPinDir+0x1b8>
			switch(Copy_uint8PortID){
    38a2:	8a 81       	ldd	r24, Y+2	; 0x02
    38a4:	28 2f       	mov	r18, r24
    38a6:	30 e0       	ldi	r19, 0x00	; 0
    38a8:	3e 83       	std	Y+6, r19	; 0x06
    38aa:	2d 83       	std	Y+5, r18	; 0x05
    38ac:	6d 81       	ldd	r22, Y+5	; 0x05
    38ae:	7e 81       	ldd	r23, Y+6	; 0x06
    38b0:	61 30       	cpi	r22, 0x01	; 1
    38b2:	71 05       	cpc	r23, r1
    38b4:	09 f4       	brne	.+2      	; 0x38b8 <DIO_enuSetPinDir+0x3e>
    38b6:	41 c0       	rjmp	.+130    	; 0x393a <DIO_enuSetPinDir+0xc0>
    38b8:	8d 81       	ldd	r24, Y+5	; 0x05
    38ba:	9e 81       	ldd	r25, Y+6	; 0x06
    38bc:	82 30       	cpi	r24, 0x02	; 2
    38be:	91 05       	cpc	r25, r1
    38c0:	34 f4       	brge	.+12     	; 0x38ce <DIO_enuSetPinDir+0x54>
    38c2:	2d 81       	ldd	r18, Y+5	; 0x05
    38c4:	3e 81       	ldd	r19, Y+6	; 0x06
    38c6:	21 15       	cp	r18, r1
    38c8:	31 05       	cpc	r19, r1
    38ca:	71 f0       	breq	.+28     	; 0x38e8 <DIO_enuSetPinDir+0x6e>
    38cc:	b0 c0       	rjmp	.+352    	; 0x3a2e <DIO_enuSetPinDir+0x1b4>
    38ce:	6d 81       	ldd	r22, Y+5	; 0x05
    38d0:	7e 81       	ldd	r23, Y+6	; 0x06
    38d2:	62 30       	cpi	r22, 0x02	; 2
    38d4:	71 05       	cpc	r23, r1
    38d6:	09 f4       	brne	.+2      	; 0x38da <DIO_enuSetPinDir+0x60>
    38d8:	59 c0       	rjmp	.+178    	; 0x398c <DIO_enuSetPinDir+0x112>
    38da:	8d 81       	ldd	r24, Y+5	; 0x05
    38dc:	9e 81       	ldd	r25, Y+6	; 0x06
    38de:	83 30       	cpi	r24, 0x03	; 3
    38e0:	91 05       	cpc	r25, r1
    38e2:	09 f4       	brne	.+2      	; 0x38e6 <DIO_enuSetPinDir+0x6c>
    38e4:	7c c0       	rjmp	.+248    	; 0x39de <DIO_enuSetPinDir+0x164>
    38e6:	a3 c0       	rjmp	.+326    	; 0x3a2e <DIO_enuSetPinDir+0x1b4>
				case DIO_PORTA:
					DDRA &= ~(BIT_MASK << Copy_uint8PinID);
    38e8:	aa e3       	ldi	r26, 0x3A	; 58
    38ea:	b0 e0       	ldi	r27, 0x00	; 0
    38ec:	ea e3       	ldi	r30, 0x3A	; 58
    38ee:	f0 e0       	ldi	r31, 0x00	; 0
    38f0:	80 81       	ld	r24, Z
    38f2:	48 2f       	mov	r20, r24
    38f4:	8b 81       	ldd	r24, Y+3	; 0x03
    38f6:	28 2f       	mov	r18, r24
    38f8:	30 e0       	ldi	r19, 0x00	; 0
    38fa:	81 e0       	ldi	r24, 0x01	; 1
    38fc:	90 e0       	ldi	r25, 0x00	; 0
    38fe:	02 c0       	rjmp	.+4      	; 0x3904 <DIO_enuSetPinDir+0x8a>
    3900:	88 0f       	add	r24, r24
    3902:	99 1f       	adc	r25, r25
    3904:	2a 95       	dec	r18
    3906:	e2 f7       	brpl	.-8      	; 0x3900 <DIO_enuSetPinDir+0x86>
    3908:	80 95       	com	r24
    390a:	84 23       	and	r24, r20
    390c:	8c 93       	st	X, r24
					DDRA |= (Copy_uint8Value << Copy_uint8PinID);
    390e:	aa e3       	ldi	r26, 0x3A	; 58
    3910:	b0 e0       	ldi	r27, 0x00	; 0
    3912:	ea e3       	ldi	r30, 0x3A	; 58
    3914:	f0 e0       	ldi	r31, 0x00	; 0
    3916:	80 81       	ld	r24, Z
    3918:	48 2f       	mov	r20, r24
    391a:	8c 81       	ldd	r24, Y+4	; 0x04
    391c:	28 2f       	mov	r18, r24
    391e:	30 e0       	ldi	r19, 0x00	; 0
    3920:	8b 81       	ldd	r24, Y+3	; 0x03
    3922:	88 2f       	mov	r24, r24
    3924:	90 e0       	ldi	r25, 0x00	; 0
    3926:	b9 01       	movw	r22, r18
    3928:	02 c0       	rjmp	.+4      	; 0x392e <DIO_enuSetPinDir+0xb4>
    392a:	66 0f       	add	r22, r22
    392c:	77 1f       	adc	r23, r23
    392e:	8a 95       	dec	r24
    3930:	e2 f7       	brpl	.-8      	; 0x392a <DIO_enuSetPinDir+0xb0>
    3932:	cb 01       	movw	r24, r22
    3934:	84 2b       	or	r24, r20
    3936:	8c 93       	st	X, r24
    3938:	7a c0       	rjmp	.+244    	; 0x3a2e <DIO_enuSetPinDir+0x1b4>
					break;
				case DIO_PORTB:
					DDRB &= ~(BIT_MASK << Copy_uint8PinID);
    393a:	a7 e3       	ldi	r26, 0x37	; 55
    393c:	b0 e0       	ldi	r27, 0x00	; 0
    393e:	e7 e3       	ldi	r30, 0x37	; 55
    3940:	f0 e0       	ldi	r31, 0x00	; 0
    3942:	80 81       	ld	r24, Z
    3944:	48 2f       	mov	r20, r24
    3946:	8b 81       	ldd	r24, Y+3	; 0x03
    3948:	28 2f       	mov	r18, r24
    394a:	30 e0       	ldi	r19, 0x00	; 0
    394c:	81 e0       	ldi	r24, 0x01	; 1
    394e:	90 e0       	ldi	r25, 0x00	; 0
    3950:	02 c0       	rjmp	.+4      	; 0x3956 <DIO_enuSetPinDir+0xdc>
    3952:	88 0f       	add	r24, r24
    3954:	99 1f       	adc	r25, r25
    3956:	2a 95       	dec	r18
    3958:	e2 f7       	brpl	.-8      	; 0x3952 <DIO_enuSetPinDir+0xd8>
    395a:	80 95       	com	r24
    395c:	84 23       	and	r24, r20
    395e:	8c 93       	st	X, r24
					DDRB |= (Copy_uint8Value << Copy_uint8PinID);
    3960:	a7 e3       	ldi	r26, 0x37	; 55
    3962:	b0 e0       	ldi	r27, 0x00	; 0
    3964:	e7 e3       	ldi	r30, 0x37	; 55
    3966:	f0 e0       	ldi	r31, 0x00	; 0
    3968:	80 81       	ld	r24, Z
    396a:	48 2f       	mov	r20, r24
    396c:	8c 81       	ldd	r24, Y+4	; 0x04
    396e:	28 2f       	mov	r18, r24
    3970:	30 e0       	ldi	r19, 0x00	; 0
    3972:	8b 81       	ldd	r24, Y+3	; 0x03
    3974:	88 2f       	mov	r24, r24
    3976:	90 e0       	ldi	r25, 0x00	; 0
    3978:	b9 01       	movw	r22, r18
    397a:	02 c0       	rjmp	.+4      	; 0x3980 <DIO_enuSetPinDir+0x106>
    397c:	66 0f       	add	r22, r22
    397e:	77 1f       	adc	r23, r23
    3980:	8a 95       	dec	r24
    3982:	e2 f7       	brpl	.-8      	; 0x397c <DIO_enuSetPinDir+0x102>
    3984:	cb 01       	movw	r24, r22
    3986:	84 2b       	or	r24, r20
    3988:	8c 93       	st	X, r24
    398a:	51 c0       	rjmp	.+162    	; 0x3a2e <DIO_enuSetPinDir+0x1b4>
					break;
				case DIO_PORTC:
					DDRC &= ~(BIT_MASK << Copy_uint8PinID);
    398c:	a4 e3       	ldi	r26, 0x34	; 52
    398e:	b0 e0       	ldi	r27, 0x00	; 0
    3990:	e4 e3       	ldi	r30, 0x34	; 52
    3992:	f0 e0       	ldi	r31, 0x00	; 0
    3994:	80 81       	ld	r24, Z
    3996:	48 2f       	mov	r20, r24
    3998:	8b 81       	ldd	r24, Y+3	; 0x03
    399a:	28 2f       	mov	r18, r24
    399c:	30 e0       	ldi	r19, 0x00	; 0
    399e:	81 e0       	ldi	r24, 0x01	; 1
    39a0:	90 e0       	ldi	r25, 0x00	; 0
    39a2:	02 c0       	rjmp	.+4      	; 0x39a8 <DIO_enuSetPinDir+0x12e>
    39a4:	88 0f       	add	r24, r24
    39a6:	99 1f       	adc	r25, r25
    39a8:	2a 95       	dec	r18
    39aa:	e2 f7       	brpl	.-8      	; 0x39a4 <DIO_enuSetPinDir+0x12a>
    39ac:	80 95       	com	r24
    39ae:	84 23       	and	r24, r20
    39b0:	8c 93       	st	X, r24
					DDRC |= (Copy_uint8Value << Copy_uint8PinID);
    39b2:	a4 e3       	ldi	r26, 0x34	; 52
    39b4:	b0 e0       	ldi	r27, 0x00	; 0
    39b6:	e4 e3       	ldi	r30, 0x34	; 52
    39b8:	f0 e0       	ldi	r31, 0x00	; 0
    39ba:	80 81       	ld	r24, Z
    39bc:	48 2f       	mov	r20, r24
    39be:	8c 81       	ldd	r24, Y+4	; 0x04
    39c0:	28 2f       	mov	r18, r24
    39c2:	30 e0       	ldi	r19, 0x00	; 0
    39c4:	8b 81       	ldd	r24, Y+3	; 0x03
    39c6:	88 2f       	mov	r24, r24
    39c8:	90 e0       	ldi	r25, 0x00	; 0
    39ca:	b9 01       	movw	r22, r18
    39cc:	02 c0       	rjmp	.+4      	; 0x39d2 <DIO_enuSetPinDir+0x158>
    39ce:	66 0f       	add	r22, r22
    39d0:	77 1f       	adc	r23, r23
    39d2:	8a 95       	dec	r24
    39d4:	e2 f7       	brpl	.-8      	; 0x39ce <DIO_enuSetPinDir+0x154>
    39d6:	cb 01       	movw	r24, r22
    39d8:	84 2b       	or	r24, r20
    39da:	8c 93       	st	X, r24
    39dc:	28 c0       	rjmp	.+80     	; 0x3a2e <DIO_enuSetPinDir+0x1b4>
					break;
				case DIO_PORTD:
					DDRD &= ~(BIT_MASK << Copy_uint8PinID);
    39de:	a1 e3       	ldi	r26, 0x31	; 49
    39e0:	b0 e0       	ldi	r27, 0x00	; 0
    39e2:	e1 e3       	ldi	r30, 0x31	; 49
    39e4:	f0 e0       	ldi	r31, 0x00	; 0
    39e6:	80 81       	ld	r24, Z
    39e8:	48 2f       	mov	r20, r24
    39ea:	8b 81       	ldd	r24, Y+3	; 0x03
    39ec:	28 2f       	mov	r18, r24
    39ee:	30 e0       	ldi	r19, 0x00	; 0
    39f0:	81 e0       	ldi	r24, 0x01	; 1
    39f2:	90 e0       	ldi	r25, 0x00	; 0
    39f4:	02 c0       	rjmp	.+4      	; 0x39fa <DIO_enuSetPinDir+0x180>
    39f6:	88 0f       	add	r24, r24
    39f8:	99 1f       	adc	r25, r25
    39fa:	2a 95       	dec	r18
    39fc:	e2 f7       	brpl	.-8      	; 0x39f6 <DIO_enuSetPinDir+0x17c>
    39fe:	80 95       	com	r24
    3a00:	84 23       	and	r24, r20
    3a02:	8c 93       	st	X, r24
					DDRD |= (Copy_uint8Value << Copy_uint8PinID);
    3a04:	a1 e3       	ldi	r26, 0x31	; 49
    3a06:	b0 e0       	ldi	r27, 0x00	; 0
    3a08:	e1 e3       	ldi	r30, 0x31	; 49
    3a0a:	f0 e0       	ldi	r31, 0x00	; 0
    3a0c:	80 81       	ld	r24, Z
    3a0e:	48 2f       	mov	r20, r24
    3a10:	8c 81       	ldd	r24, Y+4	; 0x04
    3a12:	28 2f       	mov	r18, r24
    3a14:	30 e0       	ldi	r19, 0x00	; 0
    3a16:	8b 81       	ldd	r24, Y+3	; 0x03
    3a18:	88 2f       	mov	r24, r24
    3a1a:	90 e0       	ldi	r25, 0x00	; 0
    3a1c:	b9 01       	movw	r22, r18
    3a1e:	02 c0       	rjmp	.+4      	; 0x3a24 <DIO_enuSetPinDir+0x1aa>
    3a20:	66 0f       	add	r22, r22
    3a22:	77 1f       	adc	r23, r23
    3a24:	8a 95       	dec	r24
    3a26:	e2 f7       	brpl	.-8      	; 0x3a20 <DIO_enuSetPinDir+0x1a6>
    3a28:	cb 01       	movw	r24, r22
    3a2a:	84 2b       	or	r24, r20
    3a2c:	8c 93       	st	X, r24
					break;
			}
			Local_enuErrorState = ES_OK;
    3a2e:	19 82       	std	Y+1, r1	; 0x01
    3a30:	05 c0       	rjmp	.+10     	; 0x3a3c <DIO_enuSetPinDir+0x1c2>
		}
		else{
			Local_enuErrorState = ES_PIN_OUT_OF_RANGE;
    3a32:	84 e0       	ldi	r24, 0x04	; 4
    3a34:	89 83       	std	Y+1, r24	; 0x01
    3a36:	02 c0       	rjmp	.+4      	; 0x3a3c <DIO_enuSetPinDir+0x1c2>
		}
	}
	else{
		Local_enuErrorState = ES_PORT_OUT_OF_RANGE;
    3a38:	83 e0       	ldi	r24, 0x03	; 3
    3a3a:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
    3a3c:	89 81       	ldd	r24, Y+1	; 0x01
}
    3a3e:	26 96       	adiw	r28, 0x06	; 6
    3a40:	0f b6       	in	r0, 0x3f	; 63
    3a42:	f8 94       	cli
    3a44:	de bf       	out	0x3e, r29	; 62
    3a46:	0f be       	out	0x3f, r0	; 63
    3a48:	cd bf       	out	0x3d, r28	; 61
    3a4a:	cf 91       	pop	r28
    3a4c:	df 91       	pop	r29
    3a4e:	08 95       	ret

00003a50 <DIO_enuSetPinValue>:

ES_t DIO_enuSetPinValue(uint_8 Copy_uint8PortID, uint_8 Copy_uint8PinID, uint_8 Copy_uint8Value){
    3a50:	df 93       	push	r29
    3a52:	cf 93       	push	r28
    3a54:	00 d0       	rcall	.+0      	; 0x3a56 <DIO_enuSetPinValue+0x6>
    3a56:	00 d0       	rcall	.+0      	; 0x3a58 <DIO_enuSetPinValue+0x8>
    3a58:	00 d0       	rcall	.+0      	; 0x3a5a <DIO_enuSetPinValue+0xa>
    3a5a:	cd b7       	in	r28, 0x3d	; 61
    3a5c:	de b7       	in	r29, 0x3e	; 62
    3a5e:	8a 83       	std	Y+2, r24	; 0x02
    3a60:	6b 83       	std	Y+3, r22	; 0x03
    3a62:	4c 83       	std	Y+4, r20	; 0x04
	ES_t Local_enuErrorState = ES_NOK;
    3a64:	81 e0       	ldi	r24, 0x01	; 1
    3a66:	89 83       	std	Y+1, r24	; 0x01

	if(Copy_uint8PortID <= DIO_PORTD){
    3a68:	8a 81       	ldd	r24, Y+2	; 0x02
    3a6a:	84 30       	cpi	r24, 0x04	; 4
    3a6c:	08 f0       	brcs	.+2      	; 0x3a70 <DIO_enuSetPinValue+0x20>
    3a6e:	cf c0       	rjmp	.+414    	; 0x3c0e <DIO_enuSetPinValue+0x1be>
		if(Copy_uint8PinID <= DIO_PIN7){
    3a70:	8b 81       	ldd	r24, Y+3	; 0x03
    3a72:	88 30       	cpi	r24, 0x08	; 8
    3a74:	08 f0       	brcs	.+2      	; 0x3a78 <DIO_enuSetPinValue+0x28>
    3a76:	c8 c0       	rjmp	.+400    	; 0x3c08 <DIO_enuSetPinValue+0x1b8>
			switch(Copy_uint8PortID){
    3a78:	8a 81       	ldd	r24, Y+2	; 0x02
    3a7a:	28 2f       	mov	r18, r24
    3a7c:	30 e0       	ldi	r19, 0x00	; 0
    3a7e:	3e 83       	std	Y+6, r19	; 0x06
    3a80:	2d 83       	std	Y+5, r18	; 0x05
    3a82:	6d 81       	ldd	r22, Y+5	; 0x05
    3a84:	7e 81       	ldd	r23, Y+6	; 0x06
    3a86:	61 30       	cpi	r22, 0x01	; 1
    3a88:	71 05       	cpc	r23, r1
    3a8a:	09 f4       	brne	.+2      	; 0x3a8e <DIO_enuSetPinValue+0x3e>
    3a8c:	41 c0       	rjmp	.+130    	; 0x3b10 <DIO_enuSetPinValue+0xc0>
    3a8e:	8d 81       	ldd	r24, Y+5	; 0x05
    3a90:	9e 81       	ldd	r25, Y+6	; 0x06
    3a92:	82 30       	cpi	r24, 0x02	; 2
    3a94:	91 05       	cpc	r25, r1
    3a96:	34 f4       	brge	.+12     	; 0x3aa4 <DIO_enuSetPinValue+0x54>
    3a98:	2d 81       	ldd	r18, Y+5	; 0x05
    3a9a:	3e 81       	ldd	r19, Y+6	; 0x06
    3a9c:	21 15       	cp	r18, r1
    3a9e:	31 05       	cpc	r19, r1
    3aa0:	71 f0       	breq	.+28     	; 0x3abe <DIO_enuSetPinValue+0x6e>
    3aa2:	b0 c0       	rjmp	.+352    	; 0x3c04 <DIO_enuSetPinValue+0x1b4>
    3aa4:	6d 81       	ldd	r22, Y+5	; 0x05
    3aa6:	7e 81       	ldd	r23, Y+6	; 0x06
    3aa8:	62 30       	cpi	r22, 0x02	; 2
    3aaa:	71 05       	cpc	r23, r1
    3aac:	09 f4       	brne	.+2      	; 0x3ab0 <DIO_enuSetPinValue+0x60>
    3aae:	59 c0       	rjmp	.+178    	; 0x3b62 <DIO_enuSetPinValue+0x112>
    3ab0:	8d 81       	ldd	r24, Y+5	; 0x05
    3ab2:	9e 81       	ldd	r25, Y+6	; 0x06
    3ab4:	83 30       	cpi	r24, 0x03	; 3
    3ab6:	91 05       	cpc	r25, r1
    3ab8:	09 f4       	brne	.+2      	; 0x3abc <DIO_enuSetPinValue+0x6c>
    3aba:	7c c0       	rjmp	.+248    	; 0x3bb4 <DIO_enuSetPinValue+0x164>
    3abc:	a3 c0       	rjmp	.+326    	; 0x3c04 <DIO_enuSetPinValue+0x1b4>
				case DIO_PORTA:
					PORTA &= ~(BIT_MASK << Copy_uint8PinID);
    3abe:	ab e3       	ldi	r26, 0x3B	; 59
    3ac0:	b0 e0       	ldi	r27, 0x00	; 0
    3ac2:	eb e3       	ldi	r30, 0x3B	; 59
    3ac4:	f0 e0       	ldi	r31, 0x00	; 0
    3ac6:	80 81       	ld	r24, Z
    3ac8:	48 2f       	mov	r20, r24
    3aca:	8b 81       	ldd	r24, Y+3	; 0x03
    3acc:	28 2f       	mov	r18, r24
    3ace:	30 e0       	ldi	r19, 0x00	; 0
    3ad0:	81 e0       	ldi	r24, 0x01	; 1
    3ad2:	90 e0       	ldi	r25, 0x00	; 0
    3ad4:	02 c0       	rjmp	.+4      	; 0x3ada <DIO_enuSetPinValue+0x8a>
    3ad6:	88 0f       	add	r24, r24
    3ad8:	99 1f       	adc	r25, r25
    3ada:	2a 95       	dec	r18
    3adc:	e2 f7       	brpl	.-8      	; 0x3ad6 <DIO_enuSetPinValue+0x86>
    3ade:	80 95       	com	r24
    3ae0:	84 23       	and	r24, r20
    3ae2:	8c 93       	st	X, r24
					PORTA |= (Copy_uint8Value << Copy_uint8PinID);
    3ae4:	ab e3       	ldi	r26, 0x3B	; 59
    3ae6:	b0 e0       	ldi	r27, 0x00	; 0
    3ae8:	eb e3       	ldi	r30, 0x3B	; 59
    3aea:	f0 e0       	ldi	r31, 0x00	; 0
    3aec:	80 81       	ld	r24, Z
    3aee:	48 2f       	mov	r20, r24
    3af0:	8c 81       	ldd	r24, Y+4	; 0x04
    3af2:	28 2f       	mov	r18, r24
    3af4:	30 e0       	ldi	r19, 0x00	; 0
    3af6:	8b 81       	ldd	r24, Y+3	; 0x03
    3af8:	88 2f       	mov	r24, r24
    3afa:	90 e0       	ldi	r25, 0x00	; 0
    3afc:	b9 01       	movw	r22, r18
    3afe:	02 c0       	rjmp	.+4      	; 0x3b04 <DIO_enuSetPinValue+0xb4>
    3b00:	66 0f       	add	r22, r22
    3b02:	77 1f       	adc	r23, r23
    3b04:	8a 95       	dec	r24
    3b06:	e2 f7       	brpl	.-8      	; 0x3b00 <DIO_enuSetPinValue+0xb0>
    3b08:	cb 01       	movw	r24, r22
    3b0a:	84 2b       	or	r24, r20
    3b0c:	8c 93       	st	X, r24
    3b0e:	7a c0       	rjmp	.+244    	; 0x3c04 <DIO_enuSetPinValue+0x1b4>
					break;
				case DIO_PORTB:
					PORTB &= ~(BIT_MASK << Copy_uint8PinID);
    3b10:	a8 e3       	ldi	r26, 0x38	; 56
    3b12:	b0 e0       	ldi	r27, 0x00	; 0
    3b14:	e8 e3       	ldi	r30, 0x38	; 56
    3b16:	f0 e0       	ldi	r31, 0x00	; 0
    3b18:	80 81       	ld	r24, Z
    3b1a:	48 2f       	mov	r20, r24
    3b1c:	8b 81       	ldd	r24, Y+3	; 0x03
    3b1e:	28 2f       	mov	r18, r24
    3b20:	30 e0       	ldi	r19, 0x00	; 0
    3b22:	81 e0       	ldi	r24, 0x01	; 1
    3b24:	90 e0       	ldi	r25, 0x00	; 0
    3b26:	02 c0       	rjmp	.+4      	; 0x3b2c <DIO_enuSetPinValue+0xdc>
    3b28:	88 0f       	add	r24, r24
    3b2a:	99 1f       	adc	r25, r25
    3b2c:	2a 95       	dec	r18
    3b2e:	e2 f7       	brpl	.-8      	; 0x3b28 <DIO_enuSetPinValue+0xd8>
    3b30:	80 95       	com	r24
    3b32:	84 23       	and	r24, r20
    3b34:	8c 93       	st	X, r24
					PORTB |= (Copy_uint8Value << Copy_uint8PinID);
    3b36:	a8 e3       	ldi	r26, 0x38	; 56
    3b38:	b0 e0       	ldi	r27, 0x00	; 0
    3b3a:	e8 e3       	ldi	r30, 0x38	; 56
    3b3c:	f0 e0       	ldi	r31, 0x00	; 0
    3b3e:	80 81       	ld	r24, Z
    3b40:	48 2f       	mov	r20, r24
    3b42:	8c 81       	ldd	r24, Y+4	; 0x04
    3b44:	28 2f       	mov	r18, r24
    3b46:	30 e0       	ldi	r19, 0x00	; 0
    3b48:	8b 81       	ldd	r24, Y+3	; 0x03
    3b4a:	88 2f       	mov	r24, r24
    3b4c:	90 e0       	ldi	r25, 0x00	; 0
    3b4e:	b9 01       	movw	r22, r18
    3b50:	02 c0       	rjmp	.+4      	; 0x3b56 <DIO_enuSetPinValue+0x106>
    3b52:	66 0f       	add	r22, r22
    3b54:	77 1f       	adc	r23, r23
    3b56:	8a 95       	dec	r24
    3b58:	e2 f7       	brpl	.-8      	; 0x3b52 <DIO_enuSetPinValue+0x102>
    3b5a:	cb 01       	movw	r24, r22
    3b5c:	84 2b       	or	r24, r20
    3b5e:	8c 93       	st	X, r24
    3b60:	51 c0       	rjmp	.+162    	; 0x3c04 <DIO_enuSetPinValue+0x1b4>
					break;
				case DIO_PORTC:
					PORTC &= ~(BIT_MASK << Copy_uint8PinID);
    3b62:	a5 e3       	ldi	r26, 0x35	; 53
    3b64:	b0 e0       	ldi	r27, 0x00	; 0
    3b66:	e5 e3       	ldi	r30, 0x35	; 53
    3b68:	f0 e0       	ldi	r31, 0x00	; 0
    3b6a:	80 81       	ld	r24, Z
    3b6c:	48 2f       	mov	r20, r24
    3b6e:	8b 81       	ldd	r24, Y+3	; 0x03
    3b70:	28 2f       	mov	r18, r24
    3b72:	30 e0       	ldi	r19, 0x00	; 0
    3b74:	81 e0       	ldi	r24, 0x01	; 1
    3b76:	90 e0       	ldi	r25, 0x00	; 0
    3b78:	02 c0       	rjmp	.+4      	; 0x3b7e <DIO_enuSetPinValue+0x12e>
    3b7a:	88 0f       	add	r24, r24
    3b7c:	99 1f       	adc	r25, r25
    3b7e:	2a 95       	dec	r18
    3b80:	e2 f7       	brpl	.-8      	; 0x3b7a <DIO_enuSetPinValue+0x12a>
    3b82:	80 95       	com	r24
    3b84:	84 23       	and	r24, r20
    3b86:	8c 93       	st	X, r24
					PORTC |= (Copy_uint8Value << Copy_uint8PinID);
    3b88:	a5 e3       	ldi	r26, 0x35	; 53
    3b8a:	b0 e0       	ldi	r27, 0x00	; 0
    3b8c:	e5 e3       	ldi	r30, 0x35	; 53
    3b8e:	f0 e0       	ldi	r31, 0x00	; 0
    3b90:	80 81       	ld	r24, Z
    3b92:	48 2f       	mov	r20, r24
    3b94:	8c 81       	ldd	r24, Y+4	; 0x04
    3b96:	28 2f       	mov	r18, r24
    3b98:	30 e0       	ldi	r19, 0x00	; 0
    3b9a:	8b 81       	ldd	r24, Y+3	; 0x03
    3b9c:	88 2f       	mov	r24, r24
    3b9e:	90 e0       	ldi	r25, 0x00	; 0
    3ba0:	b9 01       	movw	r22, r18
    3ba2:	02 c0       	rjmp	.+4      	; 0x3ba8 <DIO_enuSetPinValue+0x158>
    3ba4:	66 0f       	add	r22, r22
    3ba6:	77 1f       	adc	r23, r23
    3ba8:	8a 95       	dec	r24
    3baa:	e2 f7       	brpl	.-8      	; 0x3ba4 <DIO_enuSetPinValue+0x154>
    3bac:	cb 01       	movw	r24, r22
    3bae:	84 2b       	or	r24, r20
    3bb0:	8c 93       	st	X, r24
    3bb2:	28 c0       	rjmp	.+80     	; 0x3c04 <DIO_enuSetPinValue+0x1b4>
					break;
				case DIO_PORTD:
					PORTD &= ~(BIT_MASK << Copy_uint8PinID);
    3bb4:	a2 e3       	ldi	r26, 0x32	; 50
    3bb6:	b0 e0       	ldi	r27, 0x00	; 0
    3bb8:	e2 e3       	ldi	r30, 0x32	; 50
    3bba:	f0 e0       	ldi	r31, 0x00	; 0
    3bbc:	80 81       	ld	r24, Z
    3bbe:	48 2f       	mov	r20, r24
    3bc0:	8b 81       	ldd	r24, Y+3	; 0x03
    3bc2:	28 2f       	mov	r18, r24
    3bc4:	30 e0       	ldi	r19, 0x00	; 0
    3bc6:	81 e0       	ldi	r24, 0x01	; 1
    3bc8:	90 e0       	ldi	r25, 0x00	; 0
    3bca:	02 c0       	rjmp	.+4      	; 0x3bd0 <DIO_enuSetPinValue+0x180>
    3bcc:	88 0f       	add	r24, r24
    3bce:	99 1f       	adc	r25, r25
    3bd0:	2a 95       	dec	r18
    3bd2:	e2 f7       	brpl	.-8      	; 0x3bcc <DIO_enuSetPinValue+0x17c>
    3bd4:	80 95       	com	r24
    3bd6:	84 23       	and	r24, r20
    3bd8:	8c 93       	st	X, r24
					PORTD |= (Copy_uint8Value << Copy_uint8PinID);
    3bda:	a2 e3       	ldi	r26, 0x32	; 50
    3bdc:	b0 e0       	ldi	r27, 0x00	; 0
    3bde:	e2 e3       	ldi	r30, 0x32	; 50
    3be0:	f0 e0       	ldi	r31, 0x00	; 0
    3be2:	80 81       	ld	r24, Z
    3be4:	48 2f       	mov	r20, r24
    3be6:	8c 81       	ldd	r24, Y+4	; 0x04
    3be8:	28 2f       	mov	r18, r24
    3bea:	30 e0       	ldi	r19, 0x00	; 0
    3bec:	8b 81       	ldd	r24, Y+3	; 0x03
    3bee:	88 2f       	mov	r24, r24
    3bf0:	90 e0       	ldi	r25, 0x00	; 0
    3bf2:	b9 01       	movw	r22, r18
    3bf4:	02 c0       	rjmp	.+4      	; 0x3bfa <DIO_enuSetPinValue+0x1aa>
    3bf6:	66 0f       	add	r22, r22
    3bf8:	77 1f       	adc	r23, r23
    3bfa:	8a 95       	dec	r24
    3bfc:	e2 f7       	brpl	.-8      	; 0x3bf6 <DIO_enuSetPinValue+0x1a6>
    3bfe:	cb 01       	movw	r24, r22
    3c00:	84 2b       	or	r24, r20
    3c02:	8c 93       	st	X, r24
					break;
			}
			Local_enuErrorState = ES_OK;
    3c04:	19 82       	std	Y+1, r1	; 0x01
    3c06:	05 c0       	rjmp	.+10     	; 0x3c12 <DIO_enuSetPinValue+0x1c2>
		}
		else{
			Local_enuErrorState = ES_PIN_OUT_OF_RANGE;
    3c08:	84 e0       	ldi	r24, 0x04	; 4
    3c0a:	89 83       	std	Y+1, r24	; 0x01
    3c0c:	02 c0       	rjmp	.+4      	; 0x3c12 <DIO_enuSetPinValue+0x1c2>
		}
	}
	else{
		Local_enuErrorState = ES_PORT_OUT_OF_RANGE;
    3c0e:	83 e0       	ldi	r24, 0x03	; 3
    3c10:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
    3c12:	89 81       	ldd	r24, Y+1	; 0x01
}
    3c14:	26 96       	adiw	r28, 0x06	; 6
    3c16:	0f b6       	in	r0, 0x3f	; 63
    3c18:	f8 94       	cli
    3c1a:	de bf       	out	0x3e, r29	; 62
    3c1c:	0f be       	out	0x3f, r0	; 63
    3c1e:	cd bf       	out	0x3d, r28	; 61
    3c20:	cf 91       	pop	r28
    3c22:	df 91       	pop	r29
    3c24:	08 95       	ret

00003c26 <DIO_enuTogPinValue>:

ES_t DIO_enuTogPinValue(uint_8 Copy_uint8PortID, uint_8 Copy_uint8PinID){
    3c26:	df 93       	push	r29
    3c28:	cf 93       	push	r28
    3c2a:	00 d0       	rcall	.+0      	; 0x3c2c <DIO_enuTogPinValue+0x6>
    3c2c:	00 d0       	rcall	.+0      	; 0x3c2e <DIO_enuTogPinValue+0x8>
    3c2e:	0f 92       	push	r0
    3c30:	cd b7       	in	r28, 0x3d	; 61
    3c32:	de b7       	in	r29, 0x3e	; 62
    3c34:	8a 83       	std	Y+2, r24	; 0x02
    3c36:	6b 83       	std	Y+3, r22	; 0x03
	ES_t Local_enuErrorState = ES_NOK;
    3c38:	81 e0       	ldi	r24, 0x01	; 1
    3c3a:	89 83       	std	Y+1, r24	; 0x01

	if(Copy_uint8PortID <= DIO_PORTD){
    3c3c:	8a 81       	ldd	r24, Y+2	; 0x02
    3c3e:	84 30       	cpi	r24, 0x04	; 4
    3c40:	08 f0       	brcs	.+2      	; 0x3c44 <DIO_enuTogPinValue+0x1e>
    3c42:	77 c0       	rjmp	.+238    	; 0x3d32 <DIO_enuTogPinValue+0x10c>
		if(Copy_uint8PinID <= DIO_PIN7){
    3c44:	8b 81       	ldd	r24, Y+3	; 0x03
    3c46:	88 30       	cpi	r24, 0x08	; 8
    3c48:	08 f0       	brcs	.+2      	; 0x3c4c <DIO_enuTogPinValue+0x26>
    3c4a:	70 c0       	rjmp	.+224    	; 0x3d2c <DIO_enuTogPinValue+0x106>
			switch(Copy_uint8PortID){
    3c4c:	8a 81       	ldd	r24, Y+2	; 0x02
    3c4e:	28 2f       	mov	r18, r24
    3c50:	30 e0       	ldi	r19, 0x00	; 0
    3c52:	3d 83       	std	Y+5, r19	; 0x05
    3c54:	2c 83       	std	Y+4, r18	; 0x04
    3c56:	8c 81       	ldd	r24, Y+4	; 0x04
    3c58:	9d 81       	ldd	r25, Y+5	; 0x05
    3c5a:	81 30       	cpi	r24, 0x01	; 1
    3c5c:	91 05       	cpc	r25, r1
    3c5e:	49 f1       	breq	.+82     	; 0x3cb2 <DIO_enuTogPinValue+0x8c>
    3c60:	2c 81       	ldd	r18, Y+4	; 0x04
    3c62:	3d 81       	ldd	r19, Y+5	; 0x05
    3c64:	22 30       	cpi	r18, 0x02	; 2
    3c66:	31 05       	cpc	r19, r1
    3c68:	2c f4       	brge	.+10     	; 0x3c74 <DIO_enuTogPinValue+0x4e>
    3c6a:	8c 81       	ldd	r24, Y+4	; 0x04
    3c6c:	9d 81       	ldd	r25, Y+5	; 0x05
    3c6e:	00 97       	sbiw	r24, 0x00	; 0
    3c70:	61 f0       	breq	.+24     	; 0x3c8a <DIO_enuTogPinValue+0x64>
    3c72:	5a c0       	rjmp	.+180    	; 0x3d28 <DIO_enuTogPinValue+0x102>
    3c74:	2c 81       	ldd	r18, Y+4	; 0x04
    3c76:	3d 81       	ldd	r19, Y+5	; 0x05
    3c78:	22 30       	cpi	r18, 0x02	; 2
    3c7a:	31 05       	cpc	r19, r1
    3c7c:	71 f1       	breq	.+92     	; 0x3cda <DIO_enuTogPinValue+0xb4>
    3c7e:	8c 81       	ldd	r24, Y+4	; 0x04
    3c80:	9d 81       	ldd	r25, Y+5	; 0x05
    3c82:	83 30       	cpi	r24, 0x03	; 3
    3c84:	91 05       	cpc	r25, r1
    3c86:	e9 f1       	breq	.+122    	; 0x3d02 <DIO_enuTogPinValue+0xdc>
    3c88:	4f c0       	rjmp	.+158    	; 0x3d28 <DIO_enuTogPinValue+0x102>
				case DIO_PORTA:
					PORTA ^= (BIT_MASK << Copy_uint8PinID);
    3c8a:	ab e3       	ldi	r26, 0x3B	; 59
    3c8c:	b0 e0       	ldi	r27, 0x00	; 0
    3c8e:	eb e3       	ldi	r30, 0x3B	; 59
    3c90:	f0 e0       	ldi	r31, 0x00	; 0
    3c92:	80 81       	ld	r24, Z
    3c94:	48 2f       	mov	r20, r24
    3c96:	8b 81       	ldd	r24, Y+3	; 0x03
    3c98:	28 2f       	mov	r18, r24
    3c9a:	30 e0       	ldi	r19, 0x00	; 0
    3c9c:	81 e0       	ldi	r24, 0x01	; 1
    3c9e:	90 e0       	ldi	r25, 0x00	; 0
    3ca0:	02 2e       	mov	r0, r18
    3ca2:	02 c0       	rjmp	.+4      	; 0x3ca8 <DIO_enuTogPinValue+0x82>
    3ca4:	88 0f       	add	r24, r24
    3ca6:	99 1f       	adc	r25, r25
    3ca8:	0a 94       	dec	r0
    3caa:	e2 f7       	brpl	.-8      	; 0x3ca4 <DIO_enuTogPinValue+0x7e>
    3cac:	84 27       	eor	r24, r20
    3cae:	8c 93       	st	X, r24
    3cb0:	3b c0       	rjmp	.+118    	; 0x3d28 <DIO_enuTogPinValue+0x102>
					break;
				case DIO_PORTB:
					PORTB ^= (BIT_MASK << Copy_uint8PinID);
    3cb2:	a8 e3       	ldi	r26, 0x38	; 56
    3cb4:	b0 e0       	ldi	r27, 0x00	; 0
    3cb6:	e8 e3       	ldi	r30, 0x38	; 56
    3cb8:	f0 e0       	ldi	r31, 0x00	; 0
    3cba:	80 81       	ld	r24, Z
    3cbc:	48 2f       	mov	r20, r24
    3cbe:	8b 81       	ldd	r24, Y+3	; 0x03
    3cc0:	28 2f       	mov	r18, r24
    3cc2:	30 e0       	ldi	r19, 0x00	; 0
    3cc4:	81 e0       	ldi	r24, 0x01	; 1
    3cc6:	90 e0       	ldi	r25, 0x00	; 0
    3cc8:	02 2e       	mov	r0, r18
    3cca:	02 c0       	rjmp	.+4      	; 0x3cd0 <DIO_enuTogPinValue+0xaa>
    3ccc:	88 0f       	add	r24, r24
    3cce:	99 1f       	adc	r25, r25
    3cd0:	0a 94       	dec	r0
    3cd2:	e2 f7       	brpl	.-8      	; 0x3ccc <DIO_enuTogPinValue+0xa6>
    3cd4:	84 27       	eor	r24, r20
    3cd6:	8c 93       	st	X, r24
    3cd8:	27 c0       	rjmp	.+78     	; 0x3d28 <DIO_enuTogPinValue+0x102>
					break;
				case DIO_PORTC:
					PORTC ^= (BIT_MASK << Copy_uint8PinID);
    3cda:	a5 e3       	ldi	r26, 0x35	; 53
    3cdc:	b0 e0       	ldi	r27, 0x00	; 0
    3cde:	e5 e3       	ldi	r30, 0x35	; 53
    3ce0:	f0 e0       	ldi	r31, 0x00	; 0
    3ce2:	80 81       	ld	r24, Z
    3ce4:	48 2f       	mov	r20, r24
    3ce6:	8b 81       	ldd	r24, Y+3	; 0x03
    3ce8:	28 2f       	mov	r18, r24
    3cea:	30 e0       	ldi	r19, 0x00	; 0
    3cec:	81 e0       	ldi	r24, 0x01	; 1
    3cee:	90 e0       	ldi	r25, 0x00	; 0
    3cf0:	02 2e       	mov	r0, r18
    3cf2:	02 c0       	rjmp	.+4      	; 0x3cf8 <DIO_enuTogPinValue+0xd2>
    3cf4:	88 0f       	add	r24, r24
    3cf6:	99 1f       	adc	r25, r25
    3cf8:	0a 94       	dec	r0
    3cfa:	e2 f7       	brpl	.-8      	; 0x3cf4 <DIO_enuTogPinValue+0xce>
    3cfc:	84 27       	eor	r24, r20
    3cfe:	8c 93       	st	X, r24
    3d00:	13 c0       	rjmp	.+38     	; 0x3d28 <DIO_enuTogPinValue+0x102>
					break;
				case DIO_PORTD:
					PORTD ^= (BIT_MASK << Copy_uint8PinID);
    3d02:	a2 e3       	ldi	r26, 0x32	; 50
    3d04:	b0 e0       	ldi	r27, 0x00	; 0
    3d06:	e2 e3       	ldi	r30, 0x32	; 50
    3d08:	f0 e0       	ldi	r31, 0x00	; 0
    3d0a:	80 81       	ld	r24, Z
    3d0c:	48 2f       	mov	r20, r24
    3d0e:	8b 81       	ldd	r24, Y+3	; 0x03
    3d10:	28 2f       	mov	r18, r24
    3d12:	30 e0       	ldi	r19, 0x00	; 0
    3d14:	81 e0       	ldi	r24, 0x01	; 1
    3d16:	90 e0       	ldi	r25, 0x00	; 0
    3d18:	02 2e       	mov	r0, r18
    3d1a:	02 c0       	rjmp	.+4      	; 0x3d20 <DIO_enuTogPinValue+0xfa>
    3d1c:	88 0f       	add	r24, r24
    3d1e:	99 1f       	adc	r25, r25
    3d20:	0a 94       	dec	r0
    3d22:	e2 f7       	brpl	.-8      	; 0x3d1c <DIO_enuTogPinValue+0xf6>
    3d24:	84 27       	eor	r24, r20
    3d26:	8c 93       	st	X, r24
					break;
			}
			Local_enuErrorState = ES_OK;
    3d28:	19 82       	std	Y+1, r1	; 0x01
    3d2a:	05 c0       	rjmp	.+10     	; 0x3d36 <DIO_enuTogPinValue+0x110>
		}
		else{
			Local_enuErrorState = ES_PIN_OUT_OF_RANGE;
    3d2c:	84 e0       	ldi	r24, 0x04	; 4
    3d2e:	89 83       	std	Y+1, r24	; 0x01
    3d30:	02 c0       	rjmp	.+4      	; 0x3d36 <DIO_enuTogPinValue+0x110>
		}
	}
	else{
		Local_enuErrorState = ES_PORT_OUT_OF_RANGE;
    3d32:	83 e0       	ldi	r24, 0x03	; 3
    3d34:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
    3d36:	89 81       	ldd	r24, Y+1	; 0x01
}
    3d38:	0f 90       	pop	r0
    3d3a:	0f 90       	pop	r0
    3d3c:	0f 90       	pop	r0
    3d3e:	0f 90       	pop	r0
    3d40:	0f 90       	pop	r0
    3d42:	cf 91       	pop	r28
    3d44:	df 91       	pop	r29
    3d46:	08 95       	ret

00003d48 <DIO_enuGetPinValue>:

ES_t DIO_enuGetPinValue(uint_8 Copy_uint8PortID, uint_8 Copy_uint8PinID, uint_8 *Copy_uint8Value){
    3d48:	df 93       	push	r29
    3d4a:	cf 93       	push	r28
    3d4c:	cd b7       	in	r28, 0x3d	; 61
    3d4e:	de b7       	in	r29, 0x3e	; 62
    3d50:	27 97       	sbiw	r28, 0x07	; 7
    3d52:	0f b6       	in	r0, 0x3f	; 63
    3d54:	f8 94       	cli
    3d56:	de bf       	out	0x3e, r29	; 62
    3d58:	0f be       	out	0x3f, r0	; 63
    3d5a:	cd bf       	out	0x3d, r28	; 61
    3d5c:	8a 83       	std	Y+2, r24	; 0x02
    3d5e:	6b 83       	std	Y+3, r22	; 0x03
    3d60:	5d 83       	std	Y+5, r21	; 0x05
    3d62:	4c 83       	std	Y+4, r20	; 0x04
	ES_t Local_enuErrorState = ES_NOK;
    3d64:	81 e0       	ldi	r24, 0x01	; 1
    3d66:	89 83       	std	Y+1, r24	; 0x01

	if(Copy_uint8PortID <= DIO_PORTD){
    3d68:	8a 81       	ldd	r24, Y+2	; 0x02
    3d6a:	84 30       	cpi	r24, 0x04	; 4
    3d6c:	08 f0       	brcs	.+2      	; 0x3d70 <DIO_enuGetPinValue+0x28>
    3d6e:	81 c0       	rjmp	.+258    	; 0x3e72 <DIO_enuGetPinValue+0x12a>
			if(Copy_uint8PinID <= DIO_PIN7){
    3d70:	8b 81       	ldd	r24, Y+3	; 0x03
    3d72:	88 30       	cpi	r24, 0x08	; 8
    3d74:	08 f0       	brcs	.+2      	; 0x3d78 <DIO_enuGetPinValue+0x30>
    3d76:	7a c0       	rjmp	.+244    	; 0x3e6c <DIO_enuGetPinValue+0x124>
				if(Copy_uint8Value != NULL){
    3d78:	8c 81       	ldd	r24, Y+4	; 0x04
    3d7a:	9d 81       	ldd	r25, Y+5	; 0x05
    3d7c:	00 97       	sbiw	r24, 0x00	; 0
    3d7e:	09 f4       	brne	.+2      	; 0x3d82 <DIO_enuGetPinValue+0x3a>
    3d80:	72 c0       	rjmp	.+228    	; 0x3e66 <DIO_enuGetPinValue+0x11e>
					switch(Copy_uint8PortID){
    3d82:	8a 81       	ldd	r24, Y+2	; 0x02
    3d84:	28 2f       	mov	r18, r24
    3d86:	30 e0       	ldi	r19, 0x00	; 0
    3d88:	3f 83       	std	Y+7, r19	; 0x07
    3d8a:	2e 83       	std	Y+6, r18	; 0x06
    3d8c:	4e 81       	ldd	r20, Y+6	; 0x06
    3d8e:	5f 81       	ldd	r21, Y+7	; 0x07
    3d90:	41 30       	cpi	r20, 0x01	; 1
    3d92:	51 05       	cpc	r21, r1
    3d94:	59 f1       	breq	.+86     	; 0x3dec <DIO_enuGetPinValue+0xa4>
    3d96:	8e 81       	ldd	r24, Y+6	; 0x06
    3d98:	9f 81       	ldd	r25, Y+7	; 0x07
    3d9a:	82 30       	cpi	r24, 0x02	; 2
    3d9c:	91 05       	cpc	r25, r1
    3d9e:	34 f4       	brge	.+12     	; 0x3dac <DIO_enuGetPinValue+0x64>
    3da0:	2e 81       	ldd	r18, Y+6	; 0x06
    3da2:	3f 81       	ldd	r19, Y+7	; 0x07
    3da4:	21 15       	cp	r18, r1
    3da6:	31 05       	cpc	r19, r1
    3da8:	69 f0       	breq	.+26     	; 0x3dc4 <DIO_enuGetPinValue+0x7c>
    3daa:	5b c0       	rjmp	.+182    	; 0x3e62 <DIO_enuGetPinValue+0x11a>
    3dac:	4e 81       	ldd	r20, Y+6	; 0x06
    3dae:	5f 81       	ldd	r21, Y+7	; 0x07
    3db0:	42 30       	cpi	r20, 0x02	; 2
    3db2:	51 05       	cpc	r21, r1
    3db4:	79 f1       	breq	.+94     	; 0x3e14 <DIO_enuGetPinValue+0xcc>
    3db6:	8e 81       	ldd	r24, Y+6	; 0x06
    3db8:	9f 81       	ldd	r25, Y+7	; 0x07
    3dba:	83 30       	cpi	r24, 0x03	; 3
    3dbc:	91 05       	cpc	r25, r1
    3dbe:	09 f4       	brne	.+2      	; 0x3dc2 <DIO_enuGetPinValue+0x7a>
    3dc0:	3d c0       	rjmp	.+122    	; 0x3e3c <DIO_enuGetPinValue+0xf4>
    3dc2:	4f c0       	rjmp	.+158    	; 0x3e62 <DIO_enuGetPinValue+0x11a>
						case DIO_PORTA:
							*Copy_uint8Value = BIT_MASK & (PINA >> Copy_uint8PinID);
    3dc4:	e9 e3       	ldi	r30, 0x39	; 57
    3dc6:	f0 e0       	ldi	r31, 0x00	; 0
    3dc8:	80 81       	ld	r24, Z
    3dca:	28 2f       	mov	r18, r24
    3dcc:	30 e0       	ldi	r19, 0x00	; 0
    3dce:	8b 81       	ldd	r24, Y+3	; 0x03
    3dd0:	88 2f       	mov	r24, r24
    3dd2:	90 e0       	ldi	r25, 0x00	; 0
    3dd4:	a9 01       	movw	r20, r18
    3dd6:	02 c0       	rjmp	.+4      	; 0x3ddc <DIO_enuGetPinValue+0x94>
    3dd8:	55 95       	asr	r21
    3dda:	47 95       	ror	r20
    3ddc:	8a 95       	dec	r24
    3dde:	e2 f7       	brpl	.-8      	; 0x3dd8 <DIO_enuGetPinValue+0x90>
    3de0:	ca 01       	movw	r24, r20
    3de2:	81 70       	andi	r24, 0x01	; 1
    3de4:	ec 81       	ldd	r30, Y+4	; 0x04
    3de6:	fd 81       	ldd	r31, Y+5	; 0x05
    3de8:	80 83       	st	Z, r24
    3dea:	3b c0       	rjmp	.+118    	; 0x3e62 <DIO_enuGetPinValue+0x11a>
							break;
						case DIO_PORTB:
							*Copy_uint8Value = BIT_MASK & (PINB >> Copy_uint8PinID);
    3dec:	e6 e3       	ldi	r30, 0x36	; 54
    3dee:	f0 e0       	ldi	r31, 0x00	; 0
    3df0:	80 81       	ld	r24, Z
    3df2:	28 2f       	mov	r18, r24
    3df4:	30 e0       	ldi	r19, 0x00	; 0
    3df6:	8b 81       	ldd	r24, Y+3	; 0x03
    3df8:	88 2f       	mov	r24, r24
    3dfa:	90 e0       	ldi	r25, 0x00	; 0
    3dfc:	a9 01       	movw	r20, r18
    3dfe:	02 c0       	rjmp	.+4      	; 0x3e04 <DIO_enuGetPinValue+0xbc>
    3e00:	55 95       	asr	r21
    3e02:	47 95       	ror	r20
    3e04:	8a 95       	dec	r24
    3e06:	e2 f7       	brpl	.-8      	; 0x3e00 <DIO_enuGetPinValue+0xb8>
    3e08:	ca 01       	movw	r24, r20
    3e0a:	81 70       	andi	r24, 0x01	; 1
    3e0c:	ec 81       	ldd	r30, Y+4	; 0x04
    3e0e:	fd 81       	ldd	r31, Y+5	; 0x05
    3e10:	80 83       	st	Z, r24
    3e12:	27 c0       	rjmp	.+78     	; 0x3e62 <DIO_enuGetPinValue+0x11a>
							break;
						case DIO_PORTC:
							*Copy_uint8Value = BIT_MASK & (PINC >> Copy_uint8PinID);
    3e14:	e3 e3       	ldi	r30, 0x33	; 51
    3e16:	f0 e0       	ldi	r31, 0x00	; 0
    3e18:	80 81       	ld	r24, Z
    3e1a:	28 2f       	mov	r18, r24
    3e1c:	30 e0       	ldi	r19, 0x00	; 0
    3e1e:	8b 81       	ldd	r24, Y+3	; 0x03
    3e20:	88 2f       	mov	r24, r24
    3e22:	90 e0       	ldi	r25, 0x00	; 0
    3e24:	a9 01       	movw	r20, r18
    3e26:	02 c0       	rjmp	.+4      	; 0x3e2c <DIO_enuGetPinValue+0xe4>
    3e28:	55 95       	asr	r21
    3e2a:	47 95       	ror	r20
    3e2c:	8a 95       	dec	r24
    3e2e:	e2 f7       	brpl	.-8      	; 0x3e28 <DIO_enuGetPinValue+0xe0>
    3e30:	ca 01       	movw	r24, r20
    3e32:	81 70       	andi	r24, 0x01	; 1
    3e34:	ec 81       	ldd	r30, Y+4	; 0x04
    3e36:	fd 81       	ldd	r31, Y+5	; 0x05
    3e38:	80 83       	st	Z, r24
    3e3a:	13 c0       	rjmp	.+38     	; 0x3e62 <DIO_enuGetPinValue+0x11a>
							break;
						case DIO_PORTD:
							*Copy_uint8Value = BIT_MASK & (PIND >> Copy_uint8PinID);
    3e3c:	e0 e3       	ldi	r30, 0x30	; 48
    3e3e:	f0 e0       	ldi	r31, 0x00	; 0
    3e40:	80 81       	ld	r24, Z
    3e42:	28 2f       	mov	r18, r24
    3e44:	30 e0       	ldi	r19, 0x00	; 0
    3e46:	8b 81       	ldd	r24, Y+3	; 0x03
    3e48:	88 2f       	mov	r24, r24
    3e4a:	90 e0       	ldi	r25, 0x00	; 0
    3e4c:	a9 01       	movw	r20, r18
    3e4e:	02 c0       	rjmp	.+4      	; 0x3e54 <DIO_enuGetPinValue+0x10c>
    3e50:	55 95       	asr	r21
    3e52:	47 95       	ror	r20
    3e54:	8a 95       	dec	r24
    3e56:	e2 f7       	brpl	.-8      	; 0x3e50 <DIO_enuGetPinValue+0x108>
    3e58:	ca 01       	movw	r24, r20
    3e5a:	81 70       	andi	r24, 0x01	; 1
    3e5c:	ec 81       	ldd	r30, Y+4	; 0x04
    3e5e:	fd 81       	ldd	r31, Y+5	; 0x05
    3e60:	80 83       	st	Z, r24
							break;
					}
					Local_enuErrorState = ES_OK;
    3e62:	19 82       	std	Y+1, r1	; 0x01
    3e64:	08 c0       	rjmp	.+16     	; 0x3e76 <DIO_enuGetPinValue+0x12e>
				}
				else{
					Local_enuErrorState = ES_NULL_POINTER;
    3e66:	82 e0       	ldi	r24, 0x02	; 2
    3e68:	89 83       	std	Y+1, r24	; 0x01
    3e6a:	05 c0       	rjmp	.+10     	; 0x3e76 <DIO_enuGetPinValue+0x12e>
				}
			}
			else{
				Local_enuErrorState = ES_PIN_OUT_OF_RANGE;
    3e6c:	84 e0       	ldi	r24, 0x04	; 4
    3e6e:	89 83       	std	Y+1, r24	; 0x01
    3e70:	02 c0       	rjmp	.+4      	; 0x3e76 <DIO_enuGetPinValue+0x12e>
			}
		}
		else{
			Local_enuErrorState = ES_PORT_OUT_OF_RANGE;
    3e72:	83 e0       	ldi	r24, 0x03	; 3
    3e74:	89 83       	std	Y+1, r24	; 0x01
		}


	return Local_enuErrorState;
    3e76:	89 81       	ldd	r24, Y+1	; 0x01
}
    3e78:	27 96       	adiw	r28, 0x07	; 7
    3e7a:	0f b6       	in	r0, 0x3f	; 63
    3e7c:	f8 94       	cli
    3e7e:	de bf       	out	0x3e, r29	; 62
    3e80:	0f be       	out	0x3f, r0	; 63
    3e82:	cd bf       	out	0x3d, r28	; 61
    3e84:	cf 91       	pop	r28
    3e86:	df 91       	pop	r29
    3e88:	08 95       	ret

00003e8a <LCD_enuInit>:
#include "LCD_priv.h"
#include "LCD_config.h"

#include "util/delay.h"

ES_t LCD_enuInit(void){
    3e8a:	df 93       	push	r29
    3e8c:	cf 93       	push	r28
    3e8e:	cd b7       	in	r28, 0x3d	; 61
    3e90:	de b7       	in	r29, 0x3e	; 62
    3e92:	e9 97       	sbiw	r28, 0x39	; 57
    3e94:	0f b6       	in	r0, 0x3f	; 63
    3e96:	f8 94       	cli
    3e98:	de bf       	out	0x3e, r29	; 62
    3e9a:	0f be       	out	0x3f, r0	; 63
    3e9c:	cd bf       	out	0x3d, r28	; 61
	ES_t Local_enuErrorStates = ES_NOK;
    3e9e:	81 e0       	ldi	r24, 0x01	; 1
    3ea0:	89 af       	std	Y+57, r24	; 0x39
	Local_enuErrorStates = DIO_enuSetPinDir(RS_PORT, RS_PIN, OUTPUT);
    3ea2:	80 e0       	ldi	r24, 0x00	; 0
    3ea4:	60 e0       	ldi	r22, 0x00	; 0
    3ea6:	41 e0       	ldi	r20, 0x01	; 1
    3ea8:	0e 94 3d 1c 	call	0x387a	; 0x387a <DIO_enuSetPinDir>
    3eac:	89 af       	std	Y+57, r24	; 0x39
	Local_enuErrorStates = DIO_enuSetPinDir(RW_PORT, RW_PIN, OUTPUT);
    3eae:	80 e0       	ldi	r24, 0x00	; 0
    3eb0:	61 e0       	ldi	r22, 0x01	; 1
    3eb2:	41 e0       	ldi	r20, 0x01	; 1
    3eb4:	0e 94 3d 1c 	call	0x387a	; 0x387a <DIO_enuSetPinDir>
    3eb8:	89 af       	std	Y+57, r24	; 0x39
	Local_enuErrorStates = DIO_enuSetPinDir(EN_PORT, EN_PIN, OUTPUT);
    3eba:	80 e0       	ldi	r24, 0x00	; 0
    3ebc:	62 e0       	ldi	r22, 0x02	; 2
    3ebe:	41 e0       	ldi	r20, 0x01	; 1
    3ec0:	0e 94 3d 1c 	call	0x387a	; 0x387a <DIO_enuSetPinDir>
    3ec4:	89 af       	std	Y+57, r24	; 0x39

	Local_enuErrorStates = DIO_enuSetPinDir(D7_PORT, D7_PIN, OUTPUT);
    3ec6:	80 e0       	ldi	r24, 0x00	; 0
    3ec8:	63 e0       	ldi	r22, 0x03	; 3
    3eca:	41 e0       	ldi	r20, 0x01	; 1
    3ecc:	0e 94 3d 1c 	call	0x387a	; 0x387a <DIO_enuSetPinDir>
    3ed0:	89 af       	std	Y+57, r24	; 0x39
	Local_enuErrorStates = DIO_enuSetPinDir(D6_PORT, D6_PIN, OUTPUT);
    3ed2:	80 e0       	ldi	r24, 0x00	; 0
    3ed4:	64 e0       	ldi	r22, 0x04	; 4
    3ed6:	41 e0       	ldi	r20, 0x01	; 1
    3ed8:	0e 94 3d 1c 	call	0x387a	; 0x387a <DIO_enuSetPinDir>
    3edc:	89 af       	std	Y+57, r24	; 0x39
	Local_enuErrorStates = DIO_enuSetPinDir(D5_PORT, D5_PIN, OUTPUT);
    3ede:	80 e0       	ldi	r24, 0x00	; 0
    3ee0:	65 e0       	ldi	r22, 0x05	; 5
    3ee2:	41 e0       	ldi	r20, 0x01	; 1
    3ee4:	0e 94 3d 1c 	call	0x387a	; 0x387a <DIO_enuSetPinDir>
    3ee8:	89 af       	std	Y+57, r24	; 0x39
	Local_enuErrorStates = DIO_enuSetPinDir(D4_PORT, D4_PIN, OUTPUT);
    3eea:	80 e0       	ldi	r24, 0x00	; 0
    3eec:	66 e0       	ldi	r22, 0x06	; 6
    3eee:	41 e0       	ldi	r20, 0x01	; 1
    3ef0:	0e 94 3d 1c 	call	0x387a	; 0x387a <DIO_enuSetPinDir>
    3ef4:	89 af       	std	Y+57, r24	; 0x39
    3ef6:	80 e0       	ldi	r24, 0x00	; 0
    3ef8:	90 e0       	ldi	r25, 0x00	; 0
    3efa:	a0 ef       	ldi	r26, 0xF0	; 240
    3efc:	b1 e4       	ldi	r27, 0x41	; 65
    3efe:	8d ab       	std	Y+53, r24	; 0x35
    3f00:	9e ab       	std	Y+54, r25	; 0x36
    3f02:	af ab       	std	Y+55, r26	; 0x37
    3f04:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3f06:	6d a9       	ldd	r22, Y+53	; 0x35
    3f08:	7e a9       	ldd	r23, Y+54	; 0x36
    3f0a:	8f a9       	ldd	r24, Y+55	; 0x37
    3f0c:	98 ad       	ldd	r25, Y+56	; 0x38
    3f0e:	20 e0       	ldi	r18, 0x00	; 0
    3f10:	30 e0       	ldi	r19, 0x00	; 0
    3f12:	4a e7       	ldi	r20, 0x7A	; 122
    3f14:	53 e4       	ldi	r21, 0x43	; 67
    3f16:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    3f1a:	dc 01       	movw	r26, r24
    3f1c:	cb 01       	movw	r24, r22
    3f1e:	89 ab       	std	Y+49, r24	; 0x31
    3f20:	9a ab       	std	Y+50, r25	; 0x32
    3f22:	ab ab       	std	Y+51, r26	; 0x33
    3f24:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    3f26:	69 a9       	ldd	r22, Y+49	; 0x31
    3f28:	7a a9       	ldd	r23, Y+50	; 0x32
    3f2a:	8b a9       	ldd	r24, Y+51	; 0x33
    3f2c:	9c a9       	ldd	r25, Y+52	; 0x34
    3f2e:	20 e0       	ldi	r18, 0x00	; 0
    3f30:	30 e0       	ldi	r19, 0x00	; 0
    3f32:	40 e8       	ldi	r20, 0x80	; 128
    3f34:	5f e3       	ldi	r21, 0x3F	; 63
    3f36:	0e 94 f9 16 	call	0x2df2	; 0x2df2 <__ltsf2>
    3f3a:	88 23       	and	r24, r24
    3f3c:	2c f4       	brge	.+10     	; 0x3f48 <LCD_enuInit+0xbe>
		__ticks = 1;
    3f3e:	81 e0       	ldi	r24, 0x01	; 1
    3f40:	90 e0       	ldi	r25, 0x00	; 0
    3f42:	98 ab       	std	Y+48, r25	; 0x30
    3f44:	8f a7       	std	Y+47, r24	; 0x2f
    3f46:	3f c0       	rjmp	.+126    	; 0x3fc6 <LCD_enuInit+0x13c>
	else if (__tmp > 65535)
    3f48:	69 a9       	ldd	r22, Y+49	; 0x31
    3f4a:	7a a9       	ldd	r23, Y+50	; 0x32
    3f4c:	8b a9       	ldd	r24, Y+51	; 0x33
    3f4e:	9c a9       	ldd	r25, Y+52	; 0x34
    3f50:	20 e0       	ldi	r18, 0x00	; 0
    3f52:	3f ef       	ldi	r19, 0xFF	; 255
    3f54:	4f e7       	ldi	r20, 0x7F	; 127
    3f56:	57 e4       	ldi	r21, 0x47	; 71
    3f58:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__gtsf2>
    3f5c:	18 16       	cp	r1, r24
    3f5e:	4c f5       	brge	.+82     	; 0x3fb2 <LCD_enuInit+0x128>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3f60:	6d a9       	ldd	r22, Y+53	; 0x35
    3f62:	7e a9       	ldd	r23, Y+54	; 0x36
    3f64:	8f a9       	ldd	r24, Y+55	; 0x37
    3f66:	98 ad       	ldd	r25, Y+56	; 0x38
    3f68:	20 e0       	ldi	r18, 0x00	; 0
    3f6a:	30 e0       	ldi	r19, 0x00	; 0
    3f6c:	40 e2       	ldi	r20, 0x20	; 32
    3f6e:	51 e4       	ldi	r21, 0x41	; 65
    3f70:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    3f74:	dc 01       	movw	r26, r24
    3f76:	cb 01       	movw	r24, r22
    3f78:	bc 01       	movw	r22, r24
    3f7a:	cd 01       	movw	r24, r26
    3f7c:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3f80:	dc 01       	movw	r26, r24
    3f82:	cb 01       	movw	r24, r22
    3f84:	98 ab       	std	Y+48, r25	; 0x30
    3f86:	8f a7       	std	Y+47, r24	; 0x2f
    3f88:	0f c0       	rjmp	.+30     	; 0x3fa8 <LCD_enuInit+0x11e>
    3f8a:	89 e1       	ldi	r24, 0x19	; 25
    3f8c:	90 e0       	ldi	r25, 0x00	; 0
    3f8e:	9e a7       	std	Y+46, r25	; 0x2e
    3f90:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3f92:	8d a5       	ldd	r24, Y+45	; 0x2d
    3f94:	9e a5       	ldd	r25, Y+46	; 0x2e
    3f96:	01 97       	sbiw	r24, 0x01	; 1
    3f98:	f1 f7       	brne	.-4      	; 0x3f96 <LCD_enuInit+0x10c>
    3f9a:	9e a7       	std	Y+46, r25	; 0x2e
    3f9c:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3f9e:	8f a5       	ldd	r24, Y+47	; 0x2f
    3fa0:	98 a9       	ldd	r25, Y+48	; 0x30
    3fa2:	01 97       	sbiw	r24, 0x01	; 1
    3fa4:	98 ab       	std	Y+48, r25	; 0x30
    3fa6:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3fa8:	8f a5       	ldd	r24, Y+47	; 0x2f
    3faa:	98 a9       	ldd	r25, Y+48	; 0x30
    3fac:	00 97       	sbiw	r24, 0x00	; 0
    3fae:	69 f7       	brne	.-38     	; 0x3f8a <LCD_enuInit+0x100>
    3fb0:	14 c0       	rjmp	.+40     	; 0x3fda <LCD_enuInit+0x150>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3fb2:	69 a9       	ldd	r22, Y+49	; 0x31
    3fb4:	7a a9       	ldd	r23, Y+50	; 0x32
    3fb6:	8b a9       	ldd	r24, Y+51	; 0x33
    3fb8:	9c a9       	ldd	r25, Y+52	; 0x34
    3fba:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3fbe:	dc 01       	movw	r26, r24
    3fc0:	cb 01       	movw	r24, r22
    3fc2:	98 ab       	std	Y+48, r25	; 0x30
    3fc4:	8f a7       	std	Y+47, r24	; 0x2f
    3fc6:	8f a5       	ldd	r24, Y+47	; 0x2f
    3fc8:	98 a9       	ldd	r25, Y+48	; 0x30
    3fca:	9c a7       	std	Y+44, r25	; 0x2c
    3fcc:	8b a7       	std	Y+43, r24	; 0x2b
    3fce:	8b a5       	ldd	r24, Y+43	; 0x2b
    3fd0:	9c a5       	ldd	r25, Y+44	; 0x2c
    3fd2:	01 97       	sbiw	r24, 0x01	; 1
    3fd4:	f1 f7       	brne	.-4      	; 0x3fd2 <LCD_enuInit+0x148>
    3fd6:	9c a7       	std	Y+44, r25	; 0x2c
    3fd8:	8b a7       	std	Y+43, r24	; 0x2b

	Local_enuErrorStates = LCD_enuToSendCommand(0x38);
	_delay_ms(1);

#elif LCD_BIT_MODE == FOUR_BIT_MODE
	Local_enuErrorStates = LCD_enuToSendCommand(0x28);
    3fda:	88 e2       	ldi	r24, 0x28	; 40
    3fdc:	0e 94 13 25 	call	0x4a26	; 0x4a26 <LCD_enuToSendCommand>
    3fe0:	89 af       	std	Y+57, r24	; 0x39
    3fe2:	80 e0       	ldi	r24, 0x00	; 0
    3fe4:	90 e0       	ldi	r25, 0x00	; 0
    3fe6:	a0 e8       	ldi	r26, 0x80	; 128
    3fe8:	bf e3       	ldi	r27, 0x3F	; 63
    3fea:	8f a3       	std	Y+39, r24	; 0x27
    3fec:	98 a7       	std	Y+40, r25	; 0x28
    3fee:	a9 a7       	std	Y+41, r26	; 0x29
    3ff0:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3ff2:	6f a1       	ldd	r22, Y+39	; 0x27
    3ff4:	78 a5       	ldd	r23, Y+40	; 0x28
    3ff6:	89 a5       	ldd	r24, Y+41	; 0x29
    3ff8:	9a a5       	ldd	r25, Y+42	; 0x2a
    3ffa:	20 e0       	ldi	r18, 0x00	; 0
    3ffc:	30 e0       	ldi	r19, 0x00	; 0
    3ffe:	4a e7       	ldi	r20, 0x7A	; 122
    4000:	53 e4       	ldi	r21, 0x43	; 67
    4002:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    4006:	dc 01       	movw	r26, r24
    4008:	cb 01       	movw	r24, r22
    400a:	8b a3       	std	Y+35, r24	; 0x23
    400c:	9c a3       	std	Y+36, r25	; 0x24
    400e:	ad a3       	std	Y+37, r26	; 0x25
    4010:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    4012:	6b a1       	ldd	r22, Y+35	; 0x23
    4014:	7c a1       	ldd	r23, Y+36	; 0x24
    4016:	8d a1       	ldd	r24, Y+37	; 0x25
    4018:	9e a1       	ldd	r25, Y+38	; 0x26
    401a:	20 e0       	ldi	r18, 0x00	; 0
    401c:	30 e0       	ldi	r19, 0x00	; 0
    401e:	40 e8       	ldi	r20, 0x80	; 128
    4020:	5f e3       	ldi	r21, 0x3F	; 63
    4022:	0e 94 f9 16 	call	0x2df2	; 0x2df2 <__ltsf2>
    4026:	88 23       	and	r24, r24
    4028:	2c f4       	brge	.+10     	; 0x4034 <LCD_enuInit+0x1aa>
		__ticks = 1;
    402a:	81 e0       	ldi	r24, 0x01	; 1
    402c:	90 e0       	ldi	r25, 0x00	; 0
    402e:	9a a3       	std	Y+34, r25	; 0x22
    4030:	89 a3       	std	Y+33, r24	; 0x21
    4032:	3f c0       	rjmp	.+126    	; 0x40b2 <LCD_enuInit+0x228>
	else if (__tmp > 65535)
    4034:	6b a1       	ldd	r22, Y+35	; 0x23
    4036:	7c a1       	ldd	r23, Y+36	; 0x24
    4038:	8d a1       	ldd	r24, Y+37	; 0x25
    403a:	9e a1       	ldd	r25, Y+38	; 0x26
    403c:	20 e0       	ldi	r18, 0x00	; 0
    403e:	3f ef       	ldi	r19, 0xFF	; 255
    4040:	4f e7       	ldi	r20, 0x7F	; 127
    4042:	57 e4       	ldi	r21, 0x47	; 71
    4044:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__gtsf2>
    4048:	18 16       	cp	r1, r24
    404a:	4c f5       	brge	.+82     	; 0x409e <LCD_enuInit+0x214>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    404c:	6f a1       	ldd	r22, Y+39	; 0x27
    404e:	78 a5       	ldd	r23, Y+40	; 0x28
    4050:	89 a5       	ldd	r24, Y+41	; 0x29
    4052:	9a a5       	ldd	r25, Y+42	; 0x2a
    4054:	20 e0       	ldi	r18, 0x00	; 0
    4056:	30 e0       	ldi	r19, 0x00	; 0
    4058:	40 e2       	ldi	r20, 0x20	; 32
    405a:	51 e4       	ldi	r21, 0x41	; 65
    405c:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    4060:	dc 01       	movw	r26, r24
    4062:	cb 01       	movw	r24, r22
    4064:	bc 01       	movw	r22, r24
    4066:	cd 01       	movw	r24, r26
    4068:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    406c:	dc 01       	movw	r26, r24
    406e:	cb 01       	movw	r24, r22
    4070:	9a a3       	std	Y+34, r25	; 0x22
    4072:	89 a3       	std	Y+33, r24	; 0x21
    4074:	0f c0       	rjmp	.+30     	; 0x4094 <LCD_enuInit+0x20a>
    4076:	89 e1       	ldi	r24, 0x19	; 25
    4078:	90 e0       	ldi	r25, 0x00	; 0
    407a:	98 a3       	std	Y+32, r25	; 0x20
    407c:	8f 8f       	std	Y+31, r24	; 0x1f
    407e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4080:	98 a1       	ldd	r25, Y+32	; 0x20
    4082:	01 97       	sbiw	r24, 0x01	; 1
    4084:	f1 f7       	brne	.-4      	; 0x4082 <LCD_enuInit+0x1f8>
    4086:	98 a3       	std	Y+32, r25	; 0x20
    4088:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    408a:	89 a1       	ldd	r24, Y+33	; 0x21
    408c:	9a a1       	ldd	r25, Y+34	; 0x22
    408e:	01 97       	sbiw	r24, 0x01	; 1
    4090:	9a a3       	std	Y+34, r25	; 0x22
    4092:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4094:	89 a1       	ldd	r24, Y+33	; 0x21
    4096:	9a a1       	ldd	r25, Y+34	; 0x22
    4098:	00 97       	sbiw	r24, 0x00	; 0
    409a:	69 f7       	brne	.-38     	; 0x4076 <LCD_enuInit+0x1ec>
    409c:	14 c0       	rjmp	.+40     	; 0x40c6 <LCD_enuInit+0x23c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    409e:	6b a1       	ldd	r22, Y+35	; 0x23
    40a0:	7c a1       	ldd	r23, Y+36	; 0x24
    40a2:	8d a1       	ldd	r24, Y+37	; 0x25
    40a4:	9e a1       	ldd	r25, Y+38	; 0x26
    40a6:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    40aa:	dc 01       	movw	r26, r24
    40ac:	cb 01       	movw	r24, r22
    40ae:	9a a3       	std	Y+34, r25	; 0x22
    40b0:	89 a3       	std	Y+33, r24	; 0x21
    40b2:	89 a1       	ldd	r24, Y+33	; 0x21
    40b4:	9a a1       	ldd	r25, Y+34	; 0x22
    40b6:	9e 8f       	std	Y+30, r25	; 0x1e
    40b8:	8d 8f       	std	Y+29, r24	; 0x1d
    40ba:	8d 8d       	ldd	r24, Y+29	; 0x1d
    40bc:	9e 8d       	ldd	r25, Y+30	; 0x1e
    40be:	01 97       	sbiw	r24, 0x01	; 1
    40c0:	f1 f7       	brne	.-4      	; 0x40be <LCD_enuInit+0x234>
    40c2:	9e 8f       	std	Y+30, r25	; 0x1e
    40c4:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
#endif

	Local_enuErrorStates = LCD_enuToSendCommand(0x0f);
    40c6:	8f e0       	ldi	r24, 0x0F	; 15
    40c8:	0e 94 13 25 	call	0x4a26	; 0x4a26 <LCD_enuToSendCommand>
    40cc:	89 af       	std	Y+57, r24	; 0x39
    40ce:	80 e0       	ldi	r24, 0x00	; 0
    40d0:	90 e0       	ldi	r25, 0x00	; 0
    40d2:	a0 e8       	ldi	r26, 0x80	; 128
    40d4:	bf e3       	ldi	r27, 0x3F	; 63
    40d6:	89 8f       	std	Y+25, r24	; 0x19
    40d8:	9a 8f       	std	Y+26, r25	; 0x1a
    40da:	ab 8f       	std	Y+27, r26	; 0x1b
    40dc:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    40de:	69 8d       	ldd	r22, Y+25	; 0x19
    40e0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    40e2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    40e4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    40e6:	20 e0       	ldi	r18, 0x00	; 0
    40e8:	30 e0       	ldi	r19, 0x00	; 0
    40ea:	4a e7       	ldi	r20, 0x7A	; 122
    40ec:	53 e4       	ldi	r21, 0x43	; 67
    40ee:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    40f2:	dc 01       	movw	r26, r24
    40f4:	cb 01       	movw	r24, r22
    40f6:	8d 8b       	std	Y+21, r24	; 0x15
    40f8:	9e 8b       	std	Y+22, r25	; 0x16
    40fa:	af 8b       	std	Y+23, r26	; 0x17
    40fc:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    40fe:	6d 89       	ldd	r22, Y+21	; 0x15
    4100:	7e 89       	ldd	r23, Y+22	; 0x16
    4102:	8f 89       	ldd	r24, Y+23	; 0x17
    4104:	98 8d       	ldd	r25, Y+24	; 0x18
    4106:	20 e0       	ldi	r18, 0x00	; 0
    4108:	30 e0       	ldi	r19, 0x00	; 0
    410a:	40 e8       	ldi	r20, 0x80	; 128
    410c:	5f e3       	ldi	r21, 0x3F	; 63
    410e:	0e 94 f9 16 	call	0x2df2	; 0x2df2 <__ltsf2>
    4112:	88 23       	and	r24, r24
    4114:	2c f4       	brge	.+10     	; 0x4120 <LCD_enuInit+0x296>
		__ticks = 1;
    4116:	81 e0       	ldi	r24, 0x01	; 1
    4118:	90 e0       	ldi	r25, 0x00	; 0
    411a:	9c 8b       	std	Y+20, r25	; 0x14
    411c:	8b 8b       	std	Y+19, r24	; 0x13
    411e:	3f c0       	rjmp	.+126    	; 0x419e <LCD_enuInit+0x314>
	else if (__tmp > 65535)
    4120:	6d 89       	ldd	r22, Y+21	; 0x15
    4122:	7e 89       	ldd	r23, Y+22	; 0x16
    4124:	8f 89       	ldd	r24, Y+23	; 0x17
    4126:	98 8d       	ldd	r25, Y+24	; 0x18
    4128:	20 e0       	ldi	r18, 0x00	; 0
    412a:	3f ef       	ldi	r19, 0xFF	; 255
    412c:	4f e7       	ldi	r20, 0x7F	; 127
    412e:	57 e4       	ldi	r21, 0x47	; 71
    4130:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__gtsf2>
    4134:	18 16       	cp	r1, r24
    4136:	4c f5       	brge	.+82     	; 0x418a <LCD_enuInit+0x300>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4138:	69 8d       	ldd	r22, Y+25	; 0x19
    413a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    413c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    413e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4140:	20 e0       	ldi	r18, 0x00	; 0
    4142:	30 e0       	ldi	r19, 0x00	; 0
    4144:	40 e2       	ldi	r20, 0x20	; 32
    4146:	51 e4       	ldi	r21, 0x41	; 65
    4148:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    414c:	dc 01       	movw	r26, r24
    414e:	cb 01       	movw	r24, r22
    4150:	bc 01       	movw	r22, r24
    4152:	cd 01       	movw	r24, r26
    4154:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4158:	dc 01       	movw	r26, r24
    415a:	cb 01       	movw	r24, r22
    415c:	9c 8b       	std	Y+20, r25	; 0x14
    415e:	8b 8b       	std	Y+19, r24	; 0x13
    4160:	0f c0       	rjmp	.+30     	; 0x4180 <LCD_enuInit+0x2f6>
    4162:	89 e1       	ldi	r24, 0x19	; 25
    4164:	90 e0       	ldi	r25, 0x00	; 0
    4166:	9a 8b       	std	Y+18, r25	; 0x12
    4168:	89 8b       	std	Y+17, r24	; 0x11
    416a:	89 89       	ldd	r24, Y+17	; 0x11
    416c:	9a 89       	ldd	r25, Y+18	; 0x12
    416e:	01 97       	sbiw	r24, 0x01	; 1
    4170:	f1 f7       	brne	.-4      	; 0x416e <LCD_enuInit+0x2e4>
    4172:	9a 8b       	std	Y+18, r25	; 0x12
    4174:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4176:	8b 89       	ldd	r24, Y+19	; 0x13
    4178:	9c 89       	ldd	r25, Y+20	; 0x14
    417a:	01 97       	sbiw	r24, 0x01	; 1
    417c:	9c 8b       	std	Y+20, r25	; 0x14
    417e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4180:	8b 89       	ldd	r24, Y+19	; 0x13
    4182:	9c 89       	ldd	r25, Y+20	; 0x14
    4184:	00 97       	sbiw	r24, 0x00	; 0
    4186:	69 f7       	brne	.-38     	; 0x4162 <LCD_enuInit+0x2d8>
    4188:	14 c0       	rjmp	.+40     	; 0x41b2 <LCD_enuInit+0x328>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    418a:	6d 89       	ldd	r22, Y+21	; 0x15
    418c:	7e 89       	ldd	r23, Y+22	; 0x16
    418e:	8f 89       	ldd	r24, Y+23	; 0x17
    4190:	98 8d       	ldd	r25, Y+24	; 0x18
    4192:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4196:	dc 01       	movw	r26, r24
    4198:	cb 01       	movw	r24, r22
    419a:	9c 8b       	std	Y+20, r25	; 0x14
    419c:	8b 8b       	std	Y+19, r24	; 0x13
    419e:	8b 89       	ldd	r24, Y+19	; 0x13
    41a0:	9c 89       	ldd	r25, Y+20	; 0x14
    41a2:	98 8b       	std	Y+16, r25	; 0x10
    41a4:	8f 87       	std	Y+15, r24	; 0x0f
    41a6:	8f 85       	ldd	r24, Y+15	; 0x0f
    41a8:	98 89       	ldd	r25, Y+16	; 0x10
    41aa:	01 97       	sbiw	r24, 0x01	; 1
    41ac:	f1 f7       	brne	.-4      	; 0x41aa <LCD_enuInit+0x320>
    41ae:	98 8b       	std	Y+16, r25	; 0x10
    41b0:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	Local_enuErrorStates = LCD_enuToSendCommand(0x01);
    41b2:	81 e0       	ldi	r24, 0x01	; 1
    41b4:	0e 94 13 25 	call	0x4a26	; 0x4a26 <LCD_enuToSendCommand>
    41b8:	89 af       	std	Y+57, r24	; 0x39
    41ba:	80 e0       	ldi	r24, 0x00	; 0
    41bc:	90 e0       	ldi	r25, 0x00	; 0
    41be:	a0 e0       	ldi	r26, 0x00	; 0
    41c0:	b0 e4       	ldi	r27, 0x40	; 64
    41c2:	8b 87       	std	Y+11, r24	; 0x0b
    41c4:	9c 87       	std	Y+12, r25	; 0x0c
    41c6:	ad 87       	std	Y+13, r26	; 0x0d
    41c8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    41ca:	6b 85       	ldd	r22, Y+11	; 0x0b
    41cc:	7c 85       	ldd	r23, Y+12	; 0x0c
    41ce:	8d 85       	ldd	r24, Y+13	; 0x0d
    41d0:	9e 85       	ldd	r25, Y+14	; 0x0e
    41d2:	20 e0       	ldi	r18, 0x00	; 0
    41d4:	30 e0       	ldi	r19, 0x00	; 0
    41d6:	4a e7       	ldi	r20, 0x7A	; 122
    41d8:	53 e4       	ldi	r21, 0x43	; 67
    41da:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    41de:	dc 01       	movw	r26, r24
    41e0:	cb 01       	movw	r24, r22
    41e2:	8f 83       	std	Y+7, r24	; 0x07
    41e4:	98 87       	std	Y+8, r25	; 0x08
    41e6:	a9 87       	std	Y+9, r26	; 0x09
    41e8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    41ea:	6f 81       	ldd	r22, Y+7	; 0x07
    41ec:	78 85       	ldd	r23, Y+8	; 0x08
    41ee:	89 85       	ldd	r24, Y+9	; 0x09
    41f0:	9a 85       	ldd	r25, Y+10	; 0x0a
    41f2:	20 e0       	ldi	r18, 0x00	; 0
    41f4:	30 e0       	ldi	r19, 0x00	; 0
    41f6:	40 e8       	ldi	r20, 0x80	; 128
    41f8:	5f e3       	ldi	r21, 0x3F	; 63
    41fa:	0e 94 f9 16 	call	0x2df2	; 0x2df2 <__ltsf2>
    41fe:	88 23       	and	r24, r24
    4200:	2c f4       	brge	.+10     	; 0x420c <LCD_enuInit+0x382>
		__ticks = 1;
    4202:	81 e0       	ldi	r24, 0x01	; 1
    4204:	90 e0       	ldi	r25, 0x00	; 0
    4206:	9e 83       	std	Y+6, r25	; 0x06
    4208:	8d 83       	std	Y+5, r24	; 0x05
    420a:	3f c0       	rjmp	.+126    	; 0x428a <LCD_enuInit+0x400>
	else if (__tmp > 65535)
    420c:	6f 81       	ldd	r22, Y+7	; 0x07
    420e:	78 85       	ldd	r23, Y+8	; 0x08
    4210:	89 85       	ldd	r24, Y+9	; 0x09
    4212:	9a 85       	ldd	r25, Y+10	; 0x0a
    4214:	20 e0       	ldi	r18, 0x00	; 0
    4216:	3f ef       	ldi	r19, 0xFF	; 255
    4218:	4f e7       	ldi	r20, 0x7F	; 127
    421a:	57 e4       	ldi	r21, 0x47	; 71
    421c:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__gtsf2>
    4220:	18 16       	cp	r1, r24
    4222:	4c f5       	brge	.+82     	; 0x4276 <LCD_enuInit+0x3ec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4224:	6b 85       	ldd	r22, Y+11	; 0x0b
    4226:	7c 85       	ldd	r23, Y+12	; 0x0c
    4228:	8d 85       	ldd	r24, Y+13	; 0x0d
    422a:	9e 85       	ldd	r25, Y+14	; 0x0e
    422c:	20 e0       	ldi	r18, 0x00	; 0
    422e:	30 e0       	ldi	r19, 0x00	; 0
    4230:	40 e2       	ldi	r20, 0x20	; 32
    4232:	51 e4       	ldi	r21, 0x41	; 65
    4234:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    4238:	dc 01       	movw	r26, r24
    423a:	cb 01       	movw	r24, r22
    423c:	bc 01       	movw	r22, r24
    423e:	cd 01       	movw	r24, r26
    4240:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4244:	dc 01       	movw	r26, r24
    4246:	cb 01       	movw	r24, r22
    4248:	9e 83       	std	Y+6, r25	; 0x06
    424a:	8d 83       	std	Y+5, r24	; 0x05
    424c:	0f c0       	rjmp	.+30     	; 0x426c <LCD_enuInit+0x3e2>
    424e:	89 e1       	ldi	r24, 0x19	; 25
    4250:	90 e0       	ldi	r25, 0x00	; 0
    4252:	9c 83       	std	Y+4, r25	; 0x04
    4254:	8b 83       	std	Y+3, r24	; 0x03
    4256:	8b 81       	ldd	r24, Y+3	; 0x03
    4258:	9c 81       	ldd	r25, Y+4	; 0x04
    425a:	01 97       	sbiw	r24, 0x01	; 1
    425c:	f1 f7       	brne	.-4      	; 0x425a <LCD_enuInit+0x3d0>
    425e:	9c 83       	std	Y+4, r25	; 0x04
    4260:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4262:	8d 81       	ldd	r24, Y+5	; 0x05
    4264:	9e 81       	ldd	r25, Y+6	; 0x06
    4266:	01 97       	sbiw	r24, 0x01	; 1
    4268:	9e 83       	std	Y+6, r25	; 0x06
    426a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    426c:	8d 81       	ldd	r24, Y+5	; 0x05
    426e:	9e 81       	ldd	r25, Y+6	; 0x06
    4270:	00 97       	sbiw	r24, 0x00	; 0
    4272:	69 f7       	brne	.-38     	; 0x424e <LCD_enuInit+0x3c4>
    4274:	14 c0       	rjmp	.+40     	; 0x429e <LCD_enuInit+0x414>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4276:	6f 81       	ldd	r22, Y+7	; 0x07
    4278:	78 85       	ldd	r23, Y+8	; 0x08
    427a:	89 85       	ldd	r24, Y+9	; 0x09
    427c:	9a 85       	ldd	r25, Y+10	; 0x0a
    427e:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4282:	dc 01       	movw	r26, r24
    4284:	cb 01       	movw	r24, r22
    4286:	9e 83       	std	Y+6, r25	; 0x06
    4288:	8d 83       	std	Y+5, r24	; 0x05
    428a:	8d 81       	ldd	r24, Y+5	; 0x05
    428c:	9e 81       	ldd	r25, Y+6	; 0x06
    428e:	9a 83       	std	Y+2, r25	; 0x02
    4290:	89 83       	std	Y+1, r24	; 0x01
    4292:	89 81       	ldd	r24, Y+1	; 0x01
    4294:	9a 81       	ldd	r25, Y+2	; 0x02
    4296:	01 97       	sbiw	r24, 0x01	; 1
    4298:	f1 f7       	brne	.-4      	; 0x4296 <LCD_enuInit+0x40c>
    429a:	9a 83       	std	Y+2, r25	; 0x02
    429c:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	Local_enuErrorStates = LCD_enuToSendCommand(0x06);
    429e:	86 e0       	ldi	r24, 0x06	; 6
    42a0:	0e 94 13 25 	call	0x4a26	; 0x4a26 <LCD_enuToSendCommand>
    42a4:	89 af       	std	Y+57, r24	; 0x39

	return Local_enuErrorStates;
    42a6:	89 ad       	ldd	r24, Y+57	; 0x39
}
    42a8:	e9 96       	adiw	r28, 0x39	; 57
    42aa:	0f b6       	in	r0, 0x3f	; 63
    42ac:	f8 94       	cli
    42ae:	de bf       	out	0x3e, r29	; 62
    42b0:	0f be       	out	0x3f, r0	; 63
    42b2:	cd bf       	out	0x3d, r28	; 61
    42b4:	cf 91       	pop	r28
    42b6:	df 91       	pop	r29
    42b8:	08 95       	ret

000042ba <LCD_enuSendCommand>:

ES_t LCD_enuSendCommand(uint_8 Copy_uint8Command){
    42ba:	df 93       	push	r29
    42bc:	cf 93       	push	r28
    42be:	00 d0       	rcall	.+0      	; 0x42c0 <LCD_enuSendCommand+0x6>
    42c0:	cd b7       	in	r28, 0x3d	; 61
    42c2:	de b7       	in	r29, 0x3e	; 62
    42c4:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorStates = ES_NOK;
    42c6:	81 e0       	ldi	r24, 0x01	; 1
    42c8:	89 83       	std	Y+1, r24	; 0x01

	Local_enuErrorStates = LCD_enuToSendCommand(Copy_uint8Command);
    42ca:	8a 81       	ldd	r24, Y+2	; 0x02
    42cc:	0e 94 13 25 	call	0x4a26	; 0x4a26 <LCD_enuToSendCommand>
    42d0:	89 83       	std	Y+1, r24	; 0x01

	return Local_enuErrorStates = ES_OK;
    42d2:	19 82       	std	Y+1, r1	; 0x01
    42d4:	89 81       	ldd	r24, Y+1	; 0x01
}
    42d6:	0f 90       	pop	r0
    42d8:	0f 90       	pop	r0
    42da:	cf 91       	pop	r28
    42dc:	df 91       	pop	r29
    42de:	08 95       	ret

000042e0 <LCD_enuDisplayChar>:

ES_t LCD_enuDisplayChar(uint_8 Copy_uint8Data){
    42e0:	df 93       	push	r29
    42e2:	cf 93       	push	r28
    42e4:	00 d0       	rcall	.+0      	; 0x42e6 <LCD_enuDisplayChar+0x6>
    42e6:	cd b7       	in	r28, 0x3d	; 61
    42e8:	de b7       	in	r29, 0x3e	; 62
    42ea:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorStates = ES_NOK;
    42ec:	81 e0       	ldi	r24, 0x01	; 1
    42ee:	89 83       	std	Y+1, r24	; 0x01

	Local_enuErrorStates = LCD_enuSendData(Copy_uint8Data);
    42f0:	8a 81       	ldd	r24, Y+2	; 0x02
    42f2:	0e 94 b1 22 	call	0x4562	; 0x4562 <LCD_enuSendData>
    42f6:	89 83       	std	Y+1, r24	; 0x01

	return Local_enuErrorStates;
    42f8:	89 81       	ldd	r24, Y+1	; 0x01
}
    42fa:	0f 90       	pop	r0
    42fc:	0f 90       	pop	r0
    42fe:	cf 91       	pop	r28
    4300:	df 91       	pop	r29
    4302:	08 95       	ret

00004304 <LCD_enuDisplayString>:

ES_t LCD_enuDisplayString(uint_8* Copy_uint8Data){
    4304:	df 93       	push	r29
    4306:	cf 93       	push	r28
    4308:	00 d0       	rcall	.+0      	; 0x430a <LCD_enuDisplayString+0x6>
    430a:	00 d0       	rcall	.+0      	; 0x430c <LCD_enuDisplayString+0x8>
    430c:	cd b7       	in	r28, 0x3d	; 61
    430e:	de b7       	in	r29, 0x3e	; 62
    4310:	9c 83       	std	Y+4, r25	; 0x04
    4312:	8b 83       	std	Y+3, r24	; 0x03
	ES_t Local_enuErrorStates = ES_NOK;
    4314:	81 e0       	ldi	r24, 0x01	; 1
    4316:	8a 83       	std	Y+2, r24	; 0x02
	uint_8 Local_uint8Iterator = 0;
    4318:	19 82       	std	Y+1, r1	; 0x01
	if(Copy_uint8Data != NULL){
    431a:	8b 81       	ldd	r24, Y+3	; 0x03
    431c:	9c 81       	ldd	r25, Y+4	; 0x04
    431e:	00 97       	sbiw	r24, 0x00	; 0
    4320:	e1 f0       	breq	.+56     	; 0x435a <LCD_enuDisplayString+0x56>
    4322:	0f c0       	rjmp	.+30     	; 0x4342 <LCD_enuDisplayString+0x3e>
		while(Copy_uint8Data[Local_uint8Iterator] != '\0'){
			Local_enuErrorStates = LCD_enuSendData(Copy_uint8Data[Local_uint8Iterator]);
    4324:	89 81       	ldd	r24, Y+1	; 0x01
    4326:	28 2f       	mov	r18, r24
    4328:	30 e0       	ldi	r19, 0x00	; 0
    432a:	8b 81       	ldd	r24, Y+3	; 0x03
    432c:	9c 81       	ldd	r25, Y+4	; 0x04
    432e:	fc 01       	movw	r30, r24
    4330:	e2 0f       	add	r30, r18
    4332:	f3 1f       	adc	r31, r19
    4334:	80 81       	ld	r24, Z
    4336:	0e 94 b1 22 	call	0x4562	; 0x4562 <LCD_enuSendData>
    433a:	8a 83       	std	Y+2, r24	; 0x02
			Local_uint8Iterator++;
    433c:	89 81       	ldd	r24, Y+1	; 0x01
    433e:	8f 5f       	subi	r24, 0xFF	; 255
    4340:	89 83       	std	Y+1, r24	; 0x01

ES_t LCD_enuDisplayString(uint_8* Copy_uint8Data){
	ES_t Local_enuErrorStates = ES_NOK;
	uint_8 Local_uint8Iterator = 0;
	if(Copy_uint8Data != NULL){
		while(Copy_uint8Data[Local_uint8Iterator] != '\0'){
    4342:	89 81       	ldd	r24, Y+1	; 0x01
    4344:	28 2f       	mov	r18, r24
    4346:	30 e0       	ldi	r19, 0x00	; 0
    4348:	8b 81       	ldd	r24, Y+3	; 0x03
    434a:	9c 81       	ldd	r25, Y+4	; 0x04
    434c:	fc 01       	movw	r30, r24
    434e:	e2 0f       	add	r30, r18
    4350:	f3 1f       	adc	r31, r19
    4352:	80 81       	ld	r24, Z
    4354:	88 23       	and	r24, r24
    4356:	31 f7       	brne	.-52     	; 0x4324 <LCD_enuDisplayString+0x20>
    4358:	02 c0       	rjmp	.+4      	; 0x435e <LCD_enuDisplayString+0x5a>
			Local_enuErrorStates = LCD_enuSendData(Copy_uint8Data[Local_uint8Iterator]);
			Local_uint8Iterator++;
		}
	}
	else{
		Local_enuErrorStates = ES_NULL_POINTER;
    435a:	82 e0       	ldi	r24, 0x02	; 2
    435c:	8a 83       	std	Y+2, r24	; 0x02
	}
	return Local_enuErrorStates;
    435e:	8a 81       	ldd	r24, Y+2	; 0x02
}
    4360:	0f 90       	pop	r0
    4362:	0f 90       	pop	r0
    4364:	0f 90       	pop	r0
    4366:	0f 90       	pop	r0
    4368:	cf 91       	pop	r28
    436a:	df 91       	pop	r29
    436c:	08 95       	ret

0000436e <LCD_enuDisplayInteger>:

ES_t LCD_enuDisplayInteger(sint_64 Copy_uint32Data){
    436e:	af 92       	push	r10
    4370:	bf 92       	push	r11
    4372:	cf 92       	push	r12
    4374:	df 92       	push	r13
    4376:	ef 92       	push	r14
    4378:	ff 92       	push	r15
    437a:	0f 93       	push	r16
    437c:	1f 93       	push	r17
    437e:	df 93       	push	r29
    4380:	cf 93       	push	r28
    4382:	cd b7       	in	r28, 0x3d	; 61
    4384:	de b7       	in	r29, 0x3e	; 62
    4386:	29 97       	sbiw	r28, 0x09	; 9
    4388:	0f b6       	in	r0, 0x3f	; 63
    438a:	f8 94       	cli
    438c:	de bf       	out	0x3e, r29	; 62
    438e:	0f be       	out	0x3f, r0	; 63
    4390:	cd bf       	out	0x3d, r28	; 61
    4392:	2a 83       	std	Y+2, r18	; 0x02
    4394:	3b 83       	std	Y+3, r19	; 0x03
    4396:	4c 83       	std	Y+4, r20	; 0x04
    4398:	5d 83       	std	Y+5, r21	; 0x05
    439a:	6e 83       	std	Y+6, r22	; 0x06
    439c:	7f 83       	std	Y+7, r23	; 0x07
    439e:	88 87       	std	Y+8, r24	; 0x08
    43a0:	99 87       	std	Y+9, r25	; 0x09
	ES_t Local_enuErrorStates = ES_NOK;
    43a2:	81 e0       	ldi	r24, 0x01	; 1
    43a4:	89 83       	std	Y+1, r24	; 0x01
	Local_enuErrorStates = LCD_enuDisplayNumber(Copy_uint32Data);
    43a6:	aa 80       	ldd	r10, Y+2	; 0x02
    43a8:	bb 80       	ldd	r11, Y+3	; 0x03
    43aa:	cc 80       	ldd	r12, Y+4	; 0x04
    43ac:	dd 80       	ldd	r13, Y+5	; 0x05
    43ae:	ee 80       	ldd	r14, Y+6	; 0x06
    43b0:	ff 80       	ldd	r15, Y+7	; 0x07
    43b2:	08 85       	ldd	r16, Y+8	; 0x08
    43b4:	19 85       	ldd	r17, Y+9	; 0x09
    43b6:	2a 2d       	mov	r18, r10
    43b8:	3b 2d       	mov	r19, r11
    43ba:	4c 2d       	mov	r20, r12
    43bc:	5d 2d       	mov	r21, r13
    43be:	6e 2d       	mov	r22, r14
    43c0:	7f 2d       	mov	r23, r15
    43c2:	80 2f       	mov	r24, r16
    43c4:	91 2f       	mov	r25, r17
    43c6:	0e 94 5c 29 	call	0x52b8	; 0x52b8 <LCD_enuDisplayNumber>
    43ca:	89 83       	std	Y+1, r24	; 0x01
	return Local_enuErrorStates;
    43cc:	89 81       	ldd	r24, Y+1	; 0x01
}
    43ce:	29 96       	adiw	r28, 0x09	; 9
    43d0:	0f b6       	in	r0, 0x3f	; 63
    43d2:	f8 94       	cli
    43d4:	de bf       	out	0x3e, r29	; 62
    43d6:	0f be       	out	0x3f, r0	; 63
    43d8:	cd bf       	out	0x3d, r28	; 61
    43da:	cf 91       	pop	r28
    43dc:	df 91       	pop	r29
    43de:	1f 91       	pop	r17
    43e0:	0f 91       	pop	r16
    43e2:	ff 90       	pop	r15
    43e4:	ef 90       	pop	r14
    43e6:	df 90       	pop	r13
    43e8:	cf 90       	pop	r12
    43ea:	bf 90       	pop	r11
    43ec:	af 90       	pop	r10
    43ee:	08 95       	ret

000043f0 <LCD_enuDisplayFloat>:

ES_t LCD_enuDisplayFloat(f64 Copy_f64Data){
    43f0:	af 92       	push	r10
    43f2:	bf 92       	push	r11
    43f4:	cf 92       	push	r12
    43f6:	df 92       	push	r13
    43f8:	ef 92       	push	r14
    43fa:	ff 92       	push	r15
    43fc:	0f 93       	push	r16
    43fe:	1f 93       	push	r17
    4400:	df 93       	push	r29
    4402:	cf 93       	push	r28
    4404:	cd b7       	in	r28, 0x3d	; 61
    4406:	de b7       	in	r29, 0x3e	; 62
    4408:	62 97       	sbiw	r28, 0x12	; 18
    440a:	0f b6       	in	r0, 0x3f	; 63
    440c:	f8 94       	cli
    440e:	de bf       	out	0x3e, r29	; 62
    4410:	0f be       	out	0x3f, r0	; 63
    4412:	cd bf       	out	0x3d, r28	; 61
    4414:	6f 87       	std	Y+15, r22	; 0x0f
    4416:	78 8b       	std	Y+16, r23	; 0x10
    4418:	89 8b       	std	Y+17, r24	; 0x11
    441a:	9a 8b       	std	Y+18, r25	; 0x12
	ES_t Local_enuErrorStates = ES_NOK;
    441c:	81 e0       	ldi	r24, 0x01	; 1
    441e:	8e 87       	std	Y+14, r24	; 0x0e
	uint_64 Local_uint64RealNum;
	f64	Local_f64Fraction;
	if(Copy_f64Data < 0){
    4420:	6f 85       	ldd	r22, Y+15	; 0x0f
    4422:	78 89       	ldd	r23, Y+16	; 0x10
    4424:	89 89       	ldd	r24, Y+17	; 0x11
    4426:	9a 89       	ldd	r25, Y+18	; 0x12
    4428:	20 e0       	ldi	r18, 0x00	; 0
    442a:	30 e0       	ldi	r19, 0x00	; 0
    442c:	40 e0       	ldi	r20, 0x00	; 0
    442e:	50 e0       	ldi	r21, 0x00	; 0
    4430:	0e 94 f9 16 	call	0x2df2	; 0x2df2 <__ltsf2>
    4434:	88 23       	and	r24, r24
    4436:	6c f4       	brge	.+26     	; 0x4452 <LCD_enuDisplayFloat+0x62>
		Local_enuErrorStates = LCD_enuSendData('-');
    4438:	8d e2       	ldi	r24, 0x2D	; 45
    443a:	0e 94 b1 22 	call	0x4562	; 0x4562 <LCD_enuSendData>
    443e:	8e 87       	std	Y+14, r24	; 0x0e
		Copy_f64Data *= -1;
    4440:	8f 85       	ldd	r24, Y+15	; 0x0f
    4442:	98 89       	ldd	r25, Y+16	; 0x10
    4444:	a9 89       	ldd	r26, Y+17	; 0x11
    4446:	ba 89       	ldd	r27, Y+18	; 0x12
    4448:	b0 58       	subi	r27, 0x80	; 128
    444a:	8f 87       	std	Y+15, r24	; 0x0f
    444c:	98 8b       	std	Y+16, r25	; 0x10
    444e:	a9 8b       	std	Y+17, r26	; 0x11
    4450:	ba 8b       	std	Y+18, r27	; 0x12
	}

	Local_uint64RealNum = (uint_64) Copy_f64Data;
    4452:	6f 85       	ldd	r22, Y+15	; 0x0f
    4454:	78 89       	ldd	r23, Y+16	; 0x10
    4456:	89 89       	ldd	r24, Y+17	; 0x11
    4458:	9a 89       	ldd	r25, Y+18	; 0x12
    445a:	0e 94 60 01 	call	0x2c0	; 0x2c0 <__fixunssfdi>
    445e:	a2 2e       	mov	r10, r18
    4460:	b3 2e       	mov	r11, r19
    4462:	c4 2e       	mov	r12, r20
    4464:	d5 2e       	mov	r13, r21
    4466:	e6 2e       	mov	r14, r22
    4468:	f7 2e       	mov	r15, r23
    446a:	08 2f       	mov	r16, r24
    446c:	19 2f       	mov	r17, r25
    446e:	ae 82       	std	Y+6, r10	; 0x06
    4470:	bf 82       	std	Y+7, r11	; 0x07
    4472:	c8 86       	std	Y+8, r12	; 0x08
    4474:	d9 86       	std	Y+9, r13	; 0x09
    4476:	ea 86       	std	Y+10, r14	; 0x0a
    4478:	fb 86       	std	Y+11, r15	; 0x0b
    447a:	0c 87       	std	Y+12, r16	; 0x0c
    447c:	1d 87       	std	Y+13, r17	; 0x0d
	Local_f64Fraction = Copy_f64Data - Local_uint64RealNum;
    447e:	2e 81       	ldd	r18, Y+6	; 0x06
    4480:	3f 81       	ldd	r19, Y+7	; 0x07
    4482:	48 85       	ldd	r20, Y+8	; 0x08
    4484:	59 85       	ldd	r21, Y+9	; 0x09
    4486:	6a 85       	ldd	r22, Y+10	; 0x0a
    4488:	7b 85       	ldd	r23, Y+11	; 0x0b
    448a:	8c 85       	ldd	r24, Y+12	; 0x0c
    448c:	9d 85       	ldd	r25, Y+13	; 0x0d
    448e:	0e 94 08 02 	call	0x410	; 0x410 <__floatundisf>
    4492:	9b 01       	movw	r18, r22
    4494:	ac 01       	movw	r20, r24
    4496:	6f 85       	ldd	r22, Y+15	; 0x0f
    4498:	78 89       	ldd	r23, Y+16	; 0x10
    449a:	89 89       	ldd	r24, Y+17	; 0x11
    449c:	9a 89       	ldd	r25, Y+18	; 0x12
    449e:	0e 94 95 14 	call	0x292a	; 0x292a <__subsf3>
    44a2:	dc 01       	movw	r26, r24
    44a4:	cb 01       	movw	r24, r22
    44a6:	8a 83       	std	Y+2, r24	; 0x02
    44a8:	9b 83       	std	Y+3, r25	; 0x03
    44aa:	ac 83       	std	Y+4, r26	; 0x04
    44ac:	bd 83       	std	Y+5, r27	; 0x05

	Local_enuErrorStates = LCD_enuDisplayNumber(Local_uint64RealNum);
    44ae:	ae 80       	ldd	r10, Y+6	; 0x06
    44b0:	bf 80       	ldd	r11, Y+7	; 0x07
    44b2:	c8 84       	ldd	r12, Y+8	; 0x08
    44b4:	d9 84       	ldd	r13, Y+9	; 0x09
    44b6:	ea 84       	ldd	r14, Y+10	; 0x0a
    44b8:	fb 84       	ldd	r15, Y+11	; 0x0b
    44ba:	0c 85       	ldd	r16, Y+12	; 0x0c
    44bc:	1d 85       	ldd	r17, Y+13	; 0x0d
    44be:	2a 2d       	mov	r18, r10
    44c0:	3b 2d       	mov	r19, r11
    44c2:	4c 2d       	mov	r20, r12
    44c4:	5d 2d       	mov	r21, r13
    44c6:	6e 2d       	mov	r22, r14
    44c8:	7f 2d       	mov	r23, r15
    44ca:	80 2f       	mov	r24, r16
    44cc:	91 2f       	mov	r25, r17
    44ce:	0e 94 5c 29 	call	0x52b8	; 0x52b8 <LCD_enuDisplayNumber>
    44d2:	8e 87       	std	Y+14, r24	; 0x0e
	Local_enuErrorStates = LCD_enuSendData('.');
    44d4:	8e e2       	ldi	r24, 0x2E	; 46
    44d6:	0e 94 b1 22 	call	0x4562	; 0x4562 <LCD_enuSendData>
    44da:	8e 87       	std	Y+14, r24	; 0x0e

	uint_8 Local_uint8Iterator;
	for(Local_uint8Iterator = 0; Local_uint8Iterator < FRACTION_MAX_RANGE; Local_uint8Iterator++)
    44dc:	19 82       	std	Y+1, r1	; 0x01
    44de:	13 c0       	rjmp	.+38     	; 0x4506 <LCD_enuDisplayFloat+0x116>
		Local_f64Fraction *= 10;
    44e0:	6a 81       	ldd	r22, Y+2	; 0x02
    44e2:	7b 81       	ldd	r23, Y+3	; 0x03
    44e4:	8c 81       	ldd	r24, Y+4	; 0x04
    44e6:	9d 81       	ldd	r25, Y+5	; 0x05
    44e8:	20 e0       	ldi	r18, 0x00	; 0
    44ea:	30 e0       	ldi	r19, 0x00	; 0
    44ec:	40 e2       	ldi	r20, 0x20	; 32
    44ee:	51 e4       	ldi	r21, 0x41	; 65
    44f0:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    44f4:	dc 01       	movw	r26, r24
    44f6:	cb 01       	movw	r24, r22
    44f8:	8a 83       	std	Y+2, r24	; 0x02
    44fa:	9b 83       	std	Y+3, r25	; 0x03
    44fc:	ac 83       	std	Y+4, r26	; 0x04
    44fe:	bd 83       	std	Y+5, r27	; 0x05

	Local_enuErrorStates = LCD_enuDisplayNumber(Local_uint64RealNum);
	Local_enuErrorStates = LCD_enuSendData('.');

	uint_8 Local_uint8Iterator;
	for(Local_uint8Iterator = 0; Local_uint8Iterator < FRACTION_MAX_RANGE; Local_uint8Iterator++)
    4500:	89 81       	ldd	r24, Y+1	; 0x01
    4502:	8f 5f       	subi	r24, 0xFF	; 255
    4504:	89 83       	std	Y+1, r24	; 0x01
    4506:	89 81       	ldd	r24, Y+1	; 0x01
    4508:	84 30       	cpi	r24, 0x04	; 4
    450a:	50 f3       	brcs	.-44     	; 0x44e0 <LCD_enuDisplayFloat+0xf0>
		Local_f64Fraction *= 10;

	Local_enuErrorStates = LCD_enuDisplayNumber(Local_f64Fraction);
    450c:	6a 81       	ldd	r22, Y+2	; 0x02
    450e:	7b 81       	ldd	r23, Y+3	; 0x03
    4510:	8c 81       	ldd	r24, Y+4	; 0x04
    4512:	9d 81       	ldd	r25, Y+5	; 0x05
    4514:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <__fixsfdi>
    4518:	a2 2e       	mov	r10, r18
    451a:	b3 2e       	mov	r11, r19
    451c:	c4 2e       	mov	r12, r20
    451e:	d5 2e       	mov	r13, r21
    4520:	e6 2e       	mov	r14, r22
    4522:	f7 2e       	mov	r15, r23
    4524:	08 2f       	mov	r16, r24
    4526:	19 2f       	mov	r17, r25
    4528:	2a 2d       	mov	r18, r10
    452a:	3b 2d       	mov	r19, r11
    452c:	4c 2d       	mov	r20, r12
    452e:	5d 2d       	mov	r21, r13
    4530:	6e 2d       	mov	r22, r14
    4532:	7f 2d       	mov	r23, r15
    4534:	80 2f       	mov	r24, r16
    4536:	91 2f       	mov	r25, r17
    4538:	0e 94 5c 29 	call	0x52b8	; 0x52b8 <LCD_enuDisplayNumber>
    453c:	8e 87       	std	Y+14, r24	; 0x0e
	return Local_enuErrorStates;
    453e:	8e 85       	ldd	r24, Y+14	; 0x0e
}
    4540:	62 96       	adiw	r28, 0x12	; 18
    4542:	0f b6       	in	r0, 0x3f	; 63
    4544:	f8 94       	cli
    4546:	de bf       	out	0x3e, r29	; 62
    4548:	0f be       	out	0x3f, r0	; 63
    454a:	cd bf       	out	0x3d, r28	; 61
    454c:	cf 91       	pop	r28
    454e:	df 91       	pop	r29
    4550:	1f 91       	pop	r17
    4552:	0f 91       	pop	r16
    4554:	ff 90       	pop	r15
    4556:	ef 90       	pop	r14
    4558:	df 90       	pop	r13
    455a:	cf 90       	pop	r12
    455c:	bf 90       	pop	r11
    455e:	af 90       	pop	r10
    4560:	08 95       	ret

00004562 <LCD_enuSendData>:

static inline ES_t LCD_enuSendData(uint_8 Copy_uint8Data){
    4562:	df 93       	push	r29
    4564:	cf 93       	push	r28
    4566:	cd b7       	in	r28, 0x3d	; 61
    4568:	de b7       	in	r29, 0x3e	; 62
    456a:	ea 97       	sbiw	r28, 0x3a	; 58
    456c:	0f b6       	in	r0, 0x3f	; 63
    456e:	f8 94       	cli
    4570:	de bf       	out	0x3e, r29	; 62
    4572:	0f be       	out	0x3f, r0	; 63
    4574:	cd bf       	out	0x3d, r28	; 61
    4576:	8a af       	std	Y+58, r24	; 0x3a
	ES_t Local_enuErrorStates = ES_NOK;
    4578:	81 e0       	ldi	r24, 0x01	; 1
    457a:	89 af       	std	Y+57, r24	; 0x39
	Local_enuErrorStates = DIO_enuSetPinValue(RS_PORT, RS_PIN, HIGH);
    457c:	80 e0       	ldi	r24, 0x00	; 0
    457e:	60 e0       	ldi	r22, 0x00	; 0
    4580:	41 e0       	ldi	r20, 0x01	; 1
    4582:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    4586:	89 af       	std	Y+57, r24	; 0x39
	Local_enuErrorStates = DIO_enuSetPinValue(RW_PORT, RW_PIN, LOW);
    4588:	80 e0       	ldi	r24, 0x00	; 0
    458a:	61 e0       	ldi	r22, 0x01	; 1
    458c:	40 e0       	ldi	r20, 0x00	; 0
    458e:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    4592:	89 af       	std	Y+57, r24	; 0x39
	Local_enuErrorStates = DIO_enuSetPinValue(EN_PORT, EN_PIN, LOW);
    4594:	80 e0       	ldi	r24, 0x00	; 0
    4596:	62 e0       	ldi	r22, 0x02	; 2
    4598:	40 e0       	ldi	r20, 0x00	; 0
    459a:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    459e:	89 af       	std	Y+57, r24	; 0x39

	Local_enuErrorStates = DIO_enuSetPinValue(D7_PORT, D7_PIN, BIT_MASK & (Copy_uint8Data >> 7));
    45a0:	8a ad       	ldd	r24, Y+58	; 0x3a
    45a2:	98 2f       	mov	r25, r24
    45a4:	99 1f       	adc	r25, r25
    45a6:	99 27       	eor	r25, r25
    45a8:	99 1f       	adc	r25, r25
    45aa:	80 e0       	ldi	r24, 0x00	; 0
    45ac:	63 e0       	ldi	r22, 0x03	; 3
    45ae:	49 2f       	mov	r20, r25
    45b0:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    45b4:	89 af       	std	Y+57, r24	; 0x39
	Local_enuErrorStates = DIO_enuSetPinValue(D6_PORT, D6_PIN, BIT_MASK & (Copy_uint8Data >> 6));
    45b6:	8a ad       	ldd	r24, Y+58	; 0x3a
    45b8:	82 95       	swap	r24
    45ba:	86 95       	lsr	r24
    45bc:	86 95       	lsr	r24
    45be:	83 70       	andi	r24, 0x03	; 3
    45c0:	98 2f       	mov	r25, r24
    45c2:	91 70       	andi	r25, 0x01	; 1
    45c4:	80 e0       	ldi	r24, 0x00	; 0
    45c6:	64 e0       	ldi	r22, 0x04	; 4
    45c8:	49 2f       	mov	r20, r25
    45ca:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    45ce:	89 af       	std	Y+57, r24	; 0x39
	Local_enuErrorStates = DIO_enuSetPinValue(D5_PORT, D5_PIN, BIT_MASK & (Copy_uint8Data >> 5));
    45d0:	8a ad       	ldd	r24, Y+58	; 0x3a
    45d2:	82 95       	swap	r24
    45d4:	86 95       	lsr	r24
    45d6:	87 70       	andi	r24, 0x07	; 7
    45d8:	98 2f       	mov	r25, r24
    45da:	91 70       	andi	r25, 0x01	; 1
    45dc:	80 e0       	ldi	r24, 0x00	; 0
    45de:	65 e0       	ldi	r22, 0x05	; 5
    45e0:	49 2f       	mov	r20, r25
    45e2:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    45e6:	89 af       	std	Y+57, r24	; 0x39
	Local_enuErrorStates = DIO_enuSetPinValue(D4_PORT, D4_PIN, BIT_MASK & (Copy_uint8Data >> 4));
    45e8:	8a ad       	ldd	r24, Y+58	; 0x3a
    45ea:	82 95       	swap	r24
    45ec:	8f 70       	andi	r24, 0x0F	; 15
    45ee:	98 2f       	mov	r25, r24
    45f0:	91 70       	andi	r25, 0x01	; 1
    45f2:	80 e0       	ldi	r24, 0x00	; 0
    45f4:	66 e0       	ldi	r22, 0x06	; 6
    45f6:	49 2f       	mov	r20, r25
    45f8:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    45fc:	89 af       	std	Y+57, r24	; 0x39
	Local_enuErrorStates = DIO_enuSetPinValue(D3_PORT, D3_PIN, BIT_MASK & (Copy_uint8Data >> 3));
	Local_enuErrorStates = DIO_enuSetPinValue(D2_PORT, D2_PIN, BIT_MASK & (Copy_uint8Data >> 2));
	Local_enuErrorStates = DIO_enuSetPinValue(D1_PORT, D1_PIN, BIT_MASK & (Copy_uint8Data >> 1));
	Local_enuErrorStates = DIO_enuSetPinValue(D0_PORT, D0_PIN, BIT_MASK & (Copy_uint8Data >> 0));
#elif LCD_BIT_MODE == FOUR_BIT_MODE
	Local_enuErrorStates = DIO_enuSetPinValue(EN_PORT, EN_PIN, HIGH);
    45fe:	80 e0       	ldi	r24, 0x00	; 0
    4600:	62 e0       	ldi	r22, 0x02	; 2
    4602:	41 e0       	ldi	r20, 0x01	; 1
    4604:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    4608:	89 af       	std	Y+57, r24	; 0x39
    460a:	80 e0       	ldi	r24, 0x00	; 0
    460c:	90 e0       	ldi	r25, 0x00	; 0
    460e:	a0 e2       	ldi	r26, 0x20	; 32
    4610:	b1 e4       	ldi	r27, 0x41	; 65
    4612:	8d ab       	std	Y+53, r24	; 0x35
    4614:	9e ab       	std	Y+54, r25	; 0x36
    4616:	af ab       	std	Y+55, r26	; 0x37
    4618:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    461a:	6d a9       	ldd	r22, Y+53	; 0x35
    461c:	7e a9       	ldd	r23, Y+54	; 0x36
    461e:	8f a9       	ldd	r24, Y+55	; 0x37
    4620:	98 ad       	ldd	r25, Y+56	; 0x38
    4622:	20 e0       	ldi	r18, 0x00	; 0
    4624:	30 e0       	ldi	r19, 0x00	; 0
    4626:	4a e7       	ldi	r20, 0x7A	; 122
    4628:	53 e4       	ldi	r21, 0x43	; 67
    462a:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    462e:	dc 01       	movw	r26, r24
    4630:	cb 01       	movw	r24, r22
    4632:	89 ab       	std	Y+49, r24	; 0x31
    4634:	9a ab       	std	Y+50, r25	; 0x32
    4636:	ab ab       	std	Y+51, r26	; 0x33
    4638:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    463a:	69 a9       	ldd	r22, Y+49	; 0x31
    463c:	7a a9       	ldd	r23, Y+50	; 0x32
    463e:	8b a9       	ldd	r24, Y+51	; 0x33
    4640:	9c a9       	ldd	r25, Y+52	; 0x34
    4642:	20 e0       	ldi	r18, 0x00	; 0
    4644:	30 e0       	ldi	r19, 0x00	; 0
    4646:	40 e8       	ldi	r20, 0x80	; 128
    4648:	5f e3       	ldi	r21, 0x3F	; 63
    464a:	0e 94 f9 16 	call	0x2df2	; 0x2df2 <__ltsf2>
    464e:	88 23       	and	r24, r24
    4650:	2c f4       	brge	.+10     	; 0x465c <LCD_enuSendData+0xfa>
		__ticks = 1;
    4652:	81 e0       	ldi	r24, 0x01	; 1
    4654:	90 e0       	ldi	r25, 0x00	; 0
    4656:	98 ab       	std	Y+48, r25	; 0x30
    4658:	8f a7       	std	Y+47, r24	; 0x2f
    465a:	3f c0       	rjmp	.+126    	; 0x46da <LCD_enuSendData+0x178>
	else if (__tmp > 65535)
    465c:	69 a9       	ldd	r22, Y+49	; 0x31
    465e:	7a a9       	ldd	r23, Y+50	; 0x32
    4660:	8b a9       	ldd	r24, Y+51	; 0x33
    4662:	9c a9       	ldd	r25, Y+52	; 0x34
    4664:	20 e0       	ldi	r18, 0x00	; 0
    4666:	3f ef       	ldi	r19, 0xFF	; 255
    4668:	4f e7       	ldi	r20, 0x7F	; 127
    466a:	57 e4       	ldi	r21, 0x47	; 71
    466c:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__gtsf2>
    4670:	18 16       	cp	r1, r24
    4672:	4c f5       	brge	.+82     	; 0x46c6 <LCD_enuSendData+0x164>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4674:	6d a9       	ldd	r22, Y+53	; 0x35
    4676:	7e a9       	ldd	r23, Y+54	; 0x36
    4678:	8f a9       	ldd	r24, Y+55	; 0x37
    467a:	98 ad       	ldd	r25, Y+56	; 0x38
    467c:	20 e0       	ldi	r18, 0x00	; 0
    467e:	30 e0       	ldi	r19, 0x00	; 0
    4680:	40 e2       	ldi	r20, 0x20	; 32
    4682:	51 e4       	ldi	r21, 0x41	; 65
    4684:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    4688:	dc 01       	movw	r26, r24
    468a:	cb 01       	movw	r24, r22
    468c:	bc 01       	movw	r22, r24
    468e:	cd 01       	movw	r24, r26
    4690:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4694:	dc 01       	movw	r26, r24
    4696:	cb 01       	movw	r24, r22
    4698:	98 ab       	std	Y+48, r25	; 0x30
    469a:	8f a7       	std	Y+47, r24	; 0x2f
    469c:	0f c0       	rjmp	.+30     	; 0x46bc <LCD_enuSendData+0x15a>
    469e:	89 e1       	ldi	r24, 0x19	; 25
    46a0:	90 e0       	ldi	r25, 0x00	; 0
    46a2:	9e a7       	std	Y+46, r25	; 0x2e
    46a4:	8d a7       	std	Y+45, r24	; 0x2d
    46a6:	8d a5       	ldd	r24, Y+45	; 0x2d
    46a8:	9e a5       	ldd	r25, Y+46	; 0x2e
    46aa:	01 97       	sbiw	r24, 0x01	; 1
    46ac:	f1 f7       	brne	.-4      	; 0x46aa <LCD_enuSendData+0x148>
    46ae:	9e a7       	std	Y+46, r25	; 0x2e
    46b0:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    46b2:	8f a5       	ldd	r24, Y+47	; 0x2f
    46b4:	98 a9       	ldd	r25, Y+48	; 0x30
    46b6:	01 97       	sbiw	r24, 0x01	; 1
    46b8:	98 ab       	std	Y+48, r25	; 0x30
    46ba:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    46bc:	8f a5       	ldd	r24, Y+47	; 0x2f
    46be:	98 a9       	ldd	r25, Y+48	; 0x30
    46c0:	00 97       	sbiw	r24, 0x00	; 0
    46c2:	69 f7       	brne	.-38     	; 0x469e <LCD_enuSendData+0x13c>
    46c4:	14 c0       	rjmp	.+40     	; 0x46ee <LCD_enuSendData+0x18c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    46c6:	69 a9       	ldd	r22, Y+49	; 0x31
    46c8:	7a a9       	ldd	r23, Y+50	; 0x32
    46ca:	8b a9       	ldd	r24, Y+51	; 0x33
    46cc:	9c a9       	ldd	r25, Y+52	; 0x34
    46ce:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    46d2:	dc 01       	movw	r26, r24
    46d4:	cb 01       	movw	r24, r22
    46d6:	98 ab       	std	Y+48, r25	; 0x30
    46d8:	8f a7       	std	Y+47, r24	; 0x2f
    46da:	8f a5       	ldd	r24, Y+47	; 0x2f
    46dc:	98 a9       	ldd	r25, Y+48	; 0x30
    46de:	9c a7       	std	Y+44, r25	; 0x2c
    46e0:	8b a7       	std	Y+43, r24	; 0x2b
    46e2:	8b a5       	ldd	r24, Y+43	; 0x2b
    46e4:	9c a5       	ldd	r25, Y+44	; 0x2c
    46e6:	01 97       	sbiw	r24, 0x01	; 1
    46e8:	f1 f7       	brne	.-4      	; 0x46e6 <LCD_enuSendData+0x184>
    46ea:	9c a7       	std	Y+44, r25	; 0x2c
    46ec:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(10);
	Local_enuErrorStates = DIO_enuSetPinValue(EN_PORT, EN_PIN, LOW);
    46ee:	80 e0       	ldi	r24, 0x00	; 0
    46f0:	62 e0       	ldi	r22, 0x02	; 2
    46f2:	40 e0       	ldi	r20, 0x00	; 0
    46f4:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    46f8:	89 af       	std	Y+57, r24	; 0x39
    46fa:	80 e0       	ldi	r24, 0x00	; 0
    46fc:	90 e0       	ldi	r25, 0x00	; 0
    46fe:	a0 e2       	ldi	r26, 0x20	; 32
    4700:	b1 e4       	ldi	r27, 0x41	; 65
    4702:	8f a3       	std	Y+39, r24	; 0x27
    4704:	98 a7       	std	Y+40, r25	; 0x28
    4706:	a9 a7       	std	Y+41, r26	; 0x29
    4708:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    470a:	6f a1       	ldd	r22, Y+39	; 0x27
    470c:	78 a5       	ldd	r23, Y+40	; 0x28
    470e:	89 a5       	ldd	r24, Y+41	; 0x29
    4710:	9a a5       	ldd	r25, Y+42	; 0x2a
    4712:	20 e0       	ldi	r18, 0x00	; 0
    4714:	30 e0       	ldi	r19, 0x00	; 0
    4716:	4a e7       	ldi	r20, 0x7A	; 122
    4718:	53 e4       	ldi	r21, 0x43	; 67
    471a:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    471e:	dc 01       	movw	r26, r24
    4720:	cb 01       	movw	r24, r22
    4722:	8b a3       	std	Y+35, r24	; 0x23
    4724:	9c a3       	std	Y+36, r25	; 0x24
    4726:	ad a3       	std	Y+37, r26	; 0x25
    4728:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    472a:	6b a1       	ldd	r22, Y+35	; 0x23
    472c:	7c a1       	ldd	r23, Y+36	; 0x24
    472e:	8d a1       	ldd	r24, Y+37	; 0x25
    4730:	9e a1       	ldd	r25, Y+38	; 0x26
    4732:	20 e0       	ldi	r18, 0x00	; 0
    4734:	30 e0       	ldi	r19, 0x00	; 0
    4736:	40 e8       	ldi	r20, 0x80	; 128
    4738:	5f e3       	ldi	r21, 0x3F	; 63
    473a:	0e 94 f9 16 	call	0x2df2	; 0x2df2 <__ltsf2>
    473e:	88 23       	and	r24, r24
    4740:	2c f4       	brge	.+10     	; 0x474c <LCD_enuSendData+0x1ea>
		__ticks = 1;
    4742:	81 e0       	ldi	r24, 0x01	; 1
    4744:	90 e0       	ldi	r25, 0x00	; 0
    4746:	9a a3       	std	Y+34, r25	; 0x22
    4748:	89 a3       	std	Y+33, r24	; 0x21
    474a:	3f c0       	rjmp	.+126    	; 0x47ca <LCD_enuSendData+0x268>
	else if (__tmp > 65535)
    474c:	6b a1       	ldd	r22, Y+35	; 0x23
    474e:	7c a1       	ldd	r23, Y+36	; 0x24
    4750:	8d a1       	ldd	r24, Y+37	; 0x25
    4752:	9e a1       	ldd	r25, Y+38	; 0x26
    4754:	20 e0       	ldi	r18, 0x00	; 0
    4756:	3f ef       	ldi	r19, 0xFF	; 255
    4758:	4f e7       	ldi	r20, 0x7F	; 127
    475a:	57 e4       	ldi	r21, 0x47	; 71
    475c:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__gtsf2>
    4760:	18 16       	cp	r1, r24
    4762:	4c f5       	brge	.+82     	; 0x47b6 <LCD_enuSendData+0x254>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4764:	6f a1       	ldd	r22, Y+39	; 0x27
    4766:	78 a5       	ldd	r23, Y+40	; 0x28
    4768:	89 a5       	ldd	r24, Y+41	; 0x29
    476a:	9a a5       	ldd	r25, Y+42	; 0x2a
    476c:	20 e0       	ldi	r18, 0x00	; 0
    476e:	30 e0       	ldi	r19, 0x00	; 0
    4770:	40 e2       	ldi	r20, 0x20	; 32
    4772:	51 e4       	ldi	r21, 0x41	; 65
    4774:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    4778:	dc 01       	movw	r26, r24
    477a:	cb 01       	movw	r24, r22
    477c:	bc 01       	movw	r22, r24
    477e:	cd 01       	movw	r24, r26
    4780:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4784:	dc 01       	movw	r26, r24
    4786:	cb 01       	movw	r24, r22
    4788:	9a a3       	std	Y+34, r25	; 0x22
    478a:	89 a3       	std	Y+33, r24	; 0x21
    478c:	0f c0       	rjmp	.+30     	; 0x47ac <LCD_enuSendData+0x24a>
    478e:	89 e1       	ldi	r24, 0x19	; 25
    4790:	90 e0       	ldi	r25, 0x00	; 0
    4792:	98 a3       	std	Y+32, r25	; 0x20
    4794:	8f 8f       	std	Y+31, r24	; 0x1f
    4796:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4798:	98 a1       	ldd	r25, Y+32	; 0x20
    479a:	01 97       	sbiw	r24, 0x01	; 1
    479c:	f1 f7       	brne	.-4      	; 0x479a <LCD_enuSendData+0x238>
    479e:	98 a3       	std	Y+32, r25	; 0x20
    47a0:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    47a2:	89 a1       	ldd	r24, Y+33	; 0x21
    47a4:	9a a1       	ldd	r25, Y+34	; 0x22
    47a6:	01 97       	sbiw	r24, 0x01	; 1
    47a8:	9a a3       	std	Y+34, r25	; 0x22
    47aa:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    47ac:	89 a1       	ldd	r24, Y+33	; 0x21
    47ae:	9a a1       	ldd	r25, Y+34	; 0x22
    47b0:	00 97       	sbiw	r24, 0x00	; 0
    47b2:	69 f7       	brne	.-38     	; 0x478e <LCD_enuSendData+0x22c>
    47b4:	14 c0       	rjmp	.+40     	; 0x47de <LCD_enuSendData+0x27c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    47b6:	6b a1       	ldd	r22, Y+35	; 0x23
    47b8:	7c a1       	ldd	r23, Y+36	; 0x24
    47ba:	8d a1       	ldd	r24, Y+37	; 0x25
    47bc:	9e a1       	ldd	r25, Y+38	; 0x26
    47be:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    47c2:	dc 01       	movw	r26, r24
    47c4:	cb 01       	movw	r24, r22
    47c6:	9a a3       	std	Y+34, r25	; 0x22
    47c8:	89 a3       	std	Y+33, r24	; 0x21
    47ca:	89 a1       	ldd	r24, Y+33	; 0x21
    47cc:	9a a1       	ldd	r25, Y+34	; 0x22
    47ce:	9e 8f       	std	Y+30, r25	; 0x1e
    47d0:	8d 8f       	std	Y+29, r24	; 0x1d
    47d2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    47d4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    47d6:	01 97       	sbiw	r24, 0x01	; 1
    47d8:	f1 f7       	brne	.-4      	; 0x47d6 <LCD_enuSendData+0x274>
    47da:	9e 8f       	std	Y+30, r25	; 0x1e
    47dc:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(10);
	Local_enuErrorStates = DIO_enuSetPinValue(D7_PORT, D7_PIN, BIT_MASK & (Copy_uint8Data >> 3));
    47de:	8a ad       	ldd	r24, Y+58	; 0x3a
    47e0:	86 95       	lsr	r24
    47e2:	86 95       	lsr	r24
    47e4:	86 95       	lsr	r24
    47e6:	98 2f       	mov	r25, r24
    47e8:	91 70       	andi	r25, 0x01	; 1
    47ea:	80 e0       	ldi	r24, 0x00	; 0
    47ec:	63 e0       	ldi	r22, 0x03	; 3
    47ee:	49 2f       	mov	r20, r25
    47f0:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    47f4:	89 af       	std	Y+57, r24	; 0x39
	Local_enuErrorStates = DIO_enuSetPinValue(D6_PORT, D6_PIN, BIT_MASK & (Copy_uint8Data >> 2));
    47f6:	8a ad       	ldd	r24, Y+58	; 0x3a
    47f8:	86 95       	lsr	r24
    47fa:	86 95       	lsr	r24
    47fc:	98 2f       	mov	r25, r24
    47fe:	91 70       	andi	r25, 0x01	; 1
    4800:	80 e0       	ldi	r24, 0x00	; 0
    4802:	64 e0       	ldi	r22, 0x04	; 4
    4804:	49 2f       	mov	r20, r25
    4806:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    480a:	89 af       	std	Y+57, r24	; 0x39
	Local_enuErrorStates = DIO_enuSetPinValue(D5_PORT, D5_PIN, BIT_MASK & (Copy_uint8Data >> 1));
    480c:	8a ad       	ldd	r24, Y+58	; 0x3a
    480e:	86 95       	lsr	r24
    4810:	98 2f       	mov	r25, r24
    4812:	91 70       	andi	r25, 0x01	; 1
    4814:	80 e0       	ldi	r24, 0x00	; 0
    4816:	65 e0       	ldi	r22, 0x05	; 5
    4818:	49 2f       	mov	r20, r25
    481a:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    481e:	89 af       	std	Y+57, r24	; 0x39
	Local_enuErrorStates = DIO_enuSetPinValue(D4_PORT, D4_PIN, BIT_MASK & (Copy_uint8Data >> 0));
    4820:	8a ad       	ldd	r24, Y+58	; 0x3a
    4822:	98 2f       	mov	r25, r24
    4824:	91 70       	andi	r25, 0x01	; 1
    4826:	80 e0       	ldi	r24, 0x00	; 0
    4828:	66 e0       	ldi	r22, 0x06	; 6
    482a:	49 2f       	mov	r20, r25
    482c:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    4830:	89 af       	std	Y+57, r24	; 0x39
#endif

	Local_enuErrorStates = DIO_enuSetPinValue(EN_PORT, EN_PIN, HIGH);
    4832:	80 e0       	ldi	r24, 0x00	; 0
    4834:	62 e0       	ldi	r22, 0x02	; 2
    4836:	41 e0       	ldi	r20, 0x01	; 1
    4838:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    483c:	89 af       	std	Y+57, r24	; 0x39
    483e:	80 e0       	ldi	r24, 0x00	; 0
    4840:	90 e0       	ldi	r25, 0x00	; 0
    4842:	a0 e2       	ldi	r26, 0x20	; 32
    4844:	b1 e4       	ldi	r27, 0x41	; 65
    4846:	89 8f       	std	Y+25, r24	; 0x19
    4848:	9a 8f       	std	Y+26, r25	; 0x1a
    484a:	ab 8f       	std	Y+27, r26	; 0x1b
    484c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    484e:	69 8d       	ldd	r22, Y+25	; 0x19
    4850:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4852:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4854:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4856:	20 e0       	ldi	r18, 0x00	; 0
    4858:	30 e0       	ldi	r19, 0x00	; 0
    485a:	4a e7       	ldi	r20, 0x7A	; 122
    485c:	53 e4       	ldi	r21, 0x43	; 67
    485e:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    4862:	dc 01       	movw	r26, r24
    4864:	cb 01       	movw	r24, r22
    4866:	8d 8b       	std	Y+21, r24	; 0x15
    4868:	9e 8b       	std	Y+22, r25	; 0x16
    486a:	af 8b       	std	Y+23, r26	; 0x17
    486c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    486e:	6d 89       	ldd	r22, Y+21	; 0x15
    4870:	7e 89       	ldd	r23, Y+22	; 0x16
    4872:	8f 89       	ldd	r24, Y+23	; 0x17
    4874:	98 8d       	ldd	r25, Y+24	; 0x18
    4876:	20 e0       	ldi	r18, 0x00	; 0
    4878:	30 e0       	ldi	r19, 0x00	; 0
    487a:	40 e8       	ldi	r20, 0x80	; 128
    487c:	5f e3       	ldi	r21, 0x3F	; 63
    487e:	0e 94 f9 16 	call	0x2df2	; 0x2df2 <__ltsf2>
    4882:	88 23       	and	r24, r24
    4884:	2c f4       	brge	.+10     	; 0x4890 <LCD_enuSendData+0x32e>
		__ticks = 1;
    4886:	81 e0       	ldi	r24, 0x01	; 1
    4888:	90 e0       	ldi	r25, 0x00	; 0
    488a:	9c 8b       	std	Y+20, r25	; 0x14
    488c:	8b 8b       	std	Y+19, r24	; 0x13
    488e:	3f c0       	rjmp	.+126    	; 0x490e <LCD_enuSendData+0x3ac>
	else if (__tmp > 65535)
    4890:	6d 89       	ldd	r22, Y+21	; 0x15
    4892:	7e 89       	ldd	r23, Y+22	; 0x16
    4894:	8f 89       	ldd	r24, Y+23	; 0x17
    4896:	98 8d       	ldd	r25, Y+24	; 0x18
    4898:	20 e0       	ldi	r18, 0x00	; 0
    489a:	3f ef       	ldi	r19, 0xFF	; 255
    489c:	4f e7       	ldi	r20, 0x7F	; 127
    489e:	57 e4       	ldi	r21, 0x47	; 71
    48a0:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__gtsf2>
    48a4:	18 16       	cp	r1, r24
    48a6:	4c f5       	brge	.+82     	; 0x48fa <LCD_enuSendData+0x398>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    48a8:	69 8d       	ldd	r22, Y+25	; 0x19
    48aa:	7a 8d       	ldd	r23, Y+26	; 0x1a
    48ac:	8b 8d       	ldd	r24, Y+27	; 0x1b
    48ae:	9c 8d       	ldd	r25, Y+28	; 0x1c
    48b0:	20 e0       	ldi	r18, 0x00	; 0
    48b2:	30 e0       	ldi	r19, 0x00	; 0
    48b4:	40 e2       	ldi	r20, 0x20	; 32
    48b6:	51 e4       	ldi	r21, 0x41	; 65
    48b8:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    48bc:	dc 01       	movw	r26, r24
    48be:	cb 01       	movw	r24, r22
    48c0:	bc 01       	movw	r22, r24
    48c2:	cd 01       	movw	r24, r26
    48c4:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    48c8:	dc 01       	movw	r26, r24
    48ca:	cb 01       	movw	r24, r22
    48cc:	9c 8b       	std	Y+20, r25	; 0x14
    48ce:	8b 8b       	std	Y+19, r24	; 0x13
    48d0:	0f c0       	rjmp	.+30     	; 0x48f0 <LCD_enuSendData+0x38e>
    48d2:	89 e1       	ldi	r24, 0x19	; 25
    48d4:	90 e0       	ldi	r25, 0x00	; 0
    48d6:	9a 8b       	std	Y+18, r25	; 0x12
    48d8:	89 8b       	std	Y+17, r24	; 0x11
    48da:	89 89       	ldd	r24, Y+17	; 0x11
    48dc:	9a 89       	ldd	r25, Y+18	; 0x12
    48de:	01 97       	sbiw	r24, 0x01	; 1
    48e0:	f1 f7       	brne	.-4      	; 0x48de <LCD_enuSendData+0x37c>
    48e2:	9a 8b       	std	Y+18, r25	; 0x12
    48e4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    48e6:	8b 89       	ldd	r24, Y+19	; 0x13
    48e8:	9c 89       	ldd	r25, Y+20	; 0x14
    48ea:	01 97       	sbiw	r24, 0x01	; 1
    48ec:	9c 8b       	std	Y+20, r25	; 0x14
    48ee:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    48f0:	8b 89       	ldd	r24, Y+19	; 0x13
    48f2:	9c 89       	ldd	r25, Y+20	; 0x14
    48f4:	00 97       	sbiw	r24, 0x00	; 0
    48f6:	69 f7       	brne	.-38     	; 0x48d2 <LCD_enuSendData+0x370>
    48f8:	14 c0       	rjmp	.+40     	; 0x4922 <LCD_enuSendData+0x3c0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    48fa:	6d 89       	ldd	r22, Y+21	; 0x15
    48fc:	7e 89       	ldd	r23, Y+22	; 0x16
    48fe:	8f 89       	ldd	r24, Y+23	; 0x17
    4900:	98 8d       	ldd	r25, Y+24	; 0x18
    4902:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4906:	dc 01       	movw	r26, r24
    4908:	cb 01       	movw	r24, r22
    490a:	9c 8b       	std	Y+20, r25	; 0x14
    490c:	8b 8b       	std	Y+19, r24	; 0x13
    490e:	8b 89       	ldd	r24, Y+19	; 0x13
    4910:	9c 89       	ldd	r25, Y+20	; 0x14
    4912:	98 8b       	std	Y+16, r25	; 0x10
    4914:	8f 87       	std	Y+15, r24	; 0x0f
    4916:	8f 85       	ldd	r24, Y+15	; 0x0f
    4918:	98 89       	ldd	r25, Y+16	; 0x10
    491a:	01 97       	sbiw	r24, 0x01	; 1
    491c:	f1 f7       	brne	.-4      	; 0x491a <LCD_enuSendData+0x3b8>
    491e:	98 8b       	std	Y+16, r25	; 0x10
    4920:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(10);
	Local_enuErrorStates = DIO_enuSetPinValue(EN_PORT, EN_PIN, LOW);
    4922:	80 e0       	ldi	r24, 0x00	; 0
    4924:	62 e0       	ldi	r22, 0x02	; 2
    4926:	40 e0       	ldi	r20, 0x00	; 0
    4928:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    492c:	89 af       	std	Y+57, r24	; 0x39
    492e:	80 e0       	ldi	r24, 0x00	; 0
    4930:	90 e0       	ldi	r25, 0x00	; 0
    4932:	a0 e2       	ldi	r26, 0x20	; 32
    4934:	b1 e4       	ldi	r27, 0x41	; 65
    4936:	8b 87       	std	Y+11, r24	; 0x0b
    4938:	9c 87       	std	Y+12, r25	; 0x0c
    493a:	ad 87       	std	Y+13, r26	; 0x0d
    493c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    493e:	6b 85       	ldd	r22, Y+11	; 0x0b
    4940:	7c 85       	ldd	r23, Y+12	; 0x0c
    4942:	8d 85       	ldd	r24, Y+13	; 0x0d
    4944:	9e 85       	ldd	r25, Y+14	; 0x0e
    4946:	20 e0       	ldi	r18, 0x00	; 0
    4948:	30 e0       	ldi	r19, 0x00	; 0
    494a:	4a e7       	ldi	r20, 0x7A	; 122
    494c:	53 e4       	ldi	r21, 0x43	; 67
    494e:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    4952:	dc 01       	movw	r26, r24
    4954:	cb 01       	movw	r24, r22
    4956:	8f 83       	std	Y+7, r24	; 0x07
    4958:	98 87       	std	Y+8, r25	; 0x08
    495a:	a9 87       	std	Y+9, r26	; 0x09
    495c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    495e:	6f 81       	ldd	r22, Y+7	; 0x07
    4960:	78 85       	ldd	r23, Y+8	; 0x08
    4962:	89 85       	ldd	r24, Y+9	; 0x09
    4964:	9a 85       	ldd	r25, Y+10	; 0x0a
    4966:	20 e0       	ldi	r18, 0x00	; 0
    4968:	30 e0       	ldi	r19, 0x00	; 0
    496a:	40 e8       	ldi	r20, 0x80	; 128
    496c:	5f e3       	ldi	r21, 0x3F	; 63
    496e:	0e 94 f9 16 	call	0x2df2	; 0x2df2 <__ltsf2>
    4972:	88 23       	and	r24, r24
    4974:	2c f4       	brge	.+10     	; 0x4980 <LCD_enuSendData+0x41e>
		__ticks = 1;
    4976:	81 e0       	ldi	r24, 0x01	; 1
    4978:	90 e0       	ldi	r25, 0x00	; 0
    497a:	9e 83       	std	Y+6, r25	; 0x06
    497c:	8d 83       	std	Y+5, r24	; 0x05
    497e:	3f c0       	rjmp	.+126    	; 0x49fe <LCD_enuSendData+0x49c>
	else if (__tmp > 65535)
    4980:	6f 81       	ldd	r22, Y+7	; 0x07
    4982:	78 85       	ldd	r23, Y+8	; 0x08
    4984:	89 85       	ldd	r24, Y+9	; 0x09
    4986:	9a 85       	ldd	r25, Y+10	; 0x0a
    4988:	20 e0       	ldi	r18, 0x00	; 0
    498a:	3f ef       	ldi	r19, 0xFF	; 255
    498c:	4f e7       	ldi	r20, 0x7F	; 127
    498e:	57 e4       	ldi	r21, 0x47	; 71
    4990:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__gtsf2>
    4994:	18 16       	cp	r1, r24
    4996:	4c f5       	brge	.+82     	; 0x49ea <LCD_enuSendData+0x488>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4998:	6b 85       	ldd	r22, Y+11	; 0x0b
    499a:	7c 85       	ldd	r23, Y+12	; 0x0c
    499c:	8d 85       	ldd	r24, Y+13	; 0x0d
    499e:	9e 85       	ldd	r25, Y+14	; 0x0e
    49a0:	20 e0       	ldi	r18, 0x00	; 0
    49a2:	30 e0       	ldi	r19, 0x00	; 0
    49a4:	40 e2       	ldi	r20, 0x20	; 32
    49a6:	51 e4       	ldi	r21, 0x41	; 65
    49a8:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    49ac:	dc 01       	movw	r26, r24
    49ae:	cb 01       	movw	r24, r22
    49b0:	bc 01       	movw	r22, r24
    49b2:	cd 01       	movw	r24, r26
    49b4:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    49b8:	dc 01       	movw	r26, r24
    49ba:	cb 01       	movw	r24, r22
    49bc:	9e 83       	std	Y+6, r25	; 0x06
    49be:	8d 83       	std	Y+5, r24	; 0x05
    49c0:	0f c0       	rjmp	.+30     	; 0x49e0 <LCD_enuSendData+0x47e>
    49c2:	89 e1       	ldi	r24, 0x19	; 25
    49c4:	90 e0       	ldi	r25, 0x00	; 0
    49c6:	9c 83       	std	Y+4, r25	; 0x04
    49c8:	8b 83       	std	Y+3, r24	; 0x03
    49ca:	8b 81       	ldd	r24, Y+3	; 0x03
    49cc:	9c 81       	ldd	r25, Y+4	; 0x04
    49ce:	01 97       	sbiw	r24, 0x01	; 1
    49d0:	f1 f7       	brne	.-4      	; 0x49ce <LCD_enuSendData+0x46c>
    49d2:	9c 83       	std	Y+4, r25	; 0x04
    49d4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    49d6:	8d 81       	ldd	r24, Y+5	; 0x05
    49d8:	9e 81       	ldd	r25, Y+6	; 0x06
    49da:	01 97       	sbiw	r24, 0x01	; 1
    49dc:	9e 83       	std	Y+6, r25	; 0x06
    49de:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    49e0:	8d 81       	ldd	r24, Y+5	; 0x05
    49e2:	9e 81       	ldd	r25, Y+6	; 0x06
    49e4:	00 97       	sbiw	r24, 0x00	; 0
    49e6:	69 f7       	brne	.-38     	; 0x49c2 <LCD_enuSendData+0x460>
    49e8:	14 c0       	rjmp	.+40     	; 0x4a12 <LCD_enuSendData+0x4b0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    49ea:	6f 81       	ldd	r22, Y+7	; 0x07
    49ec:	78 85       	ldd	r23, Y+8	; 0x08
    49ee:	89 85       	ldd	r24, Y+9	; 0x09
    49f0:	9a 85       	ldd	r25, Y+10	; 0x0a
    49f2:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    49f6:	dc 01       	movw	r26, r24
    49f8:	cb 01       	movw	r24, r22
    49fa:	9e 83       	std	Y+6, r25	; 0x06
    49fc:	8d 83       	std	Y+5, r24	; 0x05
    49fe:	8d 81       	ldd	r24, Y+5	; 0x05
    4a00:	9e 81       	ldd	r25, Y+6	; 0x06
    4a02:	9a 83       	std	Y+2, r25	; 0x02
    4a04:	89 83       	std	Y+1, r24	; 0x01
    4a06:	89 81       	ldd	r24, Y+1	; 0x01
    4a08:	9a 81       	ldd	r25, Y+2	; 0x02
    4a0a:	01 97       	sbiw	r24, 0x01	; 1
    4a0c:	f1 f7       	brne	.-4      	; 0x4a0a <LCD_enuSendData+0x4a8>
    4a0e:	9a 83       	std	Y+2, r25	; 0x02
    4a10:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
	return Local_enuErrorStates;
    4a12:	89 ad       	ldd	r24, Y+57	; 0x39
}
    4a14:	ea 96       	adiw	r28, 0x3a	; 58
    4a16:	0f b6       	in	r0, 0x3f	; 63
    4a18:	f8 94       	cli
    4a1a:	de bf       	out	0x3e, r29	; 62
    4a1c:	0f be       	out	0x3f, r0	; 63
    4a1e:	cd bf       	out	0x3d, r28	; 61
    4a20:	cf 91       	pop	r28
    4a22:	df 91       	pop	r29
    4a24:	08 95       	ret

00004a26 <LCD_enuToSendCommand>:

static inline ES_t LCD_enuToSendCommand(uint_8 Copy_uint8Command){
    4a26:	0f 93       	push	r16
    4a28:	1f 93       	push	r17
    4a2a:	df 93       	push	r29
    4a2c:	cf 93       	push	r28
    4a2e:	cd b7       	in	r28, 0x3d	; 61
    4a30:	de b7       	in	r29, 0x3e	; 62
    4a32:	c6 55       	subi	r28, 0x56	; 86
    4a34:	d0 40       	sbci	r29, 0x00	; 0
    4a36:	0f b6       	in	r0, 0x3f	; 63
    4a38:	f8 94       	cli
    4a3a:	de bf       	out	0x3e, r29	; 62
    4a3c:	0f be       	out	0x3f, r0	; 63
    4a3e:	cd bf       	out	0x3d, r28	; 61
    4a40:	fe 01       	movw	r30, r28
    4a42:	ea 5a       	subi	r30, 0xAA	; 170
    4a44:	ff 4f       	sbci	r31, 0xFF	; 255
    4a46:	80 83       	st	Z, r24
	ES_t Local_enuErrorStates;
	Local_enuErrorStates = DIO_enuSetPinValue(RS_PORT, RS_PIN, LOW);
    4a48:	80 e0       	ldi	r24, 0x00	; 0
    4a4a:	60 e0       	ldi	r22, 0x00	; 0
    4a4c:	40 e0       	ldi	r20, 0x00	; 0
    4a4e:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    4a52:	fe 01       	movw	r30, r28
    4a54:	eb 5a       	subi	r30, 0xAB	; 171
    4a56:	ff 4f       	sbci	r31, 0xFF	; 255
    4a58:	80 83       	st	Z, r24
	Local_enuErrorStates = DIO_enuSetPinValue(RW_PORT, RW_PIN, LOW);
    4a5a:	80 e0       	ldi	r24, 0x00	; 0
    4a5c:	61 e0       	ldi	r22, 0x01	; 1
    4a5e:	40 e0       	ldi	r20, 0x00	; 0
    4a60:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    4a64:	fe 01       	movw	r30, r28
    4a66:	eb 5a       	subi	r30, 0xAB	; 171
    4a68:	ff 4f       	sbci	r31, 0xFF	; 255
    4a6a:	80 83       	st	Z, r24
	Local_enuErrorStates = DIO_enuSetPinValue(EN_PORT, EN_PIN, LOW);
    4a6c:	80 e0       	ldi	r24, 0x00	; 0
    4a6e:	62 e0       	ldi	r22, 0x02	; 2
    4a70:	40 e0       	ldi	r20, 0x00	; 0
    4a72:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    4a76:	fe 01       	movw	r30, r28
    4a78:	eb 5a       	subi	r30, 0xAB	; 171
    4a7a:	ff 4f       	sbci	r31, 0xFF	; 255
    4a7c:	80 83       	st	Z, r24

	Local_enuErrorStates = DIO_enuSetPinValue(D7_PORT, D7_PIN, BIT_MASK & (Copy_uint8Command >> 7));
    4a7e:	fe 01       	movw	r30, r28
    4a80:	ea 5a       	subi	r30, 0xAA	; 170
    4a82:	ff 4f       	sbci	r31, 0xFF	; 255
    4a84:	80 81       	ld	r24, Z
    4a86:	98 2f       	mov	r25, r24
    4a88:	99 1f       	adc	r25, r25
    4a8a:	99 27       	eor	r25, r25
    4a8c:	99 1f       	adc	r25, r25
    4a8e:	80 e0       	ldi	r24, 0x00	; 0
    4a90:	63 e0       	ldi	r22, 0x03	; 3
    4a92:	49 2f       	mov	r20, r25
    4a94:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    4a98:	fe 01       	movw	r30, r28
    4a9a:	eb 5a       	subi	r30, 0xAB	; 171
    4a9c:	ff 4f       	sbci	r31, 0xFF	; 255
    4a9e:	80 83       	st	Z, r24
	Local_enuErrorStates = DIO_enuSetPinValue(D6_PORT, D6_PIN, BIT_MASK & (Copy_uint8Command >> 6));
    4aa0:	fe 01       	movw	r30, r28
    4aa2:	ea 5a       	subi	r30, 0xAA	; 170
    4aa4:	ff 4f       	sbci	r31, 0xFF	; 255
    4aa6:	80 81       	ld	r24, Z
    4aa8:	82 95       	swap	r24
    4aaa:	86 95       	lsr	r24
    4aac:	86 95       	lsr	r24
    4aae:	83 70       	andi	r24, 0x03	; 3
    4ab0:	98 2f       	mov	r25, r24
    4ab2:	91 70       	andi	r25, 0x01	; 1
    4ab4:	80 e0       	ldi	r24, 0x00	; 0
    4ab6:	64 e0       	ldi	r22, 0x04	; 4
    4ab8:	49 2f       	mov	r20, r25
    4aba:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    4abe:	fe 01       	movw	r30, r28
    4ac0:	eb 5a       	subi	r30, 0xAB	; 171
    4ac2:	ff 4f       	sbci	r31, 0xFF	; 255
    4ac4:	80 83       	st	Z, r24
	Local_enuErrorStates = DIO_enuSetPinValue(D5_PORT, D5_PIN, BIT_MASK & (Copy_uint8Command >> 5));
    4ac6:	fe 01       	movw	r30, r28
    4ac8:	ea 5a       	subi	r30, 0xAA	; 170
    4aca:	ff 4f       	sbci	r31, 0xFF	; 255
    4acc:	80 81       	ld	r24, Z
    4ace:	82 95       	swap	r24
    4ad0:	86 95       	lsr	r24
    4ad2:	87 70       	andi	r24, 0x07	; 7
    4ad4:	98 2f       	mov	r25, r24
    4ad6:	91 70       	andi	r25, 0x01	; 1
    4ad8:	80 e0       	ldi	r24, 0x00	; 0
    4ada:	65 e0       	ldi	r22, 0x05	; 5
    4adc:	49 2f       	mov	r20, r25
    4ade:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    4ae2:	fe 01       	movw	r30, r28
    4ae4:	eb 5a       	subi	r30, 0xAB	; 171
    4ae6:	ff 4f       	sbci	r31, 0xFF	; 255
    4ae8:	80 83       	st	Z, r24
	Local_enuErrorStates = DIO_enuSetPinValue(D4_PORT, D4_PIN, BIT_MASK & (Copy_uint8Command >> 4));
    4aea:	fe 01       	movw	r30, r28
    4aec:	ea 5a       	subi	r30, 0xAA	; 170
    4aee:	ff 4f       	sbci	r31, 0xFF	; 255
    4af0:	80 81       	ld	r24, Z
    4af2:	82 95       	swap	r24
    4af4:	8f 70       	andi	r24, 0x0F	; 15
    4af6:	98 2f       	mov	r25, r24
    4af8:	91 70       	andi	r25, 0x01	; 1
    4afa:	80 e0       	ldi	r24, 0x00	; 0
    4afc:	66 e0       	ldi	r22, 0x06	; 6
    4afe:	49 2f       	mov	r20, r25
    4b00:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    4b04:	fe 01       	movw	r30, r28
    4b06:	eb 5a       	subi	r30, 0xAB	; 171
    4b08:	ff 4f       	sbci	r31, 0xFF	; 255
    4b0a:	80 83       	st	Z, r24
	Local_enuErrorStates = DIO_enuSetPinValue(D3_PORT, D3_PIN, BIT_MASK & (Copy_uint8Command >> 3));
	Local_enuErrorStates = DIO_enuSetPinValue(D2_PORT, D2_PIN, BIT_MASK & (Copy_uint8Command >> 2));
	Local_enuErrorStates = DIO_enuSetPinValue(D1_PORT, D1_PIN, BIT_MASK & (Copy_uint8Command >> 1));
	Local_enuErrorStates = DIO_enuSetPinValue(D0_PORT, D0_PIN, BIT_MASK & (Copy_uint8Command >> 0));
#elif LCD_BIT_MODE == FOUR_BIT_MODE
	if(Copy_uint8Command == 0x28){
    4b0c:	fe 01       	movw	r30, r28
    4b0e:	ea 5a       	subi	r30, 0xAA	; 170
    4b10:	ff 4f       	sbci	r31, 0xFF	; 255
    4b12:	80 81       	ld	r24, Z
    4b14:	88 32       	cpi	r24, 0x28	; 40
    4b16:	09 f0       	breq	.+2      	; 0x4b1a <LCD_enuToSendCommand+0xf4>
    4b18:	91 c1       	rjmp	.+802    	; 0x4e3c <LCD_enuToSendCommand+0x416>
		Local_enuErrorStates = DIO_enuSetPinValue(EN_PORT, EN_PIN, HIGH);
    4b1a:	80 e0       	ldi	r24, 0x00	; 0
    4b1c:	62 e0       	ldi	r22, 0x02	; 2
    4b1e:	41 e0       	ldi	r20, 0x01	; 1
    4b20:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    4b24:	fe 01       	movw	r30, r28
    4b26:	eb 5a       	subi	r30, 0xAB	; 171
    4b28:	ff 4f       	sbci	r31, 0xFF	; 255
    4b2a:	80 83       	st	Z, r24
    4b2c:	fe 01       	movw	r30, r28
    4b2e:	ef 5a       	subi	r30, 0xAF	; 175
    4b30:	ff 4f       	sbci	r31, 0xFF	; 255
    4b32:	80 e0       	ldi	r24, 0x00	; 0
    4b34:	90 e0       	ldi	r25, 0x00	; 0
    4b36:	a0 e2       	ldi	r26, 0x20	; 32
    4b38:	b1 e4       	ldi	r27, 0x41	; 65
    4b3a:	80 83       	st	Z, r24
    4b3c:	91 83       	std	Z+1, r25	; 0x01
    4b3e:	a2 83       	std	Z+2, r26	; 0x02
    4b40:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4b42:	8e 01       	movw	r16, r28
    4b44:	03 5b       	subi	r16, 0xB3	; 179
    4b46:	1f 4f       	sbci	r17, 0xFF	; 255
    4b48:	fe 01       	movw	r30, r28
    4b4a:	ef 5a       	subi	r30, 0xAF	; 175
    4b4c:	ff 4f       	sbci	r31, 0xFF	; 255
    4b4e:	60 81       	ld	r22, Z
    4b50:	71 81       	ldd	r23, Z+1	; 0x01
    4b52:	82 81       	ldd	r24, Z+2	; 0x02
    4b54:	93 81       	ldd	r25, Z+3	; 0x03
    4b56:	20 e0       	ldi	r18, 0x00	; 0
    4b58:	30 e0       	ldi	r19, 0x00	; 0
    4b5a:	4a e7       	ldi	r20, 0x7A	; 122
    4b5c:	53 e4       	ldi	r21, 0x43	; 67
    4b5e:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    4b62:	dc 01       	movw	r26, r24
    4b64:	cb 01       	movw	r24, r22
    4b66:	f8 01       	movw	r30, r16
    4b68:	80 83       	st	Z, r24
    4b6a:	91 83       	std	Z+1, r25	; 0x01
    4b6c:	a2 83       	std	Z+2, r26	; 0x02
    4b6e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4b70:	fe 01       	movw	r30, r28
    4b72:	e3 5b       	subi	r30, 0xB3	; 179
    4b74:	ff 4f       	sbci	r31, 0xFF	; 255
    4b76:	60 81       	ld	r22, Z
    4b78:	71 81       	ldd	r23, Z+1	; 0x01
    4b7a:	82 81       	ldd	r24, Z+2	; 0x02
    4b7c:	93 81       	ldd	r25, Z+3	; 0x03
    4b7e:	20 e0       	ldi	r18, 0x00	; 0
    4b80:	30 e0       	ldi	r19, 0x00	; 0
    4b82:	40 e8       	ldi	r20, 0x80	; 128
    4b84:	5f e3       	ldi	r21, 0x3F	; 63
    4b86:	0e 94 f9 16 	call	0x2df2	; 0x2df2 <__ltsf2>
    4b8a:	88 23       	and	r24, r24
    4b8c:	44 f4       	brge	.+16     	; 0x4b9e <LCD_enuToSendCommand+0x178>
		__ticks = 1;
    4b8e:	fe 01       	movw	r30, r28
    4b90:	e5 5b       	subi	r30, 0xB5	; 181
    4b92:	ff 4f       	sbci	r31, 0xFF	; 255
    4b94:	81 e0       	ldi	r24, 0x01	; 1
    4b96:	90 e0       	ldi	r25, 0x00	; 0
    4b98:	91 83       	std	Z+1, r25	; 0x01
    4b9a:	80 83       	st	Z, r24
    4b9c:	64 c0       	rjmp	.+200    	; 0x4c66 <LCD_enuToSendCommand+0x240>
	else if (__tmp > 65535)
    4b9e:	fe 01       	movw	r30, r28
    4ba0:	e3 5b       	subi	r30, 0xB3	; 179
    4ba2:	ff 4f       	sbci	r31, 0xFF	; 255
    4ba4:	60 81       	ld	r22, Z
    4ba6:	71 81       	ldd	r23, Z+1	; 0x01
    4ba8:	82 81       	ldd	r24, Z+2	; 0x02
    4baa:	93 81       	ldd	r25, Z+3	; 0x03
    4bac:	20 e0       	ldi	r18, 0x00	; 0
    4bae:	3f ef       	ldi	r19, 0xFF	; 255
    4bb0:	4f e7       	ldi	r20, 0x7F	; 127
    4bb2:	57 e4       	ldi	r21, 0x47	; 71
    4bb4:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__gtsf2>
    4bb8:	18 16       	cp	r1, r24
    4bba:	0c f0       	brlt	.+2      	; 0x4bbe <LCD_enuToSendCommand+0x198>
    4bbc:	43 c0       	rjmp	.+134    	; 0x4c44 <LCD_enuToSendCommand+0x21e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4bbe:	fe 01       	movw	r30, r28
    4bc0:	ef 5a       	subi	r30, 0xAF	; 175
    4bc2:	ff 4f       	sbci	r31, 0xFF	; 255
    4bc4:	60 81       	ld	r22, Z
    4bc6:	71 81       	ldd	r23, Z+1	; 0x01
    4bc8:	82 81       	ldd	r24, Z+2	; 0x02
    4bca:	93 81       	ldd	r25, Z+3	; 0x03
    4bcc:	20 e0       	ldi	r18, 0x00	; 0
    4bce:	30 e0       	ldi	r19, 0x00	; 0
    4bd0:	40 e2       	ldi	r20, 0x20	; 32
    4bd2:	51 e4       	ldi	r21, 0x41	; 65
    4bd4:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    4bd8:	dc 01       	movw	r26, r24
    4bda:	cb 01       	movw	r24, r22
    4bdc:	8e 01       	movw	r16, r28
    4bde:	05 5b       	subi	r16, 0xB5	; 181
    4be0:	1f 4f       	sbci	r17, 0xFF	; 255
    4be2:	bc 01       	movw	r22, r24
    4be4:	cd 01       	movw	r24, r26
    4be6:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4bea:	dc 01       	movw	r26, r24
    4bec:	cb 01       	movw	r24, r22
    4bee:	f8 01       	movw	r30, r16
    4bf0:	91 83       	std	Z+1, r25	; 0x01
    4bf2:	80 83       	st	Z, r24
    4bf4:	1f c0       	rjmp	.+62     	; 0x4c34 <LCD_enuToSendCommand+0x20e>
    4bf6:	fe 01       	movw	r30, r28
    4bf8:	e7 5b       	subi	r30, 0xB7	; 183
    4bfa:	ff 4f       	sbci	r31, 0xFF	; 255
    4bfc:	89 e1       	ldi	r24, 0x19	; 25
    4bfe:	90 e0       	ldi	r25, 0x00	; 0
    4c00:	91 83       	std	Z+1, r25	; 0x01
    4c02:	80 83       	st	Z, r24
    4c04:	fe 01       	movw	r30, r28
    4c06:	e7 5b       	subi	r30, 0xB7	; 183
    4c08:	ff 4f       	sbci	r31, 0xFF	; 255
    4c0a:	80 81       	ld	r24, Z
    4c0c:	91 81       	ldd	r25, Z+1	; 0x01
    4c0e:	01 97       	sbiw	r24, 0x01	; 1
    4c10:	f1 f7       	brne	.-4      	; 0x4c0e <LCD_enuToSendCommand+0x1e8>
    4c12:	fe 01       	movw	r30, r28
    4c14:	e7 5b       	subi	r30, 0xB7	; 183
    4c16:	ff 4f       	sbci	r31, 0xFF	; 255
    4c18:	91 83       	std	Z+1, r25	; 0x01
    4c1a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4c1c:	de 01       	movw	r26, r28
    4c1e:	a5 5b       	subi	r26, 0xB5	; 181
    4c20:	bf 4f       	sbci	r27, 0xFF	; 255
    4c22:	fe 01       	movw	r30, r28
    4c24:	e5 5b       	subi	r30, 0xB5	; 181
    4c26:	ff 4f       	sbci	r31, 0xFF	; 255
    4c28:	80 81       	ld	r24, Z
    4c2a:	91 81       	ldd	r25, Z+1	; 0x01
    4c2c:	01 97       	sbiw	r24, 0x01	; 1
    4c2e:	11 96       	adiw	r26, 0x01	; 1
    4c30:	9c 93       	st	X, r25
    4c32:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4c34:	fe 01       	movw	r30, r28
    4c36:	e5 5b       	subi	r30, 0xB5	; 181
    4c38:	ff 4f       	sbci	r31, 0xFF	; 255
    4c3a:	80 81       	ld	r24, Z
    4c3c:	91 81       	ldd	r25, Z+1	; 0x01
    4c3e:	00 97       	sbiw	r24, 0x00	; 0
    4c40:	d1 f6       	brne	.-76     	; 0x4bf6 <LCD_enuToSendCommand+0x1d0>
    4c42:	27 c0       	rjmp	.+78     	; 0x4c92 <LCD_enuToSendCommand+0x26c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4c44:	8e 01       	movw	r16, r28
    4c46:	05 5b       	subi	r16, 0xB5	; 181
    4c48:	1f 4f       	sbci	r17, 0xFF	; 255
    4c4a:	fe 01       	movw	r30, r28
    4c4c:	e3 5b       	subi	r30, 0xB3	; 179
    4c4e:	ff 4f       	sbci	r31, 0xFF	; 255
    4c50:	60 81       	ld	r22, Z
    4c52:	71 81       	ldd	r23, Z+1	; 0x01
    4c54:	82 81       	ldd	r24, Z+2	; 0x02
    4c56:	93 81       	ldd	r25, Z+3	; 0x03
    4c58:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4c5c:	dc 01       	movw	r26, r24
    4c5e:	cb 01       	movw	r24, r22
    4c60:	f8 01       	movw	r30, r16
    4c62:	91 83       	std	Z+1, r25	; 0x01
    4c64:	80 83       	st	Z, r24
    4c66:	de 01       	movw	r26, r28
    4c68:	a9 5b       	subi	r26, 0xB9	; 185
    4c6a:	bf 4f       	sbci	r27, 0xFF	; 255
    4c6c:	fe 01       	movw	r30, r28
    4c6e:	e5 5b       	subi	r30, 0xB5	; 181
    4c70:	ff 4f       	sbci	r31, 0xFF	; 255
    4c72:	80 81       	ld	r24, Z
    4c74:	91 81       	ldd	r25, Z+1	; 0x01
    4c76:	8d 93       	st	X+, r24
    4c78:	9c 93       	st	X, r25
    4c7a:	fe 01       	movw	r30, r28
    4c7c:	e9 5b       	subi	r30, 0xB9	; 185
    4c7e:	ff 4f       	sbci	r31, 0xFF	; 255
    4c80:	80 81       	ld	r24, Z
    4c82:	91 81       	ldd	r25, Z+1	; 0x01
    4c84:	01 97       	sbiw	r24, 0x01	; 1
    4c86:	f1 f7       	brne	.-4      	; 0x4c84 <LCD_enuToSendCommand+0x25e>
    4c88:	fe 01       	movw	r30, r28
    4c8a:	e9 5b       	subi	r30, 0xB9	; 185
    4c8c:	ff 4f       	sbci	r31, 0xFF	; 255
    4c8e:	91 83       	std	Z+1, r25	; 0x01
    4c90:	80 83       	st	Z, r24
		_delay_ms(10);
		Local_enuErrorStates = DIO_enuSetPinValue(EN_PORT, EN_PIN, LOW);
    4c92:	80 e0       	ldi	r24, 0x00	; 0
    4c94:	62 e0       	ldi	r22, 0x02	; 2
    4c96:	40 e0       	ldi	r20, 0x00	; 0
    4c98:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    4c9c:	fe 01       	movw	r30, r28
    4c9e:	eb 5a       	subi	r30, 0xAB	; 171
    4ca0:	ff 4f       	sbci	r31, 0xFF	; 255
    4ca2:	80 83       	st	Z, r24
    4ca4:	fe 01       	movw	r30, r28
    4ca6:	ed 5b       	subi	r30, 0xBD	; 189
    4ca8:	ff 4f       	sbci	r31, 0xFF	; 255
    4caa:	80 e0       	ldi	r24, 0x00	; 0
    4cac:	90 e0       	ldi	r25, 0x00	; 0
    4cae:	a0 e2       	ldi	r26, 0x20	; 32
    4cb0:	b1 e4       	ldi	r27, 0x41	; 65
    4cb2:	80 83       	st	Z, r24
    4cb4:	91 83       	std	Z+1, r25	; 0x01
    4cb6:	a2 83       	std	Z+2, r26	; 0x02
    4cb8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4cba:	8e 01       	movw	r16, r28
    4cbc:	01 5c       	subi	r16, 0xC1	; 193
    4cbe:	1f 4f       	sbci	r17, 0xFF	; 255
    4cc0:	fe 01       	movw	r30, r28
    4cc2:	ed 5b       	subi	r30, 0xBD	; 189
    4cc4:	ff 4f       	sbci	r31, 0xFF	; 255
    4cc6:	60 81       	ld	r22, Z
    4cc8:	71 81       	ldd	r23, Z+1	; 0x01
    4cca:	82 81       	ldd	r24, Z+2	; 0x02
    4ccc:	93 81       	ldd	r25, Z+3	; 0x03
    4cce:	20 e0       	ldi	r18, 0x00	; 0
    4cd0:	30 e0       	ldi	r19, 0x00	; 0
    4cd2:	4a e7       	ldi	r20, 0x7A	; 122
    4cd4:	53 e4       	ldi	r21, 0x43	; 67
    4cd6:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    4cda:	dc 01       	movw	r26, r24
    4cdc:	cb 01       	movw	r24, r22
    4cde:	f8 01       	movw	r30, r16
    4ce0:	80 83       	st	Z, r24
    4ce2:	91 83       	std	Z+1, r25	; 0x01
    4ce4:	a2 83       	std	Z+2, r26	; 0x02
    4ce6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4ce8:	fe 01       	movw	r30, r28
    4cea:	ff 96       	adiw	r30, 0x3f	; 63
    4cec:	60 81       	ld	r22, Z
    4cee:	71 81       	ldd	r23, Z+1	; 0x01
    4cf0:	82 81       	ldd	r24, Z+2	; 0x02
    4cf2:	93 81       	ldd	r25, Z+3	; 0x03
    4cf4:	20 e0       	ldi	r18, 0x00	; 0
    4cf6:	30 e0       	ldi	r19, 0x00	; 0
    4cf8:	40 e8       	ldi	r20, 0x80	; 128
    4cfa:	5f e3       	ldi	r21, 0x3F	; 63
    4cfc:	0e 94 f9 16 	call	0x2df2	; 0x2df2 <__ltsf2>
    4d00:	88 23       	and	r24, r24
    4d02:	2c f4       	brge	.+10     	; 0x4d0e <LCD_enuToSendCommand+0x2e8>
		__ticks = 1;
    4d04:	81 e0       	ldi	r24, 0x01	; 1
    4d06:	90 e0       	ldi	r25, 0x00	; 0
    4d08:	9e af       	std	Y+62, r25	; 0x3e
    4d0a:	8d af       	std	Y+61, r24	; 0x3d
    4d0c:	46 c0       	rjmp	.+140    	; 0x4d9a <LCD_enuToSendCommand+0x374>
	else if (__tmp > 65535)
    4d0e:	fe 01       	movw	r30, r28
    4d10:	ff 96       	adiw	r30, 0x3f	; 63
    4d12:	60 81       	ld	r22, Z
    4d14:	71 81       	ldd	r23, Z+1	; 0x01
    4d16:	82 81       	ldd	r24, Z+2	; 0x02
    4d18:	93 81       	ldd	r25, Z+3	; 0x03
    4d1a:	20 e0       	ldi	r18, 0x00	; 0
    4d1c:	3f ef       	ldi	r19, 0xFF	; 255
    4d1e:	4f e7       	ldi	r20, 0x7F	; 127
    4d20:	57 e4       	ldi	r21, 0x47	; 71
    4d22:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__gtsf2>
    4d26:	18 16       	cp	r1, r24
    4d28:	64 f5       	brge	.+88     	; 0x4d82 <LCD_enuToSendCommand+0x35c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4d2a:	fe 01       	movw	r30, r28
    4d2c:	ed 5b       	subi	r30, 0xBD	; 189
    4d2e:	ff 4f       	sbci	r31, 0xFF	; 255
    4d30:	60 81       	ld	r22, Z
    4d32:	71 81       	ldd	r23, Z+1	; 0x01
    4d34:	82 81       	ldd	r24, Z+2	; 0x02
    4d36:	93 81       	ldd	r25, Z+3	; 0x03
    4d38:	20 e0       	ldi	r18, 0x00	; 0
    4d3a:	30 e0       	ldi	r19, 0x00	; 0
    4d3c:	40 e2       	ldi	r20, 0x20	; 32
    4d3e:	51 e4       	ldi	r21, 0x41	; 65
    4d40:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    4d44:	dc 01       	movw	r26, r24
    4d46:	cb 01       	movw	r24, r22
    4d48:	bc 01       	movw	r22, r24
    4d4a:	cd 01       	movw	r24, r26
    4d4c:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4d50:	dc 01       	movw	r26, r24
    4d52:	cb 01       	movw	r24, r22
    4d54:	9e af       	std	Y+62, r25	; 0x3e
    4d56:	8d af       	std	Y+61, r24	; 0x3d
    4d58:	0f c0       	rjmp	.+30     	; 0x4d78 <LCD_enuToSendCommand+0x352>
    4d5a:	89 e1       	ldi	r24, 0x19	; 25
    4d5c:	90 e0       	ldi	r25, 0x00	; 0
    4d5e:	9c af       	std	Y+60, r25	; 0x3c
    4d60:	8b af       	std	Y+59, r24	; 0x3b
    4d62:	8b ad       	ldd	r24, Y+59	; 0x3b
    4d64:	9c ad       	ldd	r25, Y+60	; 0x3c
    4d66:	01 97       	sbiw	r24, 0x01	; 1
    4d68:	f1 f7       	brne	.-4      	; 0x4d66 <LCD_enuToSendCommand+0x340>
    4d6a:	9c af       	std	Y+60, r25	; 0x3c
    4d6c:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4d6e:	8d ad       	ldd	r24, Y+61	; 0x3d
    4d70:	9e ad       	ldd	r25, Y+62	; 0x3e
    4d72:	01 97       	sbiw	r24, 0x01	; 1
    4d74:	9e af       	std	Y+62, r25	; 0x3e
    4d76:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4d78:	8d ad       	ldd	r24, Y+61	; 0x3d
    4d7a:	9e ad       	ldd	r25, Y+62	; 0x3e
    4d7c:	00 97       	sbiw	r24, 0x00	; 0
    4d7e:	69 f7       	brne	.-38     	; 0x4d5a <LCD_enuToSendCommand+0x334>
    4d80:	16 c0       	rjmp	.+44     	; 0x4dae <LCD_enuToSendCommand+0x388>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4d82:	fe 01       	movw	r30, r28
    4d84:	ff 96       	adiw	r30, 0x3f	; 63
    4d86:	60 81       	ld	r22, Z
    4d88:	71 81       	ldd	r23, Z+1	; 0x01
    4d8a:	82 81       	ldd	r24, Z+2	; 0x02
    4d8c:	93 81       	ldd	r25, Z+3	; 0x03
    4d8e:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4d92:	dc 01       	movw	r26, r24
    4d94:	cb 01       	movw	r24, r22
    4d96:	9e af       	std	Y+62, r25	; 0x3e
    4d98:	8d af       	std	Y+61, r24	; 0x3d
    4d9a:	8d ad       	ldd	r24, Y+61	; 0x3d
    4d9c:	9e ad       	ldd	r25, Y+62	; 0x3e
    4d9e:	9a af       	std	Y+58, r25	; 0x3a
    4da0:	89 af       	std	Y+57, r24	; 0x39
    4da2:	89 ad       	ldd	r24, Y+57	; 0x39
    4da4:	9a ad       	ldd	r25, Y+58	; 0x3a
    4da6:	01 97       	sbiw	r24, 0x01	; 1
    4da8:	f1 f7       	brne	.-4      	; 0x4da6 <LCD_enuToSendCommand+0x380>
    4daa:	9a af       	std	Y+58, r25	; 0x3a
    4dac:	89 af       	std	Y+57, r24	; 0x39
		_delay_ms(10);
		Local_enuErrorStates = DIO_enuSetPinValue(D7_PORT, D7_PIN, BIT_MASK & (Copy_uint8Command >> 7));
    4dae:	fe 01       	movw	r30, r28
    4db0:	ea 5a       	subi	r30, 0xAA	; 170
    4db2:	ff 4f       	sbci	r31, 0xFF	; 255
    4db4:	80 81       	ld	r24, Z
    4db6:	98 2f       	mov	r25, r24
    4db8:	99 1f       	adc	r25, r25
    4dba:	99 27       	eor	r25, r25
    4dbc:	99 1f       	adc	r25, r25
    4dbe:	80 e0       	ldi	r24, 0x00	; 0
    4dc0:	63 e0       	ldi	r22, 0x03	; 3
    4dc2:	49 2f       	mov	r20, r25
    4dc4:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    4dc8:	fe 01       	movw	r30, r28
    4dca:	eb 5a       	subi	r30, 0xAB	; 171
    4dcc:	ff 4f       	sbci	r31, 0xFF	; 255
    4dce:	80 83       	st	Z, r24
		Local_enuErrorStates = DIO_enuSetPinValue(D6_PORT, D6_PIN, BIT_MASK & (Copy_uint8Command >> 6));
    4dd0:	fe 01       	movw	r30, r28
    4dd2:	ea 5a       	subi	r30, 0xAA	; 170
    4dd4:	ff 4f       	sbci	r31, 0xFF	; 255
    4dd6:	80 81       	ld	r24, Z
    4dd8:	82 95       	swap	r24
    4dda:	86 95       	lsr	r24
    4ddc:	86 95       	lsr	r24
    4dde:	83 70       	andi	r24, 0x03	; 3
    4de0:	98 2f       	mov	r25, r24
    4de2:	91 70       	andi	r25, 0x01	; 1
    4de4:	80 e0       	ldi	r24, 0x00	; 0
    4de6:	64 e0       	ldi	r22, 0x04	; 4
    4de8:	49 2f       	mov	r20, r25
    4dea:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    4dee:	fe 01       	movw	r30, r28
    4df0:	eb 5a       	subi	r30, 0xAB	; 171
    4df2:	ff 4f       	sbci	r31, 0xFF	; 255
    4df4:	80 83       	st	Z, r24
		Local_enuErrorStates = DIO_enuSetPinValue(D5_PORT, D5_PIN, BIT_MASK & (Copy_uint8Command >> 5));
    4df6:	fe 01       	movw	r30, r28
    4df8:	ea 5a       	subi	r30, 0xAA	; 170
    4dfa:	ff 4f       	sbci	r31, 0xFF	; 255
    4dfc:	80 81       	ld	r24, Z
    4dfe:	82 95       	swap	r24
    4e00:	86 95       	lsr	r24
    4e02:	87 70       	andi	r24, 0x07	; 7
    4e04:	98 2f       	mov	r25, r24
    4e06:	91 70       	andi	r25, 0x01	; 1
    4e08:	80 e0       	ldi	r24, 0x00	; 0
    4e0a:	65 e0       	ldi	r22, 0x05	; 5
    4e0c:	49 2f       	mov	r20, r25
    4e0e:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    4e12:	fe 01       	movw	r30, r28
    4e14:	eb 5a       	subi	r30, 0xAB	; 171
    4e16:	ff 4f       	sbci	r31, 0xFF	; 255
    4e18:	80 83       	st	Z, r24
		Local_enuErrorStates = DIO_enuSetPinValue(D4_PORT, D4_PIN, BIT_MASK & (Copy_uint8Command >> 4));
    4e1a:	fe 01       	movw	r30, r28
    4e1c:	ea 5a       	subi	r30, 0xAA	; 170
    4e1e:	ff 4f       	sbci	r31, 0xFF	; 255
    4e20:	80 81       	ld	r24, Z
    4e22:	82 95       	swap	r24
    4e24:	8f 70       	andi	r24, 0x0F	; 15
    4e26:	98 2f       	mov	r25, r24
    4e28:	91 70       	andi	r25, 0x01	; 1
    4e2a:	80 e0       	ldi	r24, 0x00	; 0
    4e2c:	66 e0       	ldi	r22, 0x06	; 6
    4e2e:	49 2f       	mov	r20, r25
    4e30:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    4e34:	fe 01       	movw	r30, r28
    4e36:	eb 5a       	subi	r30, 0xAB	; 171
    4e38:	ff 4f       	sbci	r31, 0xFF	; 255
    4e3a:	80 83       	st	Z, r24
	}
	Local_enuErrorStates = DIO_enuSetPinValue(EN_PORT, EN_PIN, HIGH);
    4e3c:	80 e0       	ldi	r24, 0x00	; 0
    4e3e:	62 e0       	ldi	r22, 0x02	; 2
    4e40:	41 e0       	ldi	r20, 0x01	; 1
    4e42:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    4e46:	fe 01       	movw	r30, r28
    4e48:	eb 5a       	subi	r30, 0xAB	; 171
    4e4a:	ff 4f       	sbci	r31, 0xFF	; 255
    4e4c:	80 83       	st	Z, r24
    4e4e:	80 e0       	ldi	r24, 0x00	; 0
    4e50:	90 e0       	ldi	r25, 0x00	; 0
    4e52:	a0 e2       	ldi	r26, 0x20	; 32
    4e54:	b1 e4       	ldi	r27, 0x41	; 65
    4e56:	8d ab       	std	Y+53, r24	; 0x35
    4e58:	9e ab       	std	Y+54, r25	; 0x36
    4e5a:	af ab       	std	Y+55, r26	; 0x37
    4e5c:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4e5e:	6d a9       	ldd	r22, Y+53	; 0x35
    4e60:	7e a9       	ldd	r23, Y+54	; 0x36
    4e62:	8f a9       	ldd	r24, Y+55	; 0x37
    4e64:	98 ad       	ldd	r25, Y+56	; 0x38
    4e66:	20 e0       	ldi	r18, 0x00	; 0
    4e68:	30 e0       	ldi	r19, 0x00	; 0
    4e6a:	4a e7       	ldi	r20, 0x7A	; 122
    4e6c:	53 e4       	ldi	r21, 0x43	; 67
    4e6e:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    4e72:	dc 01       	movw	r26, r24
    4e74:	cb 01       	movw	r24, r22
    4e76:	89 ab       	std	Y+49, r24	; 0x31
    4e78:	9a ab       	std	Y+50, r25	; 0x32
    4e7a:	ab ab       	std	Y+51, r26	; 0x33
    4e7c:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    4e7e:	69 a9       	ldd	r22, Y+49	; 0x31
    4e80:	7a a9       	ldd	r23, Y+50	; 0x32
    4e82:	8b a9       	ldd	r24, Y+51	; 0x33
    4e84:	9c a9       	ldd	r25, Y+52	; 0x34
    4e86:	20 e0       	ldi	r18, 0x00	; 0
    4e88:	30 e0       	ldi	r19, 0x00	; 0
    4e8a:	40 e8       	ldi	r20, 0x80	; 128
    4e8c:	5f e3       	ldi	r21, 0x3F	; 63
    4e8e:	0e 94 f9 16 	call	0x2df2	; 0x2df2 <__ltsf2>
    4e92:	88 23       	and	r24, r24
    4e94:	2c f4       	brge	.+10     	; 0x4ea0 <LCD_enuToSendCommand+0x47a>
		__ticks = 1;
    4e96:	81 e0       	ldi	r24, 0x01	; 1
    4e98:	90 e0       	ldi	r25, 0x00	; 0
    4e9a:	98 ab       	std	Y+48, r25	; 0x30
    4e9c:	8f a7       	std	Y+47, r24	; 0x2f
    4e9e:	3f c0       	rjmp	.+126    	; 0x4f1e <LCD_enuToSendCommand+0x4f8>
	else if (__tmp > 65535)
    4ea0:	69 a9       	ldd	r22, Y+49	; 0x31
    4ea2:	7a a9       	ldd	r23, Y+50	; 0x32
    4ea4:	8b a9       	ldd	r24, Y+51	; 0x33
    4ea6:	9c a9       	ldd	r25, Y+52	; 0x34
    4ea8:	20 e0       	ldi	r18, 0x00	; 0
    4eaa:	3f ef       	ldi	r19, 0xFF	; 255
    4eac:	4f e7       	ldi	r20, 0x7F	; 127
    4eae:	57 e4       	ldi	r21, 0x47	; 71
    4eb0:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__gtsf2>
    4eb4:	18 16       	cp	r1, r24
    4eb6:	4c f5       	brge	.+82     	; 0x4f0a <LCD_enuToSendCommand+0x4e4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4eb8:	6d a9       	ldd	r22, Y+53	; 0x35
    4eba:	7e a9       	ldd	r23, Y+54	; 0x36
    4ebc:	8f a9       	ldd	r24, Y+55	; 0x37
    4ebe:	98 ad       	ldd	r25, Y+56	; 0x38
    4ec0:	20 e0       	ldi	r18, 0x00	; 0
    4ec2:	30 e0       	ldi	r19, 0x00	; 0
    4ec4:	40 e2       	ldi	r20, 0x20	; 32
    4ec6:	51 e4       	ldi	r21, 0x41	; 65
    4ec8:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    4ecc:	dc 01       	movw	r26, r24
    4ece:	cb 01       	movw	r24, r22
    4ed0:	bc 01       	movw	r22, r24
    4ed2:	cd 01       	movw	r24, r26
    4ed4:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4ed8:	dc 01       	movw	r26, r24
    4eda:	cb 01       	movw	r24, r22
    4edc:	98 ab       	std	Y+48, r25	; 0x30
    4ede:	8f a7       	std	Y+47, r24	; 0x2f
    4ee0:	0f c0       	rjmp	.+30     	; 0x4f00 <LCD_enuToSendCommand+0x4da>
    4ee2:	89 e1       	ldi	r24, 0x19	; 25
    4ee4:	90 e0       	ldi	r25, 0x00	; 0
    4ee6:	9e a7       	std	Y+46, r25	; 0x2e
    4ee8:	8d a7       	std	Y+45, r24	; 0x2d
    4eea:	8d a5       	ldd	r24, Y+45	; 0x2d
    4eec:	9e a5       	ldd	r25, Y+46	; 0x2e
    4eee:	01 97       	sbiw	r24, 0x01	; 1
    4ef0:	f1 f7       	brne	.-4      	; 0x4eee <LCD_enuToSendCommand+0x4c8>
    4ef2:	9e a7       	std	Y+46, r25	; 0x2e
    4ef4:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4ef6:	8f a5       	ldd	r24, Y+47	; 0x2f
    4ef8:	98 a9       	ldd	r25, Y+48	; 0x30
    4efa:	01 97       	sbiw	r24, 0x01	; 1
    4efc:	98 ab       	std	Y+48, r25	; 0x30
    4efe:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4f00:	8f a5       	ldd	r24, Y+47	; 0x2f
    4f02:	98 a9       	ldd	r25, Y+48	; 0x30
    4f04:	00 97       	sbiw	r24, 0x00	; 0
    4f06:	69 f7       	brne	.-38     	; 0x4ee2 <LCD_enuToSendCommand+0x4bc>
    4f08:	14 c0       	rjmp	.+40     	; 0x4f32 <LCD_enuToSendCommand+0x50c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4f0a:	69 a9       	ldd	r22, Y+49	; 0x31
    4f0c:	7a a9       	ldd	r23, Y+50	; 0x32
    4f0e:	8b a9       	ldd	r24, Y+51	; 0x33
    4f10:	9c a9       	ldd	r25, Y+52	; 0x34
    4f12:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4f16:	dc 01       	movw	r26, r24
    4f18:	cb 01       	movw	r24, r22
    4f1a:	98 ab       	std	Y+48, r25	; 0x30
    4f1c:	8f a7       	std	Y+47, r24	; 0x2f
    4f1e:	8f a5       	ldd	r24, Y+47	; 0x2f
    4f20:	98 a9       	ldd	r25, Y+48	; 0x30
    4f22:	9c a7       	std	Y+44, r25	; 0x2c
    4f24:	8b a7       	std	Y+43, r24	; 0x2b
    4f26:	8b a5       	ldd	r24, Y+43	; 0x2b
    4f28:	9c a5       	ldd	r25, Y+44	; 0x2c
    4f2a:	01 97       	sbiw	r24, 0x01	; 1
    4f2c:	f1 f7       	brne	.-4      	; 0x4f2a <LCD_enuToSendCommand+0x504>
    4f2e:	9c a7       	std	Y+44, r25	; 0x2c
    4f30:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(10);
	Local_enuErrorStates = DIO_enuSetPinValue(EN_PORT, EN_PIN, LOW);
    4f32:	80 e0       	ldi	r24, 0x00	; 0
    4f34:	62 e0       	ldi	r22, 0x02	; 2
    4f36:	40 e0       	ldi	r20, 0x00	; 0
    4f38:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    4f3c:	fe 01       	movw	r30, r28
    4f3e:	eb 5a       	subi	r30, 0xAB	; 171
    4f40:	ff 4f       	sbci	r31, 0xFF	; 255
    4f42:	80 83       	st	Z, r24
    4f44:	80 e0       	ldi	r24, 0x00	; 0
    4f46:	90 e0       	ldi	r25, 0x00	; 0
    4f48:	a0 e2       	ldi	r26, 0x20	; 32
    4f4a:	b1 e4       	ldi	r27, 0x41	; 65
    4f4c:	8f a3       	std	Y+39, r24	; 0x27
    4f4e:	98 a7       	std	Y+40, r25	; 0x28
    4f50:	a9 a7       	std	Y+41, r26	; 0x29
    4f52:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4f54:	6f a1       	ldd	r22, Y+39	; 0x27
    4f56:	78 a5       	ldd	r23, Y+40	; 0x28
    4f58:	89 a5       	ldd	r24, Y+41	; 0x29
    4f5a:	9a a5       	ldd	r25, Y+42	; 0x2a
    4f5c:	20 e0       	ldi	r18, 0x00	; 0
    4f5e:	30 e0       	ldi	r19, 0x00	; 0
    4f60:	4a e7       	ldi	r20, 0x7A	; 122
    4f62:	53 e4       	ldi	r21, 0x43	; 67
    4f64:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    4f68:	dc 01       	movw	r26, r24
    4f6a:	cb 01       	movw	r24, r22
    4f6c:	8b a3       	std	Y+35, r24	; 0x23
    4f6e:	9c a3       	std	Y+36, r25	; 0x24
    4f70:	ad a3       	std	Y+37, r26	; 0x25
    4f72:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    4f74:	6b a1       	ldd	r22, Y+35	; 0x23
    4f76:	7c a1       	ldd	r23, Y+36	; 0x24
    4f78:	8d a1       	ldd	r24, Y+37	; 0x25
    4f7a:	9e a1       	ldd	r25, Y+38	; 0x26
    4f7c:	20 e0       	ldi	r18, 0x00	; 0
    4f7e:	30 e0       	ldi	r19, 0x00	; 0
    4f80:	40 e8       	ldi	r20, 0x80	; 128
    4f82:	5f e3       	ldi	r21, 0x3F	; 63
    4f84:	0e 94 f9 16 	call	0x2df2	; 0x2df2 <__ltsf2>
    4f88:	88 23       	and	r24, r24
    4f8a:	2c f4       	brge	.+10     	; 0x4f96 <LCD_enuToSendCommand+0x570>
		__ticks = 1;
    4f8c:	81 e0       	ldi	r24, 0x01	; 1
    4f8e:	90 e0       	ldi	r25, 0x00	; 0
    4f90:	9a a3       	std	Y+34, r25	; 0x22
    4f92:	89 a3       	std	Y+33, r24	; 0x21
    4f94:	3f c0       	rjmp	.+126    	; 0x5014 <LCD_enuToSendCommand+0x5ee>
	else if (__tmp > 65535)
    4f96:	6b a1       	ldd	r22, Y+35	; 0x23
    4f98:	7c a1       	ldd	r23, Y+36	; 0x24
    4f9a:	8d a1       	ldd	r24, Y+37	; 0x25
    4f9c:	9e a1       	ldd	r25, Y+38	; 0x26
    4f9e:	20 e0       	ldi	r18, 0x00	; 0
    4fa0:	3f ef       	ldi	r19, 0xFF	; 255
    4fa2:	4f e7       	ldi	r20, 0x7F	; 127
    4fa4:	57 e4       	ldi	r21, 0x47	; 71
    4fa6:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__gtsf2>
    4faa:	18 16       	cp	r1, r24
    4fac:	4c f5       	brge	.+82     	; 0x5000 <LCD_enuToSendCommand+0x5da>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4fae:	6f a1       	ldd	r22, Y+39	; 0x27
    4fb0:	78 a5       	ldd	r23, Y+40	; 0x28
    4fb2:	89 a5       	ldd	r24, Y+41	; 0x29
    4fb4:	9a a5       	ldd	r25, Y+42	; 0x2a
    4fb6:	20 e0       	ldi	r18, 0x00	; 0
    4fb8:	30 e0       	ldi	r19, 0x00	; 0
    4fba:	40 e2       	ldi	r20, 0x20	; 32
    4fbc:	51 e4       	ldi	r21, 0x41	; 65
    4fbe:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    4fc2:	dc 01       	movw	r26, r24
    4fc4:	cb 01       	movw	r24, r22
    4fc6:	bc 01       	movw	r22, r24
    4fc8:	cd 01       	movw	r24, r26
    4fca:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4fce:	dc 01       	movw	r26, r24
    4fd0:	cb 01       	movw	r24, r22
    4fd2:	9a a3       	std	Y+34, r25	; 0x22
    4fd4:	89 a3       	std	Y+33, r24	; 0x21
    4fd6:	0f c0       	rjmp	.+30     	; 0x4ff6 <LCD_enuToSendCommand+0x5d0>
    4fd8:	89 e1       	ldi	r24, 0x19	; 25
    4fda:	90 e0       	ldi	r25, 0x00	; 0
    4fdc:	98 a3       	std	Y+32, r25	; 0x20
    4fde:	8f 8f       	std	Y+31, r24	; 0x1f
    4fe0:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4fe2:	98 a1       	ldd	r25, Y+32	; 0x20
    4fe4:	01 97       	sbiw	r24, 0x01	; 1
    4fe6:	f1 f7       	brne	.-4      	; 0x4fe4 <LCD_enuToSendCommand+0x5be>
    4fe8:	98 a3       	std	Y+32, r25	; 0x20
    4fea:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4fec:	89 a1       	ldd	r24, Y+33	; 0x21
    4fee:	9a a1       	ldd	r25, Y+34	; 0x22
    4ff0:	01 97       	sbiw	r24, 0x01	; 1
    4ff2:	9a a3       	std	Y+34, r25	; 0x22
    4ff4:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4ff6:	89 a1       	ldd	r24, Y+33	; 0x21
    4ff8:	9a a1       	ldd	r25, Y+34	; 0x22
    4ffa:	00 97       	sbiw	r24, 0x00	; 0
    4ffc:	69 f7       	brne	.-38     	; 0x4fd8 <LCD_enuToSendCommand+0x5b2>
    4ffe:	14 c0       	rjmp	.+40     	; 0x5028 <LCD_enuToSendCommand+0x602>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5000:	6b a1       	ldd	r22, Y+35	; 0x23
    5002:	7c a1       	ldd	r23, Y+36	; 0x24
    5004:	8d a1       	ldd	r24, Y+37	; 0x25
    5006:	9e a1       	ldd	r25, Y+38	; 0x26
    5008:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    500c:	dc 01       	movw	r26, r24
    500e:	cb 01       	movw	r24, r22
    5010:	9a a3       	std	Y+34, r25	; 0x22
    5012:	89 a3       	std	Y+33, r24	; 0x21
    5014:	89 a1       	ldd	r24, Y+33	; 0x21
    5016:	9a a1       	ldd	r25, Y+34	; 0x22
    5018:	9e 8f       	std	Y+30, r25	; 0x1e
    501a:	8d 8f       	std	Y+29, r24	; 0x1d
    501c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    501e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5020:	01 97       	sbiw	r24, 0x01	; 1
    5022:	f1 f7       	brne	.-4      	; 0x5020 <LCD_enuToSendCommand+0x5fa>
    5024:	9e 8f       	std	Y+30, r25	; 0x1e
    5026:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(10);
	Local_enuErrorStates = DIO_enuSetPinValue(D7_PORT, D7_PIN, BIT_MASK & (Copy_uint8Command >> 3));
    5028:	fe 01       	movw	r30, r28
    502a:	ea 5a       	subi	r30, 0xAA	; 170
    502c:	ff 4f       	sbci	r31, 0xFF	; 255
    502e:	80 81       	ld	r24, Z
    5030:	86 95       	lsr	r24
    5032:	86 95       	lsr	r24
    5034:	86 95       	lsr	r24
    5036:	98 2f       	mov	r25, r24
    5038:	91 70       	andi	r25, 0x01	; 1
    503a:	80 e0       	ldi	r24, 0x00	; 0
    503c:	63 e0       	ldi	r22, 0x03	; 3
    503e:	49 2f       	mov	r20, r25
    5040:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    5044:	fe 01       	movw	r30, r28
    5046:	eb 5a       	subi	r30, 0xAB	; 171
    5048:	ff 4f       	sbci	r31, 0xFF	; 255
    504a:	80 83       	st	Z, r24
	Local_enuErrorStates = DIO_enuSetPinValue(D6_PORT, D6_PIN, BIT_MASK & (Copy_uint8Command >> 2));
    504c:	fe 01       	movw	r30, r28
    504e:	ea 5a       	subi	r30, 0xAA	; 170
    5050:	ff 4f       	sbci	r31, 0xFF	; 255
    5052:	80 81       	ld	r24, Z
    5054:	86 95       	lsr	r24
    5056:	86 95       	lsr	r24
    5058:	98 2f       	mov	r25, r24
    505a:	91 70       	andi	r25, 0x01	; 1
    505c:	80 e0       	ldi	r24, 0x00	; 0
    505e:	64 e0       	ldi	r22, 0x04	; 4
    5060:	49 2f       	mov	r20, r25
    5062:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    5066:	fe 01       	movw	r30, r28
    5068:	eb 5a       	subi	r30, 0xAB	; 171
    506a:	ff 4f       	sbci	r31, 0xFF	; 255
    506c:	80 83       	st	Z, r24
	Local_enuErrorStates = DIO_enuSetPinValue(D5_PORT, D5_PIN, BIT_MASK & (Copy_uint8Command >> 1));
    506e:	fe 01       	movw	r30, r28
    5070:	ea 5a       	subi	r30, 0xAA	; 170
    5072:	ff 4f       	sbci	r31, 0xFF	; 255
    5074:	80 81       	ld	r24, Z
    5076:	86 95       	lsr	r24
    5078:	98 2f       	mov	r25, r24
    507a:	91 70       	andi	r25, 0x01	; 1
    507c:	80 e0       	ldi	r24, 0x00	; 0
    507e:	65 e0       	ldi	r22, 0x05	; 5
    5080:	49 2f       	mov	r20, r25
    5082:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    5086:	fe 01       	movw	r30, r28
    5088:	eb 5a       	subi	r30, 0xAB	; 171
    508a:	ff 4f       	sbci	r31, 0xFF	; 255
    508c:	80 83       	st	Z, r24
	Local_enuErrorStates = DIO_enuSetPinValue(D4_PORT, D4_PIN, BIT_MASK & (Copy_uint8Command >> 0));
    508e:	fe 01       	movw	r30, r28
    5090:	ea 5a       	subi	r30, 0xAA	; 170
    5092:	ff 4f       	sbci	r31, 0xFF	; 255
    5094:	80 81       	ld	r24, Z
    5096:	98 2f       	mov	r25, r24
    5098:	91 70       	andi	r25, 0x01	; 1
    509a:	80 e0       	ldi	r24, 0x00	; 0
    509c:	66 e0       	ldi	r22, 0x06	; 6
    509e:	49 2f       	mov	r20, r25
    50a0:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    50a4:	fe 01       	movw	r30, r28
    50a6:	eb 5a       	subi	r30, 0xAB	; 171
    50a8:	ff 4f       	sbci	r31, 0xFF	; 255
    50aa:	80 83       	st	Z, r24
#endif

	Local_enuErrorStates = DIO_enuSetPinValue(EN_PORT, EN_PIN, HIGH);
    50ac:	80 e0       	ldi	r24, 0x00	; 0
    50ae:	62 e0       	ldi	r22, 0x02	; 2
    50b0:	41 e0       	ldi	r20, 0x01	; 1
    50b2:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    50b6:	fe 01       	movw	r30, r28
    50b8:	eb 5a       	subi	r30, 0xAB	; 171
    50ba:	ff 4f       	sbci	r31, 0xFF	; 255
    50bc:	80 83       	st	Z, r24
    50be:	80 e0       	ldi	r24, 0x00	; 0
    50c0:	90 e0       	ldi	r25, 0x00	; 0
    50c2:	a0 e2       	ldi	r26, 0x20	; 32
    50c4:	b1 e4       	ldi	r27, 0x41	; 65
    50c6:	89 8f       	std	Y+25, r24	; 0x19
    50c8:	9a 8f       	std	Y+26, r25	; 0x1a
    50ca:	ab 8f       	std	Y+27, r26	; 0x1b
    50cc:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    50ce:	69 8d       	ldd	r22, Y+25	; 0x19
    50d0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    50d2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    50d4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    50d6:	20 e0       	ldi	r18, 0x00	; 0
    50d8:	30 e0       	ldi	r19, 0x00	; 0
    50da:	4a e7       	ldi	r20, 0x7A	; 122
    50dc:	53 e4       	ldi	r21, 0x43	; 67
    50de:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    50e2:	dc 01       	movw	r26, r24
    50e4:	cb 01       	movw	r24, r22
    50e6:	8d 8b       	std	Y+21, r24	; 0x15
    50e8:	9e 8b       	std	Y+22, r25	; 0x16
    50ea:	af 8b       	std	Y+23, r26	; 0x17
    50ec:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    50ee:	6d 89       	ldd	r22, Y+21	; 0x15
    50f0:	7e 89       	ldd	r23, Y+22	; 0x16
    50f2:	8f 89       	ldd	r24, Y+23	; 0x17
    50f4:	98 8d       	ldd	r25, Y+24	; 0x18
    50f6:	20 e0       	ldi	r18, 0x00	; 0
    50f8:	30 e0       	ldi	r19, 0x00	; 0
    50fa:	40 e8       	ldi	r20, 0x80	; 128
    50fc:	5f e3       	ldi	r21, 0x3F	; 63
    50fe:	0e 94 f9 16 	call	0x2df2	; 0x2df2 <__ltsf2>
    5102:	88 23       	and	r24, r24
    5104:	2c f4       	brge	.+10     	; 0x5110 <LCD_enuToSendCommand+0x6ea>
		__ticks = 1;
    5106:	81 e0       	ldi	r24, 0x01	; 1
    5108:	90 e0       	ldi	r25, 0x00	; 0
    510a:	9c 8b       	std	Y+20, r25	; 0x14
    510c:	8b 8b       	std	Y+19, r24	; 0x13
    510e:	3f c0       	rjmp	.+126    	; 0x518e <LCD_enuToSendCommand+0x768>
	else if (__tmp > 65535)
    5110:	6d 89       	ldd	r22, Y+21	; 0x15
    5112:	7e 89       	ldd	r23, Y+22	; 0x16
    5114:	8f 89       	ldd	r24, Y+23	; 0x17
    5116:	98 8d       	ldd	r25, Y+24	; 0x18
    5118:	20 e0       	ldi	r18, 0x00	; 0
    511a:	3f ef       	ldi	r19, 0xFF	; 255
    511c:	4f e7       	ldi	r20, 0x7F	; 127
    511e:	57 e4       	ldi	r21, 0x47	; 71
    5120:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__gtsf2>
    5124:	18 16       	cp	r1, r24
    5126:	4c f5       	brge	.+82     	; 0x517a <LCD_enuToSendCommand+0x754>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5128:	69 8d       	ldd	r22, Y+25	; 0x19
    512a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    512c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    512e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5130:	20 e0       	ldi	r18, 0x00	; 0
    5132:	30 e0       	ldi	r19, 0x00	; 0
    5134:	40 e2       	ldi	r20, 0x20	; 32
    5136:	51 e4       	ldi	r21, 0x41	; 65
    5138:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    513c:	dc 01       	movw	r26, r24
    513e:	cb 01       	movw	r24, r22
    5140:	bc 01       	movw	r22, r24
    5142:	cd 01       	movw	r24, r26
    5144:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    5148:	dc 01       	movw	r26, r24
    514a:	cb 01       	movw	r24, r22
    514c:	9c 8b       	std	Y+20, r25	; 0x14
    514e:	8b 8b       	std	Y+19, r24	; 0x13
    5150:	0f c0       	rjmp	.+30     	; 0x5170 <LCD_enuToSendCommand+0x74a>
    5152:	89 e1       	ldi	r24, 0x19	; 25
    5154:	90 e0       	ldi	r25, 0x00	; 0
    5156:	9a 8b       	std	Y+18, r25	; 0x12
    5158:	89 8b       	std	Y+17, r24	; 0x11
    515a:	89 89       	ldd	r24, Y+17	; 0x11
    515c:	9a 89       	ldd	r25, Y+18	; 0x12
    515e:	01 97       	sbiw	r24, 0x01	; 1
    5160:	f1 f7       	brne	.-4      	; 0x515e <LCD_enuToSendCommand+0x738>
    5162:	9a 8b       	std	Y+18, r25	; 0x12
    5164:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5166:	8b 89       	ldd	r24, Y+19	; 0x13
    5168:	9c 89       	ldd	r25, Y+20	; 0x14
    516a:	01 97       	sbiw	r24, 0x01	; 1
    516c:	9c 8b       	std	Y+20, r25	; 0x14
    516e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5170:	8b 89       	ldd	r24, Y+19	; 0x13
    5172:	9c 89       	ldd	r25, Y+20	; 0x14
    5174:	00 97       	sbiw	r24, 0x00	; 0
    5176:	69 f7       	brne	.-38     	; 0x5152 <LCD_enuToSendCommand+0x72c>
    5178:	14 c0       	rjmp	.+40     	; 0x51a2 <LCD_enuToSendCommand+0x77c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    517a:	6d 89       	ldd	r22, Y+21	; 0x15
    517c:	7e 89       	ldd	r23, Y+22	; 0x16
    517e:	8f 89       	ldd	r24, Y+23	; 0x17
    5180:	98 8d       	ldd	r25, Y+24	; 0x18
    5182:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    5186:	dc 01       	movw	r26, r24
    5188:	cb 01       	movw	r24, r22
    518a:	9c 8b       	std	Y+20, r25	; 0x14
    518c:	8b 8b       	std	Y+19, r24	; 0x13
    518e:	8b 89       	ldd	r24, Y+19	; 0x13
    5190:	9c 89       	ldd	r25, Y+20	; 0x14
    5192:	98 8b       	std	Y+16, r25	; 0x10
    5194:	8f 87       	std	Y+15, r24	; 0x0f
    5196:	8f 85       	ldd	r24, Y+15	; 0x0f
    5198:	98 89       	ldd	r25, Y+16	; 0x10
    519a:	01 97       	sbiw	r24, 0x01	; 1
    519c:	f1 f7       	brne	.-4      	; 0x519a <LCD_enuToSendCommand+0x774>
    519e:	98 8b       	std	Y+16, r25	; 0x10
    51a0:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(10);
	Local_enuErrorStates = DIO_enuSetPinValue(EN_PORT, EN_PIN, LOW);
    51a2:	80 e0       	ldi	r24, 0x00	; 0
    51a4:	62 e0       	ldi	r22, 0x02	; 2
    51a6:	40 e0       	ldi	r20, 0x00	; 0
    51a8:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <DIO_enuSetPinValue>
    51ac:	fe 01       	movw	r30, r28
    51ae:	eb 5a       	subi	r30, 0xAB	; 171
    51b0:	ff 4f       	sbci	r31, 0xFF	; 255
    51b2:	80 83       	st	Z, r24
    51b4:	80 e0       	ldi	r24, 0x00	; 0
    51b6:	90 e0       	ldi	r25, 0x00	; 0
    51b8:	a0 e2       	ldi	r26, 0x20	; 32
    51ba:	b1 e4       	ldi	r27, 0x41	; 65
    51bc:	8b 87       	std	Y+11, r24	; 0x0b
    51be:	9c 87       	std	Y+12, r25	; 0x0c
    51c0:	ad 87       	std	Y+13, r26	; 0x0d
    51c2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    51c4:	6b 85       	ldd	r22, Y+11	; 0x0b
    51c6:	7c 85       	ldd	r23, Y+12	; 0x0c
    51c8:	8d 85       	ldd	r24, Y+13	; 0x0d
    51ca:	9e 85       	ldd	r25, Y+14	; 0x0e
    51cc:	20 e0       	ldi	r18, 0x00	; 0
    51ce:	30 e0       	ldi	r19, 0x00	; 0
    51d0:	4a e7       	ldi	r20, 0x7A	; 122
    51d2:	53 e4       	ldi	r21, 0x43	; 67
    51d4:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    51d8:	dc 01       	movw	r26, r24
    51da:	cb 01       	movw	r24, r22
    51dc:	8f 83       	std	Y+7, r24	; 0x07
    51de:	98 87       	std	Y+8, r25	; 0x08
    51e0:	a9 87       	std	Y+9, r26	; 0x09
    51e2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    51e4:	6f 81       	ldd	r22, Y+7	; 0x07
    51e6:	78 85       	ldd	r23, Y+8	; 0x08
    51e8:	89 85       	ldd	r24, Y+9	; 0x09
    51ea:	9a 85       	ldd	r25, Y+10	; 0x0a
    51ec:	20 e0       	ldi	r18, 0x00	; 0
    51ee:	30 e0       	ldi	r19, 0x00	; 0
    51f0:	40 e8       	ldi	r20, 0x80	; 128
    51f2:	5f e3       	ldi	r21, 0x3F	; 63
    51f4:	0e 94 f9 16 	call	0x2df2	; 0x2df2 <__ltsf2>
    51f8:	88 23       	and	r24, r24
    51fa:	2c f4       	brge	.+10     	; 0x5206 <LCD_enuToSendCommand+0x7e0>
		__ticks = 1;
    51fc:	81 e0       	ldi	r24, 0x01	; 1
    51fe:	90 e0       	ldi	r25, 0x00	; 0
    5200:	9e 83       	std	Y+6, r25	; 0x06
    5202:	8d 83       	std	Y+5, r24	; 0x05
    5204:	3f c0       	rjmp	.+126    	; 0x5284 <LCD_enuToSendCommand+0x85e>
	else if (__tmp > 65535)
    5206:	6f 81       	ldd	r22, Y+7	; 0x07
    5208:	78 85       	ldd	r23, Y+8	; 0x08
    520a:	89 85       	ldd	r24, Y+9	; 0x09
    520c:	9a 85       	ldd	r25, Y+10	; 0x0a
    520e:	20 e0       	ldi	r18, 0x00	; 0
    5210:	3f ef       	ldi	r19, 0xFF	; 255
    5212:	4f e7       	ldi	r20, 0x7F	; 127
    5214:	57 e4       	ldi	r21, 0x47	; 71
    5216:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__gtsf2>
    521a:	18 16       	cp	r1, r24
    521c:	4c f5       	brge	.+82     	; 0x5270 <LCD_enuToSendCommand+0x84a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    521e:	6b 85       	ldd	r22, Y+11	; 0x0b
    5220:	7c 85       	ldd	r23, Y+12	; 0x0c
    5222:	8d 85       	ldd	r24, Y+13	; 0x0d
    5224:	9e 85       	ldd	r25, Y+14	; 0x0e
    5226:	20 e0       	ldi	r18, 0x00	; 0
    5228:	30 e0       	ldi	r19, 0x00	; 0
    522a:	40 e2       	ldi	r20, 0x20	; 32
    522c:	51 e4       	ldi	r21, 0x41	; 65
    522e:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    5232:	dc 01       	movw	r26, r24
    5234:	cb 01       	movw	r24, r22
    5236:	bc 01       	movw	r22, r24
    5238:	cd 01       	movw	r24, r26
    523a:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    523e:	dc 01       	movw	r26, r24
    5240:	cb 01       	movw	r24, r22
    5242:	9e 83       	std	Y+6, r25	; 0x06
    5244:	8d 83       	std	Y+5, r24	; 0x05
    5246:	0f c0       	rjmp	.+30     	; 0x5266 <LCD_enuToSendCommand+0x840>
    5248:	89 e1       	ldi	r24, 0x19	; 25
    524a:	90 e0       	ldi	r25, 0x00	; 0
    524c:	9c 83       	std	Y+4, r25	; 0x04
    524e:	8b 83       	std	Y+3, r24	; 0x03
    5250:	8b 81       	ldd	r24, Y+3	; 0x03
    5252:	9c 81       	ldd	r25, Y+4	; 0x04
    5254:	01 97       	sbiw	r24, 0x01	; 1
    5256:	f1 f7       	brne	.-4      	; 0x5254 <LCD_enuToSendCommand+0x82e>
    5258:	9c 83       	std	Y+4, r25	; 0x04
    525a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    525c:	8d 81       	ldd	r24, Y+5	; 0x05
    525e:	9e 81       	ldd	r25, Y+6	; 0x06
    5260:	01 97       	sbiw	r24, 0x01	; 1
    5262:	9e 83       	std	Y+6, r25	; 0x06
    5264:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5266:	8d 81       	ldd	r24, Y+5	; 0x05
    5268:	9e 81       	ldd	r25, Y+6	; 0x06
    526a:	00 97       	sbiw	r24, 0x00	; 0
    526c:	69 f7       	brne	.-38     	; 0x5248 <LCD_enuToSendCommand+0x822>
    526e:	14 c0       	rjmp	.+40     	; 0x5298 <LCD_enuToSendCommand+0x872>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5270:	6f 81       	ldd	r22, Y+7	; 0x07
    5272:	78 85       	ldd	r23, Y+8	; 0x08
    5274:	89 85       	ldd	r24, Y+9	; 0x09
    5276:	9a 85       	ldd	r25, Y+10	; 0x0a
    5278:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    527c:	dc 01       	movw	r26, r24
    527e:	cb 01       	movw	r24, r22
    5280:	9e 83       	std	Y+6, r25	; 0x06
    5282:	8d 83       	std	Y+5, r24	; 0x05
    5284:	8d 81       	ldd	r24, Y+5	; 0x05
    5286:	9e 81       	ldd	r25, Y+6	; 0x06
    5288:	9a 83       	std	Y+2, r25	; 0x02
    528a:	89 83       	std	Y+1, r24	; 0x01
    528c:	89 81       	ldd	r24, Y+1	; 0x01
    528e:	9a 81       	ldd	r25, Y+2	; 0x02
    5290:	01 97       	sbiw	r24, 0x01	; 1
    5292:	f1 f7       	brne	.-4      	; 0x5290 <LCD_enuToSendCommand+0x86a>
    5294:	9a 83       	std	Y+2, r25	; 0x02
    5296:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);

	return Local_enuErrorStates;
    5298:	fe 01       	movw	r30, r28
    529a:	eb 5a       	subi	r30, 0xAB	; 171
    529c:	ff 4f       	sbci	r31, 0xFF	; 255
    529e:	80 81       	ld	r24, Z
}
    52a0:	ca 5a       	subi	r28, 0xAA	; 170
    52a2:	df 4f       	sbci	r29, 0xFF	; 255
    52a4:	0f b6       	in	r0, 0x3f	; 63
    52a6:	f8 94       	cli
    52a8:	de bf       	out	0x3e, r29	; 62
    52aa:	0f be       	out	0x3f, r0	; 63
    52ac:	cd bf       	out	0x3d, r28	; 61
    52ae:	cf 91       	pop	r28
    52b0:	df 91       	pop	r29
    52b2:	1f 91       	pop	r17
    52b4:	0f 91       	pop	r16
    52b6:	08 95       	ret

000052b8 <LCD_enuDisplayNumber>:

static inline ES_t LCD_enuDisplayNumber(sint_64 Copy_uint32Data){
    52b8:	af 92       	push	r10
    52ba:	bf 92       	push	r11
    52bc:	cf 92       	push	r12
    52be:	df 92       	push	r13
    52c0:	ef 92       	push	r14
    52c2:	ff 92       	push	r15
    52c4:	0f 93       	push	r16
    52c6:	1f 93       	push	r17
    52c8:	df 93       	push	r29
    52ca:	cf 93       	push	r28
    52cc:	cd b7       	in	r28, 0x3d	; 61
    52ce:	de b7       	in	r29, 0x3e	; 62
    52d0:	ca 56       	subi	r28, 0x6A	; 106
    52d2:	d0 40       	sbci	r29, 0x00	; 0
    52d4:	0f b6       	in	r0, 0x3f	; 63
    52d6:	f8 94       	cli
    52d8:	de bf       	out	0x3e, r29	; 62
    52da:	0f be       	out	0x3f, r0	; 63
    52dc:	cd bf       	out	0x3d, r28	; 61
    52de:	2b 87       	std	Y+11, r18	; 0x0b
    52e0:	3c 87       	std	Y+12, r19	; 0x0c
    52e2:	4d 87       	std	Y+13, r20	; 0x0d
    52e4:	5e 87       	std	Y+14, r21	; 0x0e
    52e6:	6f 87       	std	Y+15, r22	; 0x0f
    52e8:	78 8b       	std	Y+16, r23	; 0x10
    52ea:	89 8b       	std	Y+17, r24	; 0x11
    52ec:	9a 8b       	std	Y+18, r25	; 0x12
	ES_t Local_enuErrorStates = ES_NOK;
    52ee:	81 e0       	ldi	r24, 0x01	; 1
    52f0:	8a 87       	std	Y+10, r24	; 0x0a

	uint_8 Local_uint8Digits = 1;
    52f2:	81 e0       	ldi	r24, 0x01	; 1
    52f4:	89 87       	std	Y+9, r24	; 0x09
	sint_64 Local_uint8Dividor = 10;
    52f6:	8a e0       	ldi	r24, 0x0A	; 10
    52f8:	89 83       	std	Y+1, r24	; 0x01
    52fa:	1a 82       	std	Y+2, r1	; 0x02
    52fc:	1b 82       	std	Y+3, r1	; 0x03
    52fe:	1c 82       	std	Y+4, r1	; 0x04
    5300:	1d 82       	std	Y+5, r1	; 0x05
    5302:	1e 82       	std	Y+6, r1	; 0x06
    5304:	1f 82       	std	Y+7, r1	; 0x07
    5306:	18 86       	std	Y+8, r1	; 0x08

	if(Copy_uint32Data < 0){
    5308:	8a 89       	ldd	r24, Y+18	; 0x12
    530a:	88 23       	and	r24, r24
    530c:	d4 f0       	brlt	.+52     	; 0x5342 <LCD_enuDisplayNumber+0x8a>
    530e:	8a 89       	ldd	r24, Y+18	; 0x12
    5310:	88 23       	and	r24, r24
    5312:	09 f0       	breq	.+2      	; 0x5316 <LCD_enuDisplayNumber+0x5e>
    5314:	38 c3       	rjmp	.+1648   	; 0x5986 <LCD_enuDisplayNumber+0x6ce>
    5316:	89 89       	ldd	r24, Y+17	; 0x11
    5318:	88 23       	and	r24, r24
    531a:	09 f0       	breq	.+2      	; 0x531e <LCD_enuDisplayNumber+0x66>
    531c:	34 c3       	rjmp	.+1640   	; 0x5986 <LCD_enuDisplayNumber+0x6ce>
    531e:	88 89       	ldd	r24, Y+16	; 0x10
    5320:	88 23       	and	r24, r24
    5322:	09 f0       	breq	.+2      	; 0x5326 <LCD_enuDisplayNumber+0x6e>
    5324:	30 c3       	rjmp	.+1632   	; 0x5986 <LCD_enuDisplayNumber+0x6ce>
    5326:	8f 85       	ldd	r24, Y+15	; 0x0f
    5328:	88 23       	and	r24, r24
    532a:	09 f0       	breq	.+2      	; 0x532e <LCD_enuDisplayNumber+0x76>
    532c:	2c c3       	rjmp	.+1624   	; 0x5986 <LCD_enuDisplayNumber+0x6ce>
    532e:	8e 85       	ldd	r24, Y+14	; 0x0e
    5330:	88 23       	and	r24, r24
    5332:	09 f0       	breq	.+2      	; 0x5336 <LCD_enuDisplayNumber+0x7e>
    5334:	28 c3       	rjmp	.+1616   	; 0x5986 <LCD_enuDisplayNumber+0x6ce>
    5336:	8d 85       	ldd	r24, Y+13	; 0x0d
    5338:	88 23       	and	r24, r24
    533a:	09 f0       	breq	.+2      	; 0x533e <LCD_enuDisplayNumber+0x86>
    533c:	24 c3       	rjmp	.+1608   	; 0x5986 <LCD_enuDisplayNumber+0x6ce>
    533e:	8c 85       	ldd	r24, Y+12	; 0x0c
    5340:	22 c3       	rjmp	.+1604   	; 0x5986 <LCD_enuDisplayNumber+0x6ce>
		Local_enuErrorStates = LCD_enuSendData('-');
    5342:	8d e2       	ldi	r24, 0x2D	; 45
    5344:	0e 94 b1 22 	call	0x4562	; 0x4562 <LCD_enuSendData>
    5348:	8a 87       	std	Y+10, r24	; 0x0a
		Copy_uint32Data *= -1;
    534a:	1c 8a       	std	Y+20, r1	; 0x14
    534c:	1d 8a       	std	Y+21, r1	; 0x15
    534e:	1e 8a       	std	Y+22, r1	; 0x16
    5350:	1f 8a       	std	Y+23, r1	; 0x17
    5352:	18 8e       	std	Y+24, r1	; 0x18
    5354:	19 8e       	std	Y+25, r1	; 0x19
    5356:	1a 8e       	std	Y+26, r1	; 0x1a
    5358:	1b 8e       	std	Y+27, r1	; 0x1b
    535a:	9b 85       	ldd	r25, Y+11	; 0x0b
    535c:	9c 8f       	std	Y+28, r25	; 0x1c
    535e:	8c 85       	ldd	r24, Y+12	; 0x0c
    5360:	8d 8f       	std	Y+29, r24	; 0x1d
    5362:	9d 85       	ldd	r25, Y+13	; 0x0d
    5364:	9e 8f       	std	Y+30, r25	; 0x1e
    5366:	8e 85       	ldd	r24, Y+14	; 0x0e
    5368:	8f 8f       	std	Y+31, r24	; 0x1f
    536a:	9f 85       	ldd	r25, Y+15	; 0x0f
    536c:	98 a3       	std	Y+32, r25	; 0x20
    536e:	88 89       	ldd	r24, Y+16	; 0x10
    5370:	89 a3       	std	Y+33, r24	; 0x21
    5372:	99 89       	ldd	r25, Y+17	; 0x11
    5374:	9a a3       	std	Y+34, r25	; 0x22
    5376:	8a 89       	ldd	r24, Y+18	; 0x12
    5378:	8b a3       	std	Y+35, r24	; 0x23
    537a:	9c 89       	ldd	r25, Y+20	; 0x14
    537c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    537e:	98 1b       	sub	r25, r24
    5380:	9c a3       	std	Y+36, r25	; 0x24
    5382:	91 e0       	ldi	r25, 0x01	; 1
    5384:	9c a7       	std	Y+44, r25	; 0x2c
    5386:	8c a1       	ldd	r24, Y+36	; 0x24
    5388:	9c 89       	ldd	r25, Y+20	; 0x14
    538a:	98 17       	cp	r25, r24
    538c:	08 f0       	brcs	.+2      	; 0x5390 <LCD_enuDisplayNumber+0xd8>
    538e:	1c a6       	std	Y+44, r1	; 0x2c
    5390:	8d 89       	ldd	r24, Y+21	; 0x15
    5392:	9d 8d       	ldd	r25, Y+29	; 0x1d
    5394:	89 1b       	sub	r24, r25
    5396:	8d a3       	std	Y+37, r24	; 0x25
    5398:	81 e0       	ldi	r24, 0x01	; 1
    539a:	8d a7       	std	Y+45, r24	; 0x2d
    539c:	9d a1       	ldd	r25, Y+37	; 0x25
    539e:	8d 89       	ldd	r24, Y+21	; 0x15
    53a0:	89 17       	cp	r24, r25
    53a2:	08 f0       	brcs	.+2      	; 0x53a6 <LCD_enuDisplayNumber+0xee>
    53a4:	1d a6       	std	Y+45, r1	; 0x2d
    53a6:	9d a1       	ldd	r25, Y+37	; 0x25
    53a8:	8c a5       	ldd	r24, Y+44	; 0x2c
    53aa:	98 1b       	sub	r25, r24
    53ac:	9e a7       	std	Y+46, r25	; 0x2e
    53ae:	91 e0       	ldi	r25, 0x01	; 1
    53b0:	9f a7       	std	Y+47, r25	; 0x2f
    53b2:	8e a5       	ldd	r24, Y+46	; 0x2e
    53b4:	9d a1       	ldd	r25, Y+37	; 0x25
    53b6:	98 17       	cp	r25, r24
    53b8:	08 f0       	brcs	.+2      	; 0x53bc <LCD_enuDisplayNumber+0x104>
    53ba:	1f a6       	std	Y+47, r1	; 0x2f
    53bc:	8d a5       	ldd	r24, Y+45	; 0x2d
    53be:	9f a5       	ldd	r25, Y+47	; 0x2f
    53c0:	89 2b       	or	r24, r25
    53c2:	8d a7       	std	Y+45, r24	; 0x2d
    53c4:	8e a5       	ldd	r24, Y+46	; 0x2e
    53c6:	8d a3       	std	Y+37, r24	; 0x25
    53c8:	9e 89       	ldd	r25, Y+22	; 0x16
    53ca:	8e 8d       	ldd	r24, Y+30	; 0x1e
    53cc:	98 1b       	sub	r25, r24
    53ce:	9e a3       	std	Y+38, r25	; 0x26
    53d0:	91 e0       	ldi	r25, 0x01	; 1
    53d2:	98 ab       	std	Y+48, r25	; 0x30
    53d4:	8e a1       	ldd	r24, Y+38	; 0x26
    53d6:	9e 89       	ldd	r25, Y+22	; 0x16
    53d8:	98 17       	cp	r25, r24
    53da:	08 f0       	brcs	.+2      	; 0x53de <LCD_enuDisplayNumber+0x126>
    53dc:	18 aa       	std	Y+48, r1	; 0x30
    53de:	8e a1       	ldd	r24, Y+38	; 0x26
    53e0:	9d a5       	ldd	r25, Y+45	; 0x2d
    53e2:	89 1b       	sub	r24, r25
    53e4:	89 ab       	std	Y+49, r24	; 0x31
    53e6:	81 e0       	ldi	r24, 0x01	; 1
    53e8:	8a ab       	std	Y+50, r24	; 0x32
    53ea:	99 a9       	ldd	r25, Y+49	; 0x31
    53ec:	8e a1       	ldd	r24, Y+38	; 0x26
    53ee:	89 17       	cp	r24, r25
    53f0:	08 f0       	brcs	.+2      	; 0x53f4 <LCD_enuDisplayNumber+0x13c>
    53f2:	1a aa       	std	Y+50, r1	; 0x32
    53f4:	98 a9       	ldd	r25, Y+48	; 0x30
    53f6:	8a a9       	ldd	r24, Y+50	; 0x32
    53f8:	98 2b       	or	r25, r24
    53fa:	98 ab       	std	Y+48, r25	; 0x30
    53fc:	99 a9       	ldd	r25, Y+49	; 0x31
    53fe:	9e a3       	std	Y+38, r25	; 0x26
    5400:	8f 89       	ldd	r24, Y+23	; 0x17
    5402:	9f 8d       	ldd	r25, Y+31	; 0x1f
    5404:	89 1b       	sub	r24, r25
    5406:	8f a3       	std	Y+39, r24	; 0x27
    5408:	81 e0       	ldi	r24, 0x01	; 1
    540a:	8b ab       	std	Y+51, r24	; 0x33
    540c:	9f a1       	ldd	r25, Y+39	; 0x27
    540e:	8f 89       	ldd	r24, Y+23	; 0x17
    5410:	89 17       	cp	r24, r25
    5412:	08 f0       	brcs	.+2      	; 0x5416 <LCD_enuDisplayNumber+0x15e>
    5414:	1b aa       	std	Y+51, r1	; 0x33
    5416:	9f a1       	ldd	r25, Y+39	; 0x27
    5418:	88 a9       	ldd	r24, Y+48	; 0x30
    541a:	98 1b       	sub	r25, r24
    541c:	9c ab       	std	Y+52, r25	; 0x34
    541e:	91 e0       	ldi	r25, 0x01	; 1
    5420:	9d ab       	std	Y+53, r25	; 0x35
    5422:	8c a9       	ldd	r24, Y+52	; 0x34
    5424:	9f a1       	ldd	r25, Y+39	; 0x27
    5426:	98 17       	cp	r25, r24
    5428:	08 f0       	brcs	.+2      	; 0x542c <LCD_enuDisplayNumber+0x174>
    542a:	1d aa       	std	Y+53, r1	; 0x35
    542c:	8b a9       	ldd	r24, Y+51	; 0x33
    542e:	9d a9       	ldd	r25, Y+53	; 0x35
    5430:	89 2b       	or	r24, r25
    5432:	8b ab       	std	Y+51, r24	; 0x33
    5434:	8c a9       	ldd	r24, Y+52	; 0x34
    5436:	8f a3       	std	Y+39, r24	; 0x27
    5438:	98 8d       	ldd	r25, Y+24	; 0x18
    543a:	88 a1       	ldd	r24, Y+32	; 0x20
    543c:	98 1b       	sub	r25, r24
    543e:	98 a7       	std	Y+40, r25	; 0x28
    5440:	91 e0       	ldi	r25, 0x01	; 1
    5442:	9e ab       	std	Y+54, r25	; 0x36
    5444:	88 a5       	ldd	r24, Y+40	; 0x28
    5446:	98 8d       	ldd	r25, Y+24	; 0x18
    5448:	98 17       	cp	r25, r24
    544a:	08 f0       	brcs	.+2      	; 0x544e <LCD_enuDisplayNumber+0x196>
    544c:	1e aa       	std	Y+54, r1	; 0x36
    544e:	88 a5       	ldd	r24, Y+40	; 0x28
    5450:	9b a9       	ldd	r25, Y+51	; 0x33
    5452:	89 1b       	sub	r24, r25
    5454:	8f ab       	std	Y+55, r24	; 0x37
    5456:	81 e0       	ldi	r24, 0x01	; 1
    5458:	88 af       	std	Y+56, r24	; 0x38
    545a:	9f a9       	ldd	r25, Y+55	; 0x37
    545c:	88 a5       	ldd	r24, Y+40	; 0x28
    545e:	89 17       	cp	r24, r25
    5460:	08 f0       	brcs	.+2      	; 0x5464 <LCD_enuDisplayNumber+0x1ac>
    5462:	18 ae       	std	Y+56, r1	; 0x38
    5464:	9e a9       	ldd	r25, Y+54	; 0x36
    5466:	88 ad       	ldd	r24, Y+56	; 0x38
    5468:	98 2b       	or	r25, r24
    546a:	9e ab       	std	Y+54, r25	; 0x36
    546c:	9f a9       	ldd	r25, Y+55	; 0x37
    546e:	98 a7       	std	Y+40, r25	; 0x28
    5470:	89 8d       	ldd	r24, Y+25	; 0x19
    5472:	99 a1       	ldd	r25, Y+33	; 0x21
    5474:	89 1b       	sub	r24, r25
    5476:	89 a7       	std	Y+41, r24	; 0x29
    5478:	81 e0       	ldi	r24, 0x01	; 1
    547a:	89 af       	std	Y+57, r24	; 0x39
    547c:	99 a5       	ldd	r25, Y+41	; 0x29
    547e:	89 8d       	ldd	r24, Y+25	; 0x19
    5480:	89 17       	cp	r24, r25
    5482:	08 f0       	brcs	.+2      	; 0x5486 <LCD_enuDisplayNumber+0x1ce>
    5484:	19 ae       	std	Y+57, r1	; 0x39
    5486:	99 a5       	ldd	r25, Y+41	; 0x29
    5488:	8e a9       	ldd	r24, Y+54	; 0x36
    548a:	98 1b       	sub	r25, r24
    548c:	9a af       	std	Y+58, r25	; 0x3a
    548e:	91 e0       	ldi	r25, 0x01	; 1
    5490:	9b af       	std	Y+59, r25	; 0x3b
    5492:	8a ad       	ldd	r24, Y+58	; 0x3a
    5494:	99 a5       	ldd	r25, Y+41	; 0x29
    5496:	98 17       	cp	r25, r24
    5498:	08 f0       	brcs	.+2      	; 0x549c <LCD_enuDisplayNumber+0x1e4>
    549a:	1b ae       	std	Y+59, r1	; 0x3b
    549c:	89 ad       	ldd	r24, Y+57	; 0x39
    549e:	9b ad       	ldd	r25, Y+59	; 0x3b
    54a0:	89 2b       	or	r24, r25
    54a2:	89 af       	std	Y+57, r24	; 0x39
    54a4:	8a ad       	ldd	r24, Y+58	; 0x3a
    54a6:	89 a7       	std	Y+41, r24	; 0x29
    54a8:	9a 8d       	ldd	r25, Y+26	; 0x1a
    54aa:	8a a1       	ldd	r24, Y+34	; 0x22
    54ac:	98 1b       	sub	r25, r24
    54ae:	9a a7       	std	Y+42, r25	; 0x2a
    54b0:	91 e0       	ldi	r25, 0x01	; 1
    54b2:	9c af       	std	Y+60, r25	; 0x3c
    54b4:	8a a5       	ldd	r24, Y+42	; 0x2a
    54b6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    54b8:	98 17       	cp	r25, r24
    54ba:	08 f0       	brcs	.+2      	; 0x54be <LCD_enuDisplayNumber+0x206>
    54bc:	1c ae       	std	Y+60, r1	; 0x3c
    54be:	8a a5       	ldd	r24, Y+42	; 0x2a
    54c0:	99 ad       	ldd	r25, Y+57	; 0x39
    54c2:	89 1b       	sub	r24, r25
    54c4:	8d af       	std	Y+61, r24	; 0x3d
    54c6:	81 e0       	ldi	r24, 0x01	; 1
    54c8:	8e af       	std	Y+62, r24	; 0x3e
    54ca:	9d ad       	ldd	r25, Y+61	; 0x3d
    54cc:	8a a5       	ldd	r24, Y+42	; 0x2a
    54ce:	89 17       	cp	r24, r25
    54d0:	08 f0       	brcs	.+2      	; 0x54d4 <LCD_enuDisplayNumber+0x21c>
    54d2:	1e ae       	std	Y+62, r1	; 0x3e
    54d4:	9c ad       	ldd	r25, Y+60	; 0x3c
    54d6:	8e ad       	ldd	r24, Y+62	; 0x3e
    54d8:	98 2b       	or	r25, r24
    54da:	9c af       	std	Y+60, r25	; 0x3c
    54dc:	9d ad       	ldd	r25, Y+61	; 0x3d
    54de:	9a a7       	std	Y+42, r25	; 0x2a
    54e0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    54e2:	9b a1       	ldd	r25, Y+35	; 0x23
    54e4:	89 1b       	sub	r24, r25
    54e6:	8b a7       	std	Y+43, r24	; 0x2b
    54e8:	8b a5       	ldd	r24, Y+43	; 0x2b
    54ea:	9c ad       	ldd	r25, Y+60	; 0x3c
    54ec:	89 1b       	sub	r24, r25
    54ee:	8b a7       	std	Y+43, r24	; 0x2b
    54f0:	8c a1       	ldd	r24, Y+36	; 0x24
    54f2:	8b 87       	std	Y+11, r24	; 0x0b
    54f4:	9d a1       	ldd	r25, Y+37	; 0x25
    54f6:	9c 87       	std	Y+12, r25	; 0x0c
    54f8:	8e a1       	ldd	r24, Y+38	; 0x26
    54fa:	8d 87       	std	Y+13, r24	; 0x0d
    54fc:	9f a1       	ldd	r25, Y+39	; 0x27
    54fe:	9e 87       	std	Y+14, r25	; 0x0e
    5500:	88 a5       	ldd	r24, Y+40	; 0x28
    5502:	8f 87       	std	Y+15, r24	; 0x0f
    5504:	99 a5       	ldd	r25, Y+41	; 0x29
    5506:	98 8b       	std	Y+16, r25	; 0x10
    5508:	8a a5       	ldd	r24, Y+42	; 0x2a
    550a:	89 8b       	std	Y+17, r24	; 0x11
    550c:	9b a5       	ldd	r25, Y+43	; 0x2b
    550e:	9a 8b       	std	Y+18, r25	; 0x12
    5510:	3a c2       	rjmp	.+1140   	; 0x5986 <LCD_enuDisplayNumber+0x6ce>
	}

	while(Copy_uint32Data / Local_uint8Dividor){
		Local_uint8Dividor *= 10;
    5512:	29 81       	ldd	r18, Y+1	; 0x01
    5514:	3a 81       	ldd	r19, Y+2	; 0x02
    5516:	4b 81       	ldd	r20, Y+3	; 0x03
    5518:	5c 81       	ldd	r21, Y+4	; 0x04
    551a:	6d 81       	ldd	r22, Y+5	; 0x05
    551c:	7e 81       	ldd	r23, Y+6	; 0x06
    551e:	8f 81       	ldd	r24, Y+7	; 0x07
    5520:	98 85       	ldd	r25, Y+8	; 0x08
    5522:	a2 2e       	mov	r10, r18
    5524:	b3 2e       	mov	r11, r19
    5526:	c4 2e       	mov	r12, r20
    5528:	d5 2e       	mov	r13, r21
    552a:	e6 2e       	mov	r14, r22
    552c:	f7 2e       	mov	r15, r23
    552e:	08 2f       	mov	r16, r24
    5530:	19 2f       	mov	r17, r25
    5532:	2a 2d       	mov	r18, r10
    5534:	3b 2d       	mov	r19, r11
    5536:	4c 2d       	mov	r20, r12
    5538:	5d 2d       	mov	r21, r13
    553a:	6e 2d       	mov	r22, r14
    553c:	7f 2d       	mov	r23, r15
    553e:	80 2f       	mov	r24, r16
    5540:	91 2f       	mov	r25, r17
    5542:	01 e0       	ldi	r16, 0x01	; 1
    5544:	0e 94 41 00 	call	0x82	; 0x82 <__ashldi3>
    5548:	2f af       	std	Y+63, r18	; 0x3f
    554a:	21 96       	adiw	r28, 0x01	; 1
    554c:	3f af       	std	Y+63, r19	; 0x3f
    554e:	21 97       	sbiw	r28, 0x01	; 1
    5550:	22 96       	adiw	r28, 0x02	; 2
    5552:	4f af       	std	Y+63, r20	; 0x3f
    5554:	22 97       	sbiw	r28, 0x02	; 2
    5556:	23 96       	adiw	r28, 0x03	; 3
    5558:	5f af       	std	Y+63, r21	; 0x3f
    555a:	23 97       	sbiw	r28, 0x03	; 3
    555c:	24 96       	adiw	r28, 0x04	; 4
    555e:	6f af       	std	Y+63, r22	; 0x3f
    5560:	24 97       	sbiw	r28, 0x04	; 4
    5562:	25 96       	adiw	r28, 0x05	; 5
    5564:	7f af       	std	Y+63, r23	; 0x3f
    5566:	25 97       	sbiw	r28, 0x05	; 5
    5568:	26 96       	adiw	r28, 0x06	; 6
    556a:	8f af       	std	Y+63, r24	; 0x3f
    556c:	26 97       	sbiw	r28, 0x06	; 6
    556e:	27 96       	adiw	r28, 0x07	; 7
    5570:	9f af       	std	Y+63, r25	; 0x3f
    5572:	27 97       	sbiw	r28, 0x07	; 7
    5574:	2f ad       	ldd	r18, Y+63	; 0x3f
    5576:	21 96       	adiw	r28, 0x01	; 1
    5578:	3f ad       	ldd	r19, Y+63	; 0x3f
    557a:	21 97       	sbiw	r28, 0x01	; 1
    557c:	22 96       	adiw	r28, 0x02	; 2
    557e:	4f ad       	ldd	r20, Y+63	; 0x3f
    5580:	22 97       	sbiw	r28, 0x02	; 2
    5582:	23 96       	adiw	r28, 0x03	; 3
    5584:	5f ad       	ldd	r21, Y+63	; 0x3f
    5586:	23 97       	sbiw	r28, 0x03	; 3
    5588:	24 96       	adiw	r28, 0x04	; 4
    558a:	6f ad       	ldd	r22, Y+63	; 0x3f
    558c:	24 97       	sbiw	r28, 0x04	; 4
    558e:	25 96       	adiw	r28, 0x05	; 5
    5590:	7f ad       	ldd	r23, Y+63	; 0x3f
    5592:	25 97       	sbiw	r28, 0x05	; 5
    5594:	26 96       	adiw	r28, 0x06	; 6
    5596:	8f ad       	ldd	r24, Y+63	; 0x3f
    5598:	26 97       	sbiw	r28, 0x06	; 6
    559a:	27 96       	adiw	r28, 0x07	; 7
    559c:	9f ad       	ldd	r25, Y+63	; 0x3f
    559e:	27 97       	sbiw	r28, 0x07	; 7
    55a0:	02 e0       	ldi	r16, 0x02	; 2
    55a2:	0e 94 41 00 	call	0x82	; 0x82 <__ashldi3>
    55a6:	28 96       	adiw	r28, 0x08	; 8
    55a8:	2f af       	std	Y+63, r18	; 0x3f
    55aa:	28 97       	sbiw	r28, 0x08	; 8
    55ac:	29 96       	adiw	r28, 0x09	; 9
    55ae:	3f af       	std	Y+63, r19	; 0x3f
    55b0:	29 97       	sbiw	r28, 0x09	; 9
    55b2:	2a 96       	adiw	r28, 0x0a	; 10
    55b4:	4f af       	std	Y+63, r20	; 0x3f
    55b6:	2a 97       	sbiw	r28, 0x0a	; 10
    55b8:	2b 96       	adiw	r28, 0x0b	; 11
    55ba:	5f af       	std	Y+63, r21	; 0x3f
    55bc:	2b 97       	sbiw	r28, 0x0b	; 11
    55be:	2c 96       	adiw	r28, 0x0c	; 12
    55c0:	6f af       	std	Y+63, r22	; 0x3f
    55c2:	2c 97       	sbiw	r28, 0x0c	; 12
    55c4:	2d 96       	adiw	r28, 0x0d	; 13
    55c6:	7f af       	std	Y+63, r23	; 0x3f
    55c8:	2d 97       	sbiw	r28, 0x0d	; 13
    55ca:	2e 96       	adiw	r28, 0x0e	; 14
    55cc:	8f af       	std	Y+63, r24	; 0x3f
    55ce:	2e 97       	sbiw	r28, 0x0e	; 14
    55d0:	2f 96       	adiw	r28, 0x0f	; 15
    55d2:	9f af       	std	Y+63, r25	; 0x3f
    55d4:	2f 97       	sbiw	r28, 0x0f	; 15
    55d6:	8f ad       	ldd	r24, Y+63	; 0x3f
    55d8:	28 96       	adiw	r28, 0x08	; 8
    55da:	9f ad       	ldd	r25, Y+63	; 0x3f
    55dc:	28 97       	sbiw	r28, 0x08	; 8
    55de:	89 0f       	add	r24, r25
    55e0:	60 96       	adiw	r28, 0x10	; 16
    55e2:	8f af       	std	Y+63, r24	; 0x3f
    55e4:	60 97       	sbiw	r28, 0x10	; 16
    55e6:	81 e0       	ldi	r24, 0x01	; 1
    55e8:	68 96       	adiw	r28, 0x18	; 24
    55ea:	8f af       	std	Y+63, r24	; 0x3f
    55ec:	68 97       	sbiw	r28, 0x18	; 24
    55ee:	60 96       	adiw	r28, 0x10	; 16
    55f0:	9f ad       	ldd	r25, Y+63	; 0x3f
    55f2:	60 97       	sbiw	r28, 0x10	; 16
    55f4:	8f ad       	ldd	r24, Y+63	; 0x3f
    55f6:	98 17       	cp	r25, r24
    55f8:	18 f0       	brcs	.+6      	; 0x5600 <LCD_enuDisplayNumber+0x348>
    55fa:	68 96       	adiw	r28, 0x18	; 24
    55fc:	1f ae       	std	Y+63, r1	; 0x3f
    55fe:	68 97       	sbiw	r28, 0x18	; 24
    5600:	21 96       	adiw	r28, 0x01	; 1
    5602:	9f ad       	ldd	r25, Y+63	; 0x3f
    5604:	21 97       	sbiw	r28, 0x01	; 1
    5606:	29 96       	adiw	r28, 0x09	; 9
    5608:	8f ad       	ldd	r24, Y+63	; 0x3f
    560a:	29 97       	sbiw	r28, 0x09	; 9
    560c:	98 0f       	add	r25, r24
    560e:	61 96       	adiw	r28, 0x11	; 17
    5610:	9f af       	std	Y+63, r25	; 0x3f
    5612:	61 97       	sbiw	r28, 0x11	; 17
    5614:	91 e0       	ldi	r25, 0x01	; 1
    5616:	69 96       	adiw	r28, 0x19	; 25
    5618:	9f af       	std	Y+63, r25	; 0x3f
    561a:	69 97       	sbiw	r28, 0x19	; 25
    561c:	61 96       	adiw	r28, 0x11	; 17
    561e:	8f ad       	ldd	r24, Y+63	; 0x3f
    5620:	61 97       	sbiw	r28, 0x11	; 17
    5622:	21 96       	adiw	r28, 0x01	; 1
    5624:	9f ad       	ldd	r25, Y+63	; 0x3f
    5626:	21 97       	sbiw	r28, 0x01	; 1
    5628:	89 17       	cp	r24, r25
    562a:	18 f0       	brcs	.+6      	; 0x5632 <LCD_enuDisplayNumber+0x37a>
    562c:	69 96       	adiw	r28, 0x19	; 25
    562e:	1f ae       	std	Y+63, r1	; 0x3f
    5630:	69 97       	sbiw	r28, 0x19	; 25
    5632:	68 96       	adiw	r28, 0x18	; 24
    5634:	8f ad       	ldd	r24, Y+63	; 0x3f
    5636:	68 97       	sbiw	r28, 0x18	; 24
    5638:	61 96       	adiw	r28, 0x11	; 17
    563a:	9f ad       	ldd	r25, Y+63	; 0x3f
    563c:	61 97       	sbiw	r28, 0x11	; 17
    563e:	89 0f       	add	r24, r25
    5640:	6a 96       	adiw	r28, 0x1a	; 26
    5642:	8f af       	std	Y+63, r24	; 0x3f
    5644:	6a 97       	sbiw	r28, 0x1a	; 26
    5646:	81 e0       	ldi	r24, 0x01	; 1
    5648:	6b 96       	adiw	r28, 0x1b	; 27
    564a:	8f af       	std	Y+63, r24	; 0x3f
    564c:	6b 97       	sbiw	r28, 0x1b	; 27
    564e:	6a 96       	adiw	r28, 0x1a	; 26
    5650:	9f ad       	ldd	r25, Y+63	; 0x3f
    5652:	6a 97       	sbiw	r28, 0x1a	; 26
    5654:	61 96       	adiw	r28, 0x11	; 17
    5656:	8f ad       	ldd	r24, Y+63	; 0x3f
    5658:	61 97       	sbiw	r28, 0x11	; 17
    565a:	98 17       	cp	r25, r24
    565c:	18 f0       	brcs	.+6      	; 0x5664 <LCD_enuDisplayNumber+0x3ac>
    565e:	6b 96       	adiw	r28, 0x1b	; 27
    5660:	1f ae       	std	Y+63, r1	; 0x3f
    5662:	6b 97       	sbiw	r28, 0x1b	; 27
    5664:	69 96       	adiw	r28, 0x19	; 25
    5666:	9f ad       	ldd	r25, Y+63	; 0x3f
    5668:	69 97       	sbiw	r28, 0x19	; 25
    566a:	6b 96       	adiw	r28, 0x1b	; 27
    566c:	8f ad       	ldd	r24, Y+63	; 0x3f
    566e:	6b 97       	sbiw	r28, 0x1b	; 27
    5670:	98 2b       	or	r25, r24
    5672:	69 96       	adiw	r28, 0x19	; 25
    5674:	9f af       	std	Y+63, r25	; 0x3f
    5676:	69 97       	sbiw	r28, 0x19	; 25
    5678:	6a 96       	adiw	r28, 0x1a	; 26
    567a:	9f ad       	ldd	r25, Y+63	; 0x3f
    567c:	6a 97       	sbiw	r28, 0x1a	; 26
    567e:	61 96       	adiw	r28, 0x11	; 17
    5680:	9f af       	std	Y+63, r25	; 0x3f
    5682:	61 97       	sbiw	r28, 0x11	; 17
    5684:	22 96       	adiw	r28, 0x02	; 2
    5686:	8f ad       	ldd	r24, Y+63	; 0x3f
    5688:	22 97       	sbiw	r28, 0x02	; 2
    568a:	2a 96       	adiw	r28, 0x0a	; 10
    568c:	9f ad       	ldd	r25, Y+63	; 0x3f
    568e:	2a 97       	sbiw	r28, 0x0a	; 10
    5690:	89 0f       	add	r24, r25
    5692:	62 96       	adiw	r28, 0x12	; 18
    5694:	8f af       	std	Y+63, r24	; 0x3f
    5696:	62 97       	sbiw	r28, 0x12	; 18
    5698:	81 e0       	ldi	r24, 0x01	; 1
    569a:	6c 96       	adiw	r28, 0x1c	; 28
    569c:	8f af       	std	Y+63, r24	; 0x3f
    569e:	6c 97       	sbiw	r28, 0x1c	; 28
    56a0:	62 96       	adiw	r28, 0x12	; 18
    56a2:	9f ad       	ldd	r25, Y+63	; 0x3f
    56a4:	62 97       	sbiw	r28, 0x12	; 18
    56a6:	22 96       	adiw	r28, 0x02	; 2
    56a8:	8f ad       	ldd	r24, Y+63	; 0x3f
    56aa:	22 97       	sbiw	r28, 0x02	; 2
    56ac:	98 17       	cp	r25, r24
    56ae:	18 f0       	brcs	.+6      	; 0x56b6 <LCD_enuDisplayNumber+0x3fe>
    56b0:	6c 96       	adiw	r28, 0x1c	; 28
    56b2:	1f ae       	std	Y+63, r1	; 0x3f
    56b4:	6c 97       	sbiw	r28, 0x1c	; 28
    56b6:	69 96       	adiw	r28, 0x19	; 25
    56b8:	9f ad       	ldd	r25, Y+63	; 0x3f
    56ba:	69 97       	sbiw	r28, 0x19	; 25
    56bc:	62 96       	adiw	r28, 0x12	; 18
    56be:	8f ad       	ldd	r24, Y+63	; 0x3f
    56c0:	62 97       	sbiw	r28, 0x12	; 18
    56c2:	98 0f       	add	r25, r24
    56c4:	6d 96       	adiw	r28, 0x1d	; 29
    56c6:	9f af       	std	Y+63, r25	; 0x3f
    56c8:	6d 97       	sbiw	r28, 0x1d	; 29
    56ca:	91 e0       	ldi	r25, 0x01	; 1
    56cc:	6e 96       	adiw	r28, 0x1e	; 30
    56ce:	9f af       	std	Y+63, r25	; 0x3f
    56d0:	6e 97       	sbiw	r28, 0x1e	; 30
    56d2:	6d 96       	adiw	r28, 0x1d	; 29
    56d4:	8f ad       	ldd	r24, Y+63	; 0x3f
    56d6:	6d 97       	sbiw	r28, 0x1d	; 29
    56d8:	62 96       	adiw	r28, 0x12	; 18
    56da:	9f ad       	ldd	r25, Y+63	; 0x3f
    56dc:	62 97       	sbiw	r28, 0x12	; 18
    56de:	89 17       	cp	r24, r25
    56e0:	18 f0       	brcs	.+6      	; 0x56e8 <LCD_enuDisplayNumber+0x430>
    56e2:	6e 96       	adiw	r28, 0x1e	; 30
    56e4:	1f ae       	std	Y+63, r1	; 0x3f
    56e6:	6e 97       	sbiw	r28, 0x1e	; 30
    56e8:	6c 96       	adiw	r28, 0x1c	; 28
    56ea:	8f ad       	ldd	r24, Y+63	; 0x3f
    56ec:	6c 97       	sbiw	r28, 0x1c	; 28
    56ee:	6e 96       	adiw	r28, 0x1e	; 30
    56f0:	9f ad       	ldd	r25, Y+63	; 0x3f
    56f2:	6e 97       	sbiw	r28, 0x1e	; 30
    56f4:	89 2b       	or	r24, r25
    56f6:	6c 96       	adiw	r28, 0x1c	; 28
    56f8:	8f af       	std	Y+63, r24	; 0x3f
    56fa:	6c 97       	sbiw	r28, 0x1c	; 28
    56fc:	6d 96       	adiw	r28, 0x1d	; 29
    56fe:	8f ad       	ldd	r24, Y+63	; 0x3f
    5700:	6d 97       	sbiw	r28, 0x1d	; 29
    5702:	62 96       	adiw	r28, 0x12	; 18
    5704:	8f af       	std	Y+63, r24	; 0x3f
    5706:	62 97       	sbiw	r28, 0x12	; 18
    5708:	23 96       	adiw	r28, 0x03	; 3
    570a:	9f ad       	ldd	r25, Y+63	; 0x3f
    570c:	23 97       	sbiw	r28, 0x03	; 3
    570e:	2b 96       	adiw	r28, 0x0b	; 11
    5710:	8f ad       	ldd	r24, Y+63	; 0x3f
    5712:	2b 97       	sbiw	r28, 0x0b	; 11
    5714:	98 0f       	add	r25, r24
    5716:	63 96       	adiw	r28, 0x13	; 19
    5718:	9f af       	std	Y+63, r25	; 0x3f
    571a:	63 97       	sbiw	r28, 0x13	; 19
    571c:	91 e0       	ldi	r25, 0x01	; 1
    571e:	6f 96       	adiw	r28, 0x1f	; 31
    5720:	9f af       	std	Y+63, r25	; 0x3f
    5722:	6f 97       	sbiw	r28, 0x1f	; 31
    5724:	63 96       	adiw	r28, 0x13	; 19
    5726:	8f ad       	ldd	r24, Y+63	; 0x3f
    5728:	63 97       	sbiw	r28, 0x13	; 19
    572a:	23 96       	adiw	r28, 0x03	; 3
    572c:	9f ad       	ldd	r25, Y+63	; 0x3f
    572e:	23 97       	sbiw	r28, 0x03	; 3
    5730:	89 17       	cp	r24, r25
    5732:	18 f0       	brcs	.+6      	; 0x573a <LCD_enuDisplayNumber+0x482>
    5734:	6f 96       	adiw	r28, 0x1f	; 31
    5736:	1f ae       	std	Y+63, r1	; 0x3f
    5738:	6f 97       	sbiw	r28, 0x1f	; 31
    573a:	6c 96       	adiw	r28, 0x1c	; 28
    573c:	8f ad       	ldd	r24, Y+63	; 0x3f
    573e:	6c 97       	sbiw	r28, 0x1c	; 28
    5740:	63 96       	adiw	r28, 0x13	; 19
    5742:	9f ad       	ldd	r25, Y+63	; 0x3f
    5744:	63 97       	sbiw	r28, 0x13	; 19
    5746:	89 0f       	add	r24, r25
    5748:	a0 96       	adiw	r28, 0x20	; 32
    574a:	8f af       	std	Y+63, r24	; 0x3f
    574c:	a0 97       	sbiw	r28, 0x20	; 32
    574e:	81 e0       	ldi	r24, 0x01	; 1
    5750:	a1 96       	adiw	r28, 0x21	; 33
    5752:	8f af       	std	Y+63, r24	; 0x3f
    5754:	a1 97       	sbiw	r28, 0x21	; 33
    5756:	a0 96       	adiw	r28, 0x20	; 32
    5758:	9f ad       	ldd	r25, Y+63	; 0x3f
    575a:	a0 97       	sbiw	r28, 0x20	; 32
    575c:	63 96       	adiw	r28, 0x13	; 19
    575e:	8f ad       	ldd	r24, Y+63	; 0x3f
    5760:	63 97       	sbiw	r28, 0x13	; 19
    5762:	98 17       	cp	r25, r24
    5764:	18 f0       	brcs	.+6      	; 0x576c <LCD_enuDisplayNumber+0x4b4>
    5766:	a1 96       	adiw	r28, 0x21	; 33
    5768:	1f ae       	std	Y+63, r1	; 0x3f
    576a:	a1 97       	sbiw	r28, 0x21	; 33
    576c:	6f 96       	adiw	r28, 0x1f	; 31
    576e:	9f ad       	ldd	r25, Y+63	; 0x3f
    5770:	6f 97       	sbiw	r28, 0x1f	; 31
    5772:	a1 96       	adiw	r28, 0x21	; 33
    5774:	8f ad       	ldd	r24, Y+63	; 0x3f
    5776:	a1 97       	sbiw	r28, 0x21	; 33
    5778:	98 2b       	or	r25, r24
    577a:	6f 96       	adiw	r28, 0x1f	; 31
    577c:	9f af       	std	Y+63, r25	; 0x3f
    577e:	6f 97       	sbiw	r28, 0x1f	; 31
    5780:	a0 96       	adiw	r28, 0x20	; 32
    5782:	9f ad       	ldd	r25, Y+63	; 0x3f
    5784:	a0 97       	sbiw	r28, 0x20	; 32
    5786:	63 96       	adiw	r28, 0x13	; 19
    5788:	9f af       	std	Y+63, r25	; 0x3f
    578a:	63 97       	sbiw	r28, 0x13	; 19
    578c:	24 96       	adiw	r28, 0x04	; 4
    578e:	8f ad       	ldd	r24, Y+63	; 0x3f
    5790:	24 97       	sbiw	r28, 0x04	; 4
    5792:	2c 96       	adiw	r28, 0x0c	; 12
    5794:	9f ad       	ldd	r25, Y+63	; 0x3f
    5796:	2c 97       	sbiw	r28, 0x0c	; 12
    5798:	89 0f       	add	r24, r25
    579a:	64 96       	adiw	r28, 0x14	; 20
    579c:	8f af       	std	Y+63, r24	; 0x3f
    579e:	64 97       	sbiw	r28, 0x14	; 20
    57a0:	81 e0       	ldi	r24, 0x01	; 1
    57a2:	a2 96       	adiw	r28, 0x22	; 34
    57a4:	8f af       	std	Y+63, r24	; 0x3f
    57a6:	a2 97       	sbiw	r28, 0x22	; 34
    57a8:	64 96       	adiw	r28, 0x14	; 20
    57aa:	9f ad       	ldd	r25, Y+63	; 0x3f
    57ac:	64 97       	sbiw	r28, 0x14	; 20
    57ae:	24 96       	adiw	r28, 0x04	; 4
    57b0:	8f ad       	ldd	r24, Y+63	; 0x3f
    57b2:	24 97       	sbiw	r28, 0x04	; 4
    57b4:	98 17       	cp	r25, r24
    57b6:	18 f0       	brcs	.+6      	; 0x57be <LCD_enuDisplayNumber+0x506>
    57b8:	a2 96       	adiw	r28, 0x22	; 34
    57ba:	1f ae       	std	Y+63, r1	; 0x3f
    57bc:	a2 97       	sbiw	r28, 0x22	; 34
    57be:	6f 96       	adiw	r28, 0x1f	; 31
    57c0:	9f ad       	ldd	r25, Y+63	; 0x3f
    57c2:	6f 97       	sbiw	r28, 0x1f	; 31
    57c4:	64 96       	adiw	r28, 0x14	; 20
    57c6:	8f ad       	ldd	r24, Y+63	; 0x3f
    57c8:	64 97       	sbiw	r28, 0x14	; 20
    57ca:	98 0f       	add	r25, r24
    57cc:	a3 96       	adiw	r28, 0x23	; 35
    57ce:	9f af       	std	Y+63, r25	; 0x3f
    57d0:	a3 97       	sbiw	r28, 0x23	; 35
    57d2:	91 e0       	ldi	r25, 0x01	; 1
    57d4:	a4 96       	adiw	r28, 0x24	; 36
    57d6:	9f af       	std	Y+63, r25	; 0x3f
    57d8:	a4 97       	sbiw	r28, 0x24	; 36
    57da:	a3 96       	adiw	r28, 0x23	; 35
    57dc:	8f ad       	ldd	r24, Y+63	; 0x3f
    57de:	a3 97       	sbiw	r28, 0x23	; 35
    57e0:	64 96       	adiw	r28, 0x14	; 20
    57e2:	9f ad       	ldd	r25, Y+63	; 0x3f
    57e4:	64 97       	sbiw	r28, 0x14	; 20
    57e6:	89 17       	cp	r24, r25
    57e8:	18 f0       	brcs	.+6      	; 0x57f0 <LCD_enuDisplayNumber+0x538>
    57ea:	a4 96       	adiw	r28, 0x24	; 36
    57ec:	1f ae       	std	Y+63, r1	; 0x3f
    57ee:	a4 97       	sbiw	r28, 0x24	; 36
    57f0:	a2 96       	adiw	r28, 0x22	; 34
    57f2:	8f ad       	ldd	r24, Y+63	; 0x3f
    57f4:	a2 97       	sbiw	r28, 0x22	; 34
    57f6:	a4 96       	adiw	r28, 0x24	; 36
    57f8:	9f ad       	ldd	r25, Y+63	; 0x3f
    57fa:	a4 97       	sbiw	r28, 0x24	; 36
    57fc:	89 2b       	or	r24, r25
    57fe:	a2 96       	adiw	r28, 0x22	; 34
    5800:	8f af       	std	Y+63, r24	; 0x3f
    5802:	a2 97       	sbiw	r28, 0x22	; 34
    5804:	a3 96       	adiw	r28, 0x23	; 35
    5806:	8f ad       	ldd	r24, Y+63	; 0x3f
    5808:	a3 97       	sbiw	r28, 0x23	; 35
    580a:	64 96       	adiw	r28, 0x14	; 20
    580c:	8f af       	std	Y+63, r24	; 0x3f
    580e:	64 97       	sbiw	r28, 0x14	; 20
    5810:	25 96       	adiw	r28, 0x05	; 5
    5812:	9f ad       	ldd	r25, Y+63	; 0x3f
    5814:	25 97       	sbiw	r28, 0x05	; 5
    5816:	2d 96       	adiw	r28, 0x0d	; 13
    5818:	8f ad       	ldd	r24, Y+63	; 0x3f
    581a:	2d 97       	sbiw	r28, 0x0d	; 13
    581c:	98 0f       	add	r25, r24
    581e:	65 96       	adiw	r28, 0x15	; 21
    5820:	9f af       	std	Y+63, r25	; 0x3f
    5822:	65 97       	sbiw	r28, 0x15	; 21
    5824:	91 e0       	ldi	r25, 0x01	; 1
    5826:	a5 96       	adiw	r28, 0x25	; 37
    5828:	9f af       	std	Y+63, r25	; 0x3f
    582a:	a5 97       	sbiw	r28, 0x25	; 37
    582c:	65 96       	adiw	r28, 0x15	; 21
    582e:	8f ad       	ldd	r24, Y+63	; 0x3f
    5830:	65 97       	sbiw	r28, 0x15	; 21
    5832:	25 96       	adiw	r28, 0x05	; 5
    5834:	9f ad       	ldd	r25, Y+63	; 0x3f
    5836:	25 97       	sbiw	r28, 0x05	; 5
    5838:	89 17       	cp	r24, r25
    583a:	18 f0       	brcs	.+6      	; 0x5842 <LCD_enuDisplayNumber+0x58a>
    583c:	a5 96       	adiw	r28, 0x25	; 37
    583e:	1f ae       	std	Y+63, r1	; 0x3f
    5840:	a5 97       	sbiw	r28, 0x25	; 37
    5842:	a2 96       	adiw	r28, 0x22	; 34
    5844:	8f ad       	ldd	r24, Y+63	; 0x3f
    5846:	a2 97       	sbiw	r28, 0x22	; 34
    5848:	65 96       	adiw	r28, 0x15	; 21
    584a:	9f ad       	ldd	r25, Y+63	; 0x3f
    584c:	65 97       	sbiw	r28, 0x15	; 21
    584e:	89 0f       	add	r24, r25
    5850:	a6 96       	adiw	r28, 0x26	; 38
    5852:	8f af       	std	Y+63, r24	; 0x3f
    5854:	a6 97       	sbiw	r28, 0x26	; 38
    5856:	81 e0       	ldi	r24, 0x01	; 1
    5858:	a7 96       	adiw	r28, 0x27	; 39
    585a:	8f af       	std	Y+63, r24	; 0x3f
    585c:	a7 97       	sbiw	r28, 0x27	; 39
    585e:	a6 96       	adiw	r28, 0x26	; 38
    5860:	9f ad       	ldd	r25, Y+63	; 0x3f
    5862:	a6 97       	sbiw	r28, 0x26	; 38
    5864:	65 96       	adiw	r28, 0x15	; 21
    5866:	8f ad       	ldd	r24, Y+63	; 0x3f
    5868:	65 97       	sbiw	r28, 0x15	; 21
    586a:	98 17       	cp	r25, r24
    586c:	18 f0       	brcs	.+6      	; 0x5874 <LCD_enuDisplayNumber+0x5bc>
    586e:	a7 96       	adiw	r28, 0x27	; 39
    5870:	1f ae       	std	Y+63, r1	; 0x3f
    5872:	a7 97       	sbiw	r28, 0x27	; 39
    5874:	a5 96       	adiw	r28, 0x25	; 37
    5876:	9f ad       	ldd	r25, Y+63	; 0x3f
    5878:	a5 97       	sbiw	r28, 0x25	; 37
    587a:	a7 96       	adiw	r28, 0x27	; 39
    587c:	8f ad       	ldd	r24, Y+63	; 0x3f
    587e:	a7 97       	sbiw	r28, 0x27	; 39
    5880:	98 2b       	or	r25, r24
    5882:	a5 96       	adiw	r28, 0x25	; 37
    5884:	9f af       	std	Y+63, r25	; 0x3f
    5886:	a5 97       	sbiw	r28, 0x25	; 37
    5888:	a6 96       	adiw	r28, 0x26	; 38
    588a:	9f ad       	ldd	r25, Y+63	; 0x3f
    588c:	a6 97       	sbiw	r28, 0x26	; 38
    588e:	65 96       	adiw	r28, 0x15	; 21
    5890:	9f af       	std	Y+63, r25	; 0x3f
    5892:	65 97       	sbiw	r28, 0x15	; 21
    5894:	26 96       	adiw	r28, 0x06	; 6
    5896:	8f ad       	ldd	r24, Y+63	; 0x3f
    5898:	26 97       	sbiw	r28, 0x06	; 6
    589a:	2e 96       	adiw	r28, 0x0e	; 14
    589c:	9f ad       	ldd	r25, Y+63	; 0x3f
    589e:	2e 97       	sbiw	r28, 0x0e	; 14
    58a0:	89 0f       	add	r24, r25
    58a2:	66 96       	adiw	r28, 0x16	; 22
    58a4:	8f af       	std	Y+63, r24	; 0x3f
    58a6:	66 97       	sbiw	r28, 0x16	; 22
    58a8:	81 e0       	ldi	r24, 0x01	; 1
    58aa:	a8 96       	adiw	r28, 0x28	; 40
    58ac:	8f af       	std	Y+63, r24	; 0x3f
    58ae:	a8 97       	sbiw	r28, 0x28	; 40
    58b0:	66 96       	adiw	r28, 0x16	; 22
    58b2:	9f ad       	ldd	r25, Y+63	; 0x3f
    58b4:	66 97       	sbiw	r28, 0x16	; 22
    58b6:	26 96       	adiw	r28, 0x06	; 6
    58b8:	8f ad       	ldd	r24, Y+63	; 0x3f
    58ba:	26 97       	sbiw	r28, 0x06	; 6
    58bc:	98 17       	cp	r25, r24
    58be:	18 f0       	brcs	.+6      	; 0x58c6 <LCD_enuDisplayNumber+0x60e>
    58c0:	a8 96       	adiw	r28, 0x28	; 40
    58c2:	1f ae       	std	Y+63, r1	; 0x3f
    58c4:	a8 97       	sbiw	r28, 0x28	; 40
    58c6:	a5 96       	adiw	r28, 0x25	; 37
    58c8:	9f ad       	ldd	r25, Y+63	; 0x3f
    58ca:	a5 97       	sbiw	r28, 0x25	; 37
    58cc:	66 96       	adiw	r28, 0x16	; 22
    58ce:	8f ad       	ldd	r24, Y+63	; 0x3f
    58d0:	66 97       	sbiw	r28, 0x16	; 22
    58d2:	98 0f       	add	r25, r24
    58d4:	a9 96       	adiw	r28, 0x29	; 41
    58d6:	9f af       	std	Y+63, r25	; 0x3f
    58d8:	a9 97       	sbiw	r28, 0x29	; 41
    58da:	91 e0       	ldi	r25, 0x01	; 1
    58dc:	aa 96       	adiw	r28, 0x2a	; 42
    58de:	9f af       	std	Y+63, r25	; 0x3f
    58e0:	aa 97       	sbiw	r28, 0x2a	; 42
    58e2:	a9 96       	adiw	r28, 0x29	; 41
    58e4:	8f ad       	ldd	r24, Y+63	; 0x3f
    58e6:	a9 97       	sbiw	r28, 0x29	; 41
    58e8:	66 96       	adiw	r28, 0x16	; 22
    58ea:	9f ad       	ldd	r25, Y+63	; 0x3f
    58ec:	66 97       	sbiw	r28, 0x16	; 22
    58ee:	89 17       	cp	r24, r25
    58f0:	18 f0       	brcs	.+6      	; 0x58f8 <LCD_enuDisplayNumber+0x640>
    58f2:	aa 96       	adiw	r28, 0x2a	; 42
    58f4:	1f ae       	std	Y+63, r1	; 0x3f
    58f6:	aa 97       	sbiw	r28, 0x2a	; 42
    58f8:	a8 96       	adiw	r28, 0x28	; 40
    58fa:	8f ad       	ldd	r24, Y+63	; 0x3f
    58fc:	a8 97       	sbiw	r28, 0x28	; 40
    58fe:	aa 96       	adiw	r28, 0x2a	; 42
    5900:	9f ad       	ldd	r25, Y+63	; 0x3f
    5902:	aa 97       	sbiw	r28, 0x2a	; 42
    5904:	89 2b       	or	r24, r25
    5906:	a8 96       	adiw	r28, 0x28	; 40
    5908:	8f af       	std	Y+63, r24	; 0x3f
    590a:	a8 97       	sbiw	r28, 0x28	; 40
    590c:	a9 96       	adiw	r28, 0x29	; 41
    590e:	8f ad       	ldd	r24, Y+63	; 0x3f
    5910:	a9 97       	sbiw	r28, 0x29	; 41
    5912:	66 96       	adiw	r28, 0x16	; 22
    5914:	8f af       	std	Y+63, r24	; 0x3f
    5916:	66 97       	sbiw	r28, 0x16	; 22
    5918:	27 96       	adiw	r28, 0x07	; 7
    591a:	9f ad       	ldd	r25, Y+63	; 0x3f
    591c:	27 97       	sbiw	r28, 0x07	; 7
    591e:	2f 96       	adiw	r28, 0x0f	; 15
    5920:	8f ad       	ldd	r24, Y+63	; 0x3f
    5922:	2f 97       	sbiw	r28, 0x0f	; 15
    5924:	98 0f       	add	r25, r24
    5926:	67 96       	adiw	r28, 0x17	; 23
    5928:	9f af       	std	Y+63, r25	; 0x3f
    592a:	67 97       	sbiw	r28, 0x17	; 23
    592c:	a8 96       	adiw	r28, 0x28	; 40
    592e:	8f ad       	ldd	r24, Y+63	; 0x3f
    5930:	a8 97       	sbiw	r28, 0x28	; 40
    5932:	67 96       	adiw	r28, 0x17	; 23
    5934:	9f ad       	ldd	r25, Y+63	; 0x3f
    5936:	67 97       	sbiw	r28, 0x17	; 23
    5938:	89 0f       	add	r24, r25
    593a:	67 96       	adiw	r28, 0x17	; 23
    593c:	8f af       	std	Y+63, r24	; 0x3f
    593e:	67 97       	sbiw	r28, 0x17	; 23
    5940:	60 96       	adiw	r28, 0x10	; 16
    5942:	8f ad       	ldd	r24, Y+63	; 0x3f
    5944:	60 97       	sbiw	r28, 0x10	; 16
    5946:	89 83       	std	Y+1, r24	; 0x01
    5948:	61 96       	adiw	r28, 0x11	; 17
    594a:	9f ad       	ldd	r25, Y+63	; 0x3f
    594c:	61 97       	sbiw	r28, 0x11	; 17
    594e:	9a 83       	std	Y+2, r25	; 0x02
    5950:	62 96       	adiw	r28, 0x12	; 18
    5952:	8f ad       	ldd	r24, Y+63	; 0x3f
    5954:	62 97       	sbiw	r28, 0x12	; 18
    5956:	8b 83       	std	Y+3, r24	; 0x03
    5958:	63 96       	adiw	r28, 0x13	; 19
    595a:	9f ad       	ldd	r25, Y+63	; 0x3f
    595c:	63 97       	sbiw	r28, 0x13	; 19
    595e:	9c 83       	std	Y+4, r25	; 0x04
    5960:	64 96       	adiw	r28, 0x14	; 20
    5962:	8f ad       	ldd	r24, Y+63	; 0x3f
    5964:	64 97       	sbiw	r28, 0x14	; 20
    5966:	8d 83       	std	Y+5, r24	; 0x05
    5968:	65 96       	adiw	r28, 0x15	; 21
    596a:	9f ad       	ldd	r25, Y+63	; 0x3f
    596c:	65 97       	sbiw	r28, 0x15	; 21
    596e:	9e 83       	std	Y+6, r25	; 0x06
    5970:	66 96       	adiw	r28, 0x16	; 22
    5972:	8f ad       	ldd	r24, Y+63	; 0x3f
    5974:	66 97       	sbiw	r28, 0x16	; 22
    5976:	8f 83       	std	Y+7, r24	; 0x07
    5978:	67 96       	adiw	r28, 0x17	; 23
    597a:	9f ad       	ldd	r25, Y+63	; 0x3f
    597c:	67 97       	sbiw	r28, 0x17	; 23
    597e:	98 87       	std	Y+8, r25	; 0x08
		++Local_uint8Digits;
    5980:	89 85       	ldd	r24, Y+9	; 0x09
    5982:	8f 5f       	subi	r24, 0xFF	; 255
    5984:	89 87       	std	Y+9, r24	; 0x09
	if(Copy_uint32Data < 0){
		Local_enuErrorStates = LCD_enuSendData('-');
		Copy_uint32Data *= -1;
	}

	while(Copy_uint32Data / Local_uint8Dividor){
    5986:	2b 85       	ldd	r18, Y+11	; 0x0b
    5988:	3c 85       	ldd	r19, Y+12	; 0x0c
    598a:	4d 85       	ldd	r20, Y+13	; 0x0d
    598c:	5e 85       	ldd	r21, Y+14	; 0x0e
    598e:	6f 85       	ldd	r22, Y+15	; 0x0f
    5990:	78 89       	ldd	r23, Y+16	; 0x10
    5992:	89 89       	ldd	r24, Y+17	; 0x11
    5994:	9a 89       	ldd	r25, Y+18	; 0x12
    5996:	a9 80       	ldd	r10, Y+1	; 0x01
    5998:	ba 80       	ldd	r11, Y+2	; 0x02
    599a:	cb 80       	ldd	r12, Y+3	; 0x03
    599c:	dc 80       	ldd	r13, Y+4	; 0x04
    599e:	ed 80       	ldd	r14, Y+5	; 0x05
    59a0:	fe 80       	ldd	r15, Y+6	; 0x06
    59a2:	0f 81       	ldd	r16, Y+7	; 0x07
    59a4:	18 85       	ldd	r17, Y+8	; 0x08
    59a6:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <__divdi3>
    59aa:	a2 2e       	mov	r10, r18
    59ac:	b3 2e       	mov	r11, r19
    59ae:	c4 2e       	mov	r12, r20
    59b0:	d5 2e       	mov	r13, r21
    59b2:	e6 2e       	mov	r14, r22
    59b4:	f7 2e       	mov	r15, r23
    59b6:	08 2f       	mov	r16, r24
    59b8:	19 2f       	mov	r17, r25
    59ba:	2a 2d       	mov	r18, r10
    59bc:	3b 2d       	mov	r19, r11
    59be:	4c 2d       	mov	r20, r12
    59c0:	5d 2d       	mov	r21, r13
    59c2:	6e 2d       	mov	r22, r14
    59c4:	7f 2d       	mov	r23, r15
    59c6:	80 2f       	mov	r24, r16
    59c8:	91 2f       	mov	r25, r17
    59ca:	e2 2f       	mov	r30, r18
    59cc:	e3 2b       	or	r30, r19
    59ce:	e4 2b       	or	r30, r20
    59d0:	e5 2b       	or	r30, r21
    59d2:	e6 2b       	or	r30, r22
    59d4:	e7 2b       	or	r30, r23
    59d6:	e8 2b       	or	r30, r24
    59d8:	e9 2b       	or	r30, r25
    59da:	ee 23       	and	r30, r30
    59dc:	09 f0       	breq	.+2      	; 0x59e0 <LCD_enuDisplayNumber+0x728>
    59de:	99 cd       	rjmp	.-1230   	; 0x5512 <LCD_enuDisplayNumber+0x25a>
    59e0:	7e c0       	rjmp	.+252    	; 0x5ade <LCD_enuDisplayNumber+0x826>
		Local_uint8Dividor *= 10;
		++Local_uint8Digits;
	}

	while(Local_uint8Digits--){
		Local_uint8Dividor /= 10;
    59e2:	a9 80       	ldd	r10, Y+1	; 0x01
    59e4:	ba 80       	ldd	r11, Y+2	; 0x02
    59e6:	cb 80       	ldd	r12, Y+3	; 0x03
    59e8:	dc 80       	ldd	r13, Y+4	; 0x04
    59ea:	ed 80       	ldd	r14, Y+5	; 0x05
    59ec:	fe 80       	ldd	r15, Y+6	; 0x06
    59ee:	0f 81       	ldd	r16, Y+7	; 0x07
    59f0:	18 85       	ldd	r17, Y+8	; 0x08
    59f2:	2a 2d       	mov	r18, r10
    59f4:	3b 2d       	mov	r19, r11
    59f6:	4c 2d       	mov	r20, r12
    59f8:	5d 2d       	mov	r21, r13
    59fa:	6e 2d       	mov	r22, r14
    59fc:	7f 2d       	mov	r23, r15
    59fe:	80 2f       	mov	r24, r16
    5a00:	91 2f       	mov	r25, r17
    5a02:	0f 2e       	mov	r0, r31
    5a04:	fa e0       	ldi	r31, 0x0A	; 10
    5a06:	af 2e       	mov	r10, r31
    5a08:	f0 2d       	mov	r31, r0
    5a0a:	bb 24       	eor	r11, r11
    5a0c:	cc 24       	eor	r12, r12
    5a0e:	dd 24       	eor	r13, r13
    5a10:	ee 24       	eor	r14, r14
    5a12:	ff 24       	eor	r15, r15
    5a14:	00 e0       	ldi	r16, 0x00	; 0
    5a16:	10 e0       	ldi	r17, 0x00	; 0
    5a18:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <__divdi3>
    5a1c:	a2 2e       	mov	r10, r18
    5a1e:	b3 2e       	mov	r11, r19
    5a20:	c4 2e       	mov	r12, r20
    5a22:	d5 2e       	mov	r13, r21
    5a24:	e6 2e       	mov	r14, r22
    5a26:	f7 2e       	mov	r15, r23
    5a28:	08 2f       	mov	r16, r24
    5a2a:	19 2f       	mov	r17, r25
    5a2c:	a9 82       	std	Y+1, r10	; 0x01
    5a2e:	ba 82       	std	Y+2, r11	; 0x02
    5a30:	cb 82       	std	Y+3, r12	; 0x03
    5a32:	dc 82       	std	Y+4, r13	; 0x04
    5a34:	ed 82       	std	Y+5, r14	; 0x05
    5a36:	fe 82       	std	Y+6, r15	; 0x06
    5a38:	0f 83       	std	Y+7, r16	; 0x07
    5a3a:	18 87       	std	Y+8, r17	; 0x08
		Local_enuErrorStates = LCD_enuSendData('0' + (Copy_uint32Data / Local_uint8Dividor));
    5a3c:	2b 85       	ldd	r18, Y+11	; 0x0b
    5a3e:	3c 85       	ldd	r19, Y+12	; 0x0c
    5a40:	4d 85       	ldd	r20, Y+13	; 0x0d
    5a42:	5e 85       	ldd	r21, Y+14	; 0x0e
    5a44:	6f 85       	ldd	r22, Y+15	; 0x0f
    5a46:	78 89       	ldd	r23, Y+16	; 0x10
    5a48:	89 89       	ldd	r24, Y+17	; 0x11
    5a4a:	9a 89       	ldd	r25, Y+18	; 0x12
    5a4c:	a9 80       	ldd	r10, Y+1	; 0x01
    5a4e:	ba 80       	ldd	r11, Y+2	; 0x02
    5a50:	cb 80       	ldd	r12, Y+3	; 0x03
    5a52:	dc 80       	ldd	r13, Y+4	; 0x04
    5a54:	ed 80       	ldd	r14, Y+5	; 0x05
    5a56:	fe 80       	ldd	r15, Y+6	; 0x06
    5a58:	0f 81       	ldd	r16, Y+7	; 0x07
    5a5a:	18 85       	ldd	r17, Y+8	; 0x08
    5a5c:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <__divdi3>
    5a60:	a2 2e       	mov	r10, r18
    5a62:	b3 2e       	mov	r11, r19
    5a64:	c4 2e       	mov	r12, r20
    5a66:	d5 2e       	mov	r13, r21
    5a68:	e6 2e       	mov	r14, r22
    5a6a:	f7 2e       	mov	r15, r23
    5a6c:	08 2f       	mov	r16, r24
    5a6e:	19 2f       	mov	r17, r25
    5a70:	2a 2d       	mov	r18, r10
    5a72:	3b 2d       	mov	r19, r11
    5a74:	4c 2d       	mov	r20, r12
    5a76:	5d 2d       	mov	r21, r13
    5a78:	6e 2d       	mov	r22, r14
    5a7a:	7f 2d       	mov	r23, r15
    5a7c:	80 2f       	mov	r24, r16
    5a7e:	91 2f       	mov	r25, r17
    5a80:	82 2f       	mov	r24, r18
    5a82:	80 5d       	subi	r24, 0xD0	; 208
    5a84:	0e 94 b1 22 	call	0x4562	; 0x4562 <LCD_enuSendData>
    5a88:	8a 87       	std	Y+10, r24	; 0x0a
		Copy_uint32Data -= ((Copy_uint32Data / Local_uint8Dividor) * Local_uint8Dividor);
    5a8a:	ab 84       	ldd	r10, Y+11	; 0x0b
    5a8c:	bc 84       	ldd	r11, Y+12	; 0x0c
    5a8e:	cd 84       	ldd	r12, Y+13	; 0x0d
    5a90:	de 84       	ldd	r13, Y+14	; 0x0e
    5a92:	ef 84       	ldd	r14, Y+15	; 0x0f
    5a94:	f8 88       	ldd	r15, Y+16	; 0x10
    5a96:	09 89       	ldd	r16, Y+17	; 0x11
    5a98:	1a 89       	ldd	r17, Y+18	; 0x12
    5a9a:	2a 2d       	mov	r18, r10
    5a9c:	3b 2d       	mov	r19, r11
    5a9e:	4c 2d       	mov	r20, r12
    5aa0:	5d 2d       	mov	r21, r13
    5aa2:	6e 2d       	mov	r22, r14
    5aa4:	7f 2d       	mov	r23, r15
    5aa6:	80 2f       	mov	r24, r16
    5aa8:	91 2f       	mov	r25, r17
    5aaa:	a9 80       	ldd	r10, Y+1	; 0x01
    5aac:	ba 80       	ldd	r11, Y+2	; 0x02
    5aae:	cb 80       	ldd	r12, Y+3	; 0x03
    5ab0:	dc 80       	ldd	r13, Y+4	; 0x04
    5ab2:	ed 80       	ldd	r14, Y+5	; 0x05
    5ab4:	fe 80       	ldd	r15, Y+6	; 0x06
    5ab6:	0f 81       	ldd	r16, Y+7	; 0x07
    5ab8:	18 85       	ldd	r17, Y+8	; 0x08
    5aba:	0e 94 0c 0b 	call	0x1618	; 0x1618 <__moddi3>
    5abe:	a2 2e       	mov	r10, r18
    5ac0:	b3 2e       	mov	r11, r19
    5ac2:	c4 2e       	mov	r12, r20
    5ac4:	d5 2e       	mov	r13, r21
    5ac6:	e6 2e       	mov	r14, r22
    5ac8:	f7 2e       	mov	r15, r23
    5aca:	08 2f       	mov	r16, r24
    5acc:	19 2f       	mov	r17, r25
    5ace:	ab 86       	std	Y+11, r10	; 0x0b
    5ad0:	bc 86       	std	Y+12, r11	; 0x0c
    5ad2:	cd 86       	std	Y+13, r12	; 0x0d
    5ad4:	de 86       	std	Y+14, r13	; 0x0e
    5ad6:	ef 86       	std	Y+15, r14	; 0x0f
    5ad8:	f8 8a       	std	Y+16, r15	; 0x10
    5ada:	09 8b       	std	Y+17, r16	; 0x11
    5adc:	1a 8b       	std	Y+18, r17	; 0x12
	while(Copy_uint32Data / Local_uint8Dividor){
		Local_uint8Dividor *= 10;
		++Local_uint8Digits;
	}

	while(Local_uint8Digits--){
    5ade:	89 85       	ldd	r24, Y+9	; 0x09
    5ae0:	ab 96       	adiw	r28, 0x2b	; 43
    5ae2:	8f af       	std	Y+63, r24	; 0x3f
    5ae4:	ab 97       	sbiw	r28, 0x2b	; 43
    5ae6:	ab 96       	adiw	r28, 0x2b	; 43
    5ae8:	9f ad       	ldd	r25, Y+63	; 0x3f
    5aea:	ab 97       	sbiw	r28, 0x2b	; 43
    5aec:	99 23       	and	r25, r25
    5aee:	21 f0       	breq	.+8      	; 0x5af8 <LCD_enuDisplayNumber+0x840>
    5af0:	81 e0       	ldi	r24, 0x01	; 1
    5af2:	ab 96       	adiw	r28, 0x2b	; 43
    5af4:	8f af       	std	Y+63, r24	; 0x3f
    5af6:	ab 97       	sbiw	r28, 0x2b	; 43
    5af8:	ab 96       	adiw	r28, 0x2b	; 43
    5afa:	8f ad       	ldd	r24, Y+63	; 0x3f
    5afc:	ab 97       	sbiw	r28, 0x2b	; 43
    5afe:	99 85       	ldd	r25, Y+9	; 0x09
    5b00:	91 50       	subi	r25, 0x01	; 1
    5b02:	99 87       	std	Y+9, r25	; 0x09
    5b04:	88 23       	and	r24, r24
    5b06:	09 f0       	breq	.+2      	; 0x5b0a <LCD_enuDisplayNumber+0x852>
    5b08:	6c cf       	rjmp	.-296    	; 0x59e2 <LCD_enuDisplayNumber+0x72a>
		Local_uint8Dividor /= 10;
		Local_enuErrorStates = LCD_enuSendData('0' + (Copy_uint32Data / Local_uint8Dividor));
		Copy_uint32Data -= ((Copy_uint32Data / Local_uint8Dividor) * Local_uint8Dividor);
	}

	return Local_enuErrorStates;
    5b0a:	8a 85       	ldd	r24, Y+10	; 0x0a
}
    5b0c:	c6 59       	subi	r28, 0x96	; 150
    5b0e:	df 4f       	sbci	r29, 0xFF	; 255
    5b10:	0f b6       	in	r0, 0x3f	; 63
    5b12:	f8 94       	cli
    5b14:	de bf       	out	0x3e, r29	; 62
    5b16:	0f be       	out	0x3f, r0	; 63
    5b18:	cd bf       	out	0x3d, r28	; 61
    5b1a:	cf 91       	pop	r28
    5b1c:	df 91       	pop	r29
    5b1e:	1f 91       	pop	r17
    5b20:	0f 91       	pop	r16
    5b22:	ff 90       	pop	r15
    5b24:	ef 90       	pop	r14
    5b26:	df 90       	pop	r13
    5b28:	cf 90       	pop	r12
    5b2a:	bf 90       	pop	r11
    5b2c:	af 90       	pop	r10
    5b2e:	08 95       	ret

00005b30 <main>:
#include "LCD_int.h"


#include "util/delay.h"

int main(void){
    5b30:	df 93       	push	r29
    5b32:	cf 93       	push	r28
    5b34:	cd b7       	in	r28, 0x3d	; 61
    5b36:	de b7       	in	r29, 0x3e	; 62
    5b38:	2e 97       	sbiw	r28, 0x0e	; 14
    5b3a:	0f b6       	in	r0, 0x3f	; 63
    5b3c:	f8 94       	cli
    5b3e:	de bf       	out	0x3e, r29	; 62
    5b40:	0f be       	out	0x3f, r0	; 63
    5b42:	cd bf       	out	0x3d, r28	; 61

	LCD_enuInit();
    5b44:	0e 94 45 1f 	call	0x3e8a	; 0x3e8a <LCD_enuInit>

	while(1){
		LCD_enuSendCommand(0x80);
    5b48:	80 e8       	ldi	r24, 0x80	; 128
    5b4a:	0e 94 5d 21 	call	0x42ba	; 0x42ba <LCD_enuSendCommand>
		LCD_enuDisplayChar('A');
    5b4e:	81 e4       	ldi	r24, 0x41	; 65
    5b50:	0e 94 70 21 	call	0x42e0	; 0x42e0 <LCD_enuDisplayChar>
		LCD_enuDisplayChar('m');
    5b54:	8d e6       	ldi	r24, 0x6D	; 109
    5b56:	0e 94 70 21 	call	0x42e0	; 0x42e0 <LCD_enuDisplayChar>
		LCD_enuDisplayChar('r');
    5b5a:	82 e7       	ldi	r24, 0x72	; 114
    5b5c:	0e 94 70 21 	call	0x42e0	; 0x42e0 <LCD_enuDisplayChar>
		LCD_enuDisplayString(" TAHA");
    5b60:	80 e6       	ldi	r24, 0x60	; 96
    5b62:	90 e0       	ldi	r25, 0x00	; 0
    5b64:	0e 94 82 21 	call	0x4304	; 0x4304 <LCD_enuDisplayString>
		LCD_enuDisplayChar(' ');
    5b68:	80 e2       	ldi	r24, 0x20	; 32
    5b6a:	0e 94 70 21 	call	0x42e0	; 0x42e0 <LCD_enuDisplayChar>
		LCD_enuDisplayChar('0');
    5b6e:	80 e3       	ldi	r24, 0x30	; 48
    5b70:	0e 94 70 21 	call	0x42e0	; 0x42e0 <LCD_enuDisplayChar>
		LCD_enuSendCommand(0xc0);
    5b74:	80 ec       	ldi	r24, 0xC0	; 192
    5b76:	0e 94 5d 21 	call	0x42ba	; 0x42ba <LCD_enuSendCommand>
		LCD_enuDisplayFloat(-19.6589);
    5b7a:	6d e6       	ldi	r22, 0x6D	; 109
    5b7c:	75 e4       	ldi	r23, 0x45	; 69
    5b7e:	8d e9       	ldi	r24, 0x9D	; 157
    5b80:	91 ec       	ldi	r25, 0xC1	; 193
    5b82:	0e 94 f8 21 	call	0x43f0	; 0x43f0 <LCD_enuDisplayFloat>
		LCD_enuDisplayChar(' ');
    5b86:	80 e2       	ldi	r24, 0x20	; 32
    5b88:	0e 94 70 21 	call	0x42e0	; 0x42e0 <LCD_enuDisplayChar>
		LCD_enuDisplayInteger(-1902000);
    5b8c:	20 e5       	ldi	r18, 0x50	; 80
    5b8e:	3a ef       	ldi	r19, 0xFA	; 250
    5b90:	42 ee       	ldi	r20, 0xE2	; 226
    5b92:	5f ef       	ldi	r21, 0xFF	; 255
    5b94:	6f ef       	ldi	r22, 0xFF	; 255
    5b96:	7f ef       	ldi	r23, 0xFF	; 255
    5b98:	8f ef       	ldi	r24, 0xFF	; 255
    5b9a:	9f ef       	ldi	r25, 0xFF	; 255
    5b9c:	0e 94 b7 21 	call	0x436e	; 0x436e <LCD_enuDisplayInteger>
    5ba0:	80 e0       	ldi	r24, 0x00	; 0
    5ba2:	90 e0       	ldi	r25, 0x00	; 0
    5ba4:	aa ef       	ldi	r26, 0xFA	; 250
    5ba6:	b3 e4       	ldi	r27, 0x43	; 67
    5ba8:	8b 87       	std	Y+11, r24	; 0x0b
    5baa:	9c 87       	std	Y+12, r25	; 0x0c
    5bac:	ad 87       	std	Y+13, r26	; 0x0d
    5bae:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5bb0:	6b 85       	ldd	r22, Y+11	; 0x0b
    5bb2:	7c 85       	ldd	r23, Y+12	; 0x0c
    5bb4:	8d 85       	ldd	r24, Y+13	; 0x0d
    5bb6:	9e 85       	ldd	r25, Y+14	; 0x0e
    5bb8:	20 e0       	ldi	r18, 0x00	; 0
    5bba:	30 e0       	ldi	r19, 0x00	; 0
    5bbc:	4a e7       	ldi	r20, 0x7A	; 122
    5bbe:	53 e4       	ldi	r21, 0x43	; 67
    5bc0:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    5bc4:	dc 01       	movw	r26, r24
    5bc6:	cb 01       	movw	r24, r22
    5bc8:	8f 83       	std	Y+7, r24	; 0x07
    5bca:	98 87       	std	Y+8, r25	; 0x08
    5bcc:	a9 87       	std	Y+9, r26	; 0x09
    5bce:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    5bd0:	6f 81       	ldd	r22, Y+7	; 0x07
    5bd2:	78 85       	ldd	r23, Y+8	; 0x08
    5bd4:	89 85       	ldd	r24, Y+9	; 0x09
    5bd6:	9a 85       	ldd	r25, Y+10	; 0x0a
    5bd8:	20 e0       	ldi	r18, 0x00	; 0
    5bda:	30 e0       	ldi	r19, 0x00	; 0
    5bdc:	40 e8       	ldi	r20, 0x80	; 128
    5bde:	5f e3       	ldi	r21, 0x3F	; 63
    5be0:	0e 94 f9 16 	call	0x2df2	; 0x2df2 <__ltsf2>
    5be4:	88 23       	and	r24, r24
    5be6:	2c f4       	brge	.+10     	; 0x5bf2 <main+0xc2>
		__ticks = 1;
    5be8:	81 e0       	ldi	r24, 0x01	; 1
    5bea:	90 e0       	ldi	r25, 0x00	; 0
    5bec:	9e 83       	std	Y+6, r25	; 0x06
    5bee:	8d 83       	std	Y+5, r24	; 0x05
    5bf0:	3f c0       	rjmp	.+126    	; 0x5c70 <main+0x140>
	else if (__tmp > 65535)
    5bf2:	6f 81       	ldd	r22, Y+7	; 0x07
    5bf4:	78 85       	ldd	r23, Y+8	; 0x08
    5bf6:	89 85       	ldd	r24, Y+9	; 0x09
    5bf8:	9a 85       	ldd	r25, Y+10	; 0x0a
    5bfa:	20 e0       	ldi	r18, 0x00	; 0
    5bfc:	3f ef       	ldi	r19, 0xFF	; 255
    5bfe:	4f e7       	ldi	r20, 0x7F	; 127
    5c00:	57 e4       	ldi	r21, 0x47	; 71
    5c02:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__gtsf2>
    5c06:	18 16       	cp	r1, r24
    5c08:	4c f5       	brge	.+82     	; 0x5c5c <main+0x12c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5c0a:	6b 85       	ldd	r22, Y+11	; 0x0b
    5c0c:	7c 85       	ldd	r23, Y+12	; 0x0c
    5c0e:	8d 85       	ldd	r24, Y+13	; 0x0d
    5c10:	9e 85       	ldd	r25, Y+14	; 0x0e
    5c12:	20 e0       	ldi	r18, 0x00	; 0
    5c14:	30 e0       	ldi	r19, 0x00	; 0
    5c16:	40 e2       	ldi	r20, 0x20	; 32
    5c18:	51 e4       	ldi	r21, 0x41	; 65
    5c1a:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <__mulsf3>
    5c1e:	dc 01       	movw	r26, r24
    5c20:	cb 01       	movw	r24, r22
    5c22:	bc 01       	movw	r22, r24
    5c24:	cd 01       	movw	r24, r26
    5c26:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    5c2a:	dc 01       	movw	r26, r24
    5c2c:	cb 01       	movw	r24, r22
    5c2e:	9e 83       	std	Y+6, r25	; 0x06
    5c30:	8d 83       	std	Y+5, r24	; 0x05
    5c32:	0f c0       	rjmp	.+30     	; 0x5c52 <main+0x122>
    5c34:	89 e1       	ldi	r24, 0x19	; 25
    5c36:	90 e0       	ldi	r25, 0x00	; 0
    5c38:	9c 83       	std	Y+4, r25	; 0x04
    5c3a:	8b 83       	std	Y+3, r24	; 0x03
    5c3c:	8b 81       	ldd	r24, Y+3	; 0x03
    5c3e:	9c 81       	ldd	r25, Y+4	; 0x04
    5c40:	01 97       	sbiw	r24, 0x01	; 1
    5c42:	f1 f7       	brne	.-4      	; 0x5c40 <main+0x110>
    5c44:	9c 83       	std	Y+4, r25	; 0x04
    5c46:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5c48:	8d 81       	ldd	r24, Y+5	; 0x05
    5c4a:	9e 81       	ldd	r25, Y+6	; 0x06
    5c4c:	01 97       	sbiw	r24, 0x01	; 1
    5c4e:	9e 83       	std	Y+6, r25	; 0x06
    5c50:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5c52:	8d 81       	ldd	r24, Y+5	; 0x05
    5c54:	9e 81       	ldd	r25, Y+6	; 0x06
    5c56:	00 97       	sbiw	r24, 0x00	; 0
    5c58:	69 f7       	brne	.-38     	; 0x5c34 <main+0x104>
    5c5a:	76 cf       	rjmp	.-276    	; 0x5b48 <main+0x18>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5c5c:	6f 81       	ldd	r22, Y+7	; 0x07
    5c5e:	78 85       	ldd	r23, Y+8	; 0x08
    5c60:	89 85       	ldd	r24, Y+9	; 0x09
    5c62:	9a 85       	ldd	r25, Y+10	; 0x0a
    5c64:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    5c68:	dc 01       	movw	r26, r24
    5c6a:	cb 01       	movw	r24, r22
    5c6c:	9e 83       	std	Y+6, r25	; 0x06
    5c6e:	8d 83       	std	Y+5, r24	; 0x05
    5c70:	8d 81       	ldd	r24, Y+5	; 0x05
    5c72:	9e 81       	ldd	r25, Y+6	; 0x06
    5c74:	9a 83       	std	Y+2, r25	; 0x02
    5c76:	89 83       	std	Y+1, r24	; 0x01
    5c78:	89 81       	ldd	r24, Y+1	; 0x01
    5c7a:	9a 81       	ldd	r25, Y+2	; 0x02
    5c7c:	01 97       	sbiw	r24, 0x01	; 1
    5c7e:	f1 f7       	brne	.-4      	; 0x5c7c <main+0x14c>
    5c80:	9a 83       	std	Y+2, r25	; 0x02
    5c82:	89 83       	std	Y+1, r24	; 0x01
    5c84:	61 cf       	rjmp	.-318    	; 0x5b48 <main+0x18>

00005c86 <__mulsi3>:
    5c86:	62 9f       	mul	r22, r18
    5c88:	d0 01       	movw	r26, r0
    5c8a:	73 9f       	mul	r23, r19
    5c8c:	f0 01       	movw	r30, r0
    5c8e:	82 9f       	mul	r24, r18
    5c90:	e0 0d       	add	r30, r0
    5c92:	f1 1d       	adc	r31, r1
    5c94:	64 9f       	mul	r22, r20
    5c96:	e0 0d       	add	r30, r0
    5c98:	f1 1d       	adc	r31, r1
    5c9a:	92 9f       	mul	r25, r18
    5c9c:	f0 0d       	add	r31, r0
    5c9e:	83 9f       	mul	r24, r19
    5ca0:	f0 0d       	add	r31, r0
    5ca2:	74 9f       	mul	r23, r20
    5ca4:	f0 0d       	add	r31, r0
    5ca6:	65 9f       	mul	r22, r21
    5ca8:	f0 0d       	add	r31, r0
    5caa:	99 27       	eor	r25, r25
    5cac:	72 9f       	mul	r23, r18
    5cae:	b0 0d       	add	r27, r0
    5cb0:	e1 1d       	adc	r30, r1
    5cb2:	f9 1f       	adc	r31, r25
    5cb4:	63 9f       	mul	r22, r19
    5cb6:	b0 0d       	add	r27, r0
    5cb8:	e1 1d       	adc	r30, r1
    5cba:	f9 1f       	adc	r31, r25
    5cbc:	bd 01       	movw	r22, r26
    5cbe:	cf 01       	movw	r24, r30
    5cc0:	11 24       	eor	r1, r1
    5cc2:	08 95       	ret

00005cc4 <__udivmodsi4>:
    5cc4:	a1 e2       	ldi	r26, 0x21	; 33
    5cc6:	1a 2e       	mov	r1, r26
    5cc8:	aa 1b       	sub	r26, r26
    5cca:	bb 1b       	sub	r27, r27
    5ccc:	fd 01       	movw	r30, r26
    5cce:	0d c0       	rjmp	.+26     	; 0x5cea <__udivmodsi4_ep>

00005cd0 <__udivmodsi4_loop>:
    5cd0:	aa 1f       	adc	r26, r26
    5cd2:	bb 1f       	adc	r27, r27
    5cd4:	ee 1f       	adc	r30, r30
    5cd6:	ff 1f       	adc	r31, r31
    5cd8:	a2 17       	cp	r26, r18
    5cda:	b3 07       	cpc	r27, r19
    5cdc:	e4 07       	cpc	r30, r20
    5cde:	f5 07       	cpc	r31, r21
    5ce0:	20 f0       	brcs	.+8      	; 0x5cea <__udivmodsi4_ep>
    5ce2:	a2 1b       	sub	r26, r18
    5ce4:	b3 0b       	sbc	r27, r19
    5ce6:	e4 0b       	sbc	r30, r20
    5ce8:	f5 0b       	sbc	r31, r21

00005cea <__udivmodsi4_ep>:
    5cea:	66 1f       	adc	r22, r22
    5cec:	77 1f       	adc	r23, r23
    5cee:	88 1f       	adc	r24, r24
    5cf0:	99 1f       	adc	r25, r25
    5cf2:	1a 94       	dec	r1
    5cf4:	69 f7       	brne	.-38     	; 0x5cd0 <__udivmodsi4_loop>
    5cf6:	60 95       	com	r22
    5cf8:	70 95       	com	r23
    5cfa:	80 95       	com	r24
    5cfc:	90 95       	com	r25
    5cfe:	9b 01       	movw	r18, r22
    5d00:	ac 01       	movw	r20, r24
    5d02:	bd 01       	movw	r22, r26
    5d04:	cf 01       	movw	r24, r30
    5d06:	08 95       	ret

00005d08 <__prologue_saves__>:
    5d08:	2f 92       	push	r2
    5d0a:	3f 92       	push	r3
    5d0c:	4f 92       	push	r4
    5d0e:	5f 92       	push	r5
    5d10:	6f 92       	push	r6
    5d12:	7f 92       	push	r7
    5d14:	8f 92       	push	r8
    5d16:	9f 92       	push	r9
    5d18:	af 92       	push	r10
    5d1a:	bf 92       	push	r11
    5d1c:	cf 92       	push	r12
    5d1e:	df 92       	push	r13
    5d20:	ef 92       	push	r14
    5d22:	ff 92       	push	r15
    5d24:	0f 93       	push	r16
    5d26:	1f 93       	push	r17
    5d28:	cf 93       	push	r28
    5d2a:	df 93       	push	r29
    5d2c:	cd b7       	in	r28, 0x3d	; 61
    5d2e:	de b7       	in	r29, 0x3e	; 62
    5d30:	ca 1b       	sub	r28, r26
    5d32:	db 0b       	sbc	r29, r27
    5d34:	0f b6       	in	r0, 0x3f	; 63
    5d36:	f8 94       	cli
    5d38:	de bf       	out	0x3e, r29	; 62
    5d3a:	0f be       	out	0x3f, r0	; 63
    5d3c:	cd bf       	out	0x3d, r28	; 61
    5d3e:	09 94       	ijmp

00005d40 <__epilogue_restores__>:
    5d40:	2a 88       	ldd	r2, Y+18	; 0x12
    5d42:	39 88       	ldd	r3, Y+17	; 0x11
    5d44:	48 88       	ldd	r4, Y+16	; 0x10
    5d46:	5f 84       	ldd	r5, Y+15	; 0x0f
    5d48:	6e 84       	ldd	r6, Y+14	; 0x0e
    5d4a:	7d 84       	ldd	r7, Y+13	; 0x0d
    5d4c:	8c 84       	ldd	r8, Y+12	; 0x0c
    5d4e:	9b 84       	ldd	r9, Y+11	; 0x0b
    5d50:	aa 84       	ldd	r10, Y+10	; 0x0a
    5d52:	b9 84       	ldd	r11, Y+9	; 0x09
    5d54:	c8 84       	ldd	r12, Y+8	; 0x08
    5d56:	df 80       	ldd	r13, Y+7	; 0x07
    5d58:	ee 80       	ldd	r14, Y+6	; 0x06
    5d5a:	fd 80       	ldd	r15, Y+5	; 0x05
    5d5c:	0c 81       	ldd	r16, Y+4	; 0x04
    5d5e:	1b 81       	ldd	r17, Y+3	; 0x03
    5d60:	aa 81       	ldd	r26, Y+2	; 0x02
    5d62:	b9 81       	ldd	r27, Y+1	; 0x01
    5d64:	ce 0f       	add	r28, r30
    5d66:	d1 1d       	adc	r29, r1
    5d68:	0f b6       	in	r0, 0x3f	; 63
    5d6a:	f8 94       	cli
    5d6c:	de bf       	out	0x3e, r29	; 62
    5d6e:	0f be       	out	0x3f, r0	; 63
    5d70:	cd bf       	out	0x3d, r28	; 61
    5d72:	ed 01       	movw	r28, r26
    5d74:	08 95       	ret

00005d76 <_exit>:
    5d76:	f8 94       	cli

00005d78 <__stop_program>:
    5d78:	ff cf       	rjmp	.-2      	; 0x5d78 <__stop_program>
